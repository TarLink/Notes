
              
   GRAPHIQL   
              



VERSION ==>                       #0.9.3
                                  #React component to execute client-side graphQL operation, and explore schema

<GraphiQL/>                       #React component to:
                                  #  - execute client-side graphQL operations (including variables) with code editor (using CodeMirror)
                                  #  - schema explorer (includes all introspection of __schema root types, including description, excluding deprecation)
                                  #Props:
                                  #  - fetcher(BODY)->PROMISE(RESPONSE):
                                  #     - should POST graphql endpoint with Content-Type: application/json [C] and request BODY
                                  #  - schema SCHEMA (def: uses introspection query)
                                  #  - query 'QUERY': initially shown
                                  #  - defaultQuery 'QUERY': shown when query is empty
                                  #  - variables 'VARIABLES': initially shown
                                  #  - operationName 'OPERATION'
                                  #  - onEditQuery('QUERY'), onEditVariables('VARIABLES'), onEditOperationName('OPERATION'), onToggleDocs(BOOL): hooks
                                  #  - editorTheme STR (def: 'graphiql'): CodeMirror CSS theme
                                  #Does:
                                  #  - syntax highlighting
                                  #  - validation and error reporing
                                  #  - autocomplete
                                  #  - auto-add possible subfields when adding parent field
                                  #  - prettify button
                                  #  - persists on localStorage (or PROPS.storage)
                                  #Can customize further, by reimplementing render() and reusing children components (see online doc),
                                  #e.g. changing logo, footer, layout, etc.
