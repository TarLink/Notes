
                           
   CSS_ARCHITECTURE_TEMP   
                           

BEM or RSCSS:
  - parts are dasherized, or camelcased
  - only use .CLASS selectors
  - use js-CLASS for JavaScript selection

BEM:
  - selector is .BLOCK[__ELEMENT][--MODIFIER[--MODIFIERVALUE]]:
     - BLOCK: [sub]component (unique across app)
        - often at least two words
        - sometimes namespaced: c- (component), o- (object), u- (utility)
     - ELEMENT: [sub]component's part (unique across BLOCK)
        - lower parts and upper parts have same level, except if they are extracted as a BLOCK
     - MODIFIER: state (interaction, styling)
        - :PSEUDO can be used instead or in addition to MODIFIER
        - HTML need to have both selectors: with and without MODIFIER
        - states:
           - .has|is-MODIFIER instead of --MODIFIER
        - responsive suffix:
           - @MODIFIER instead of --MODIFIER
           - often used for media queries breakpoints
  - can sometimes use _ or - instead of __ or --
  - a given DOM element can be several BLOCK|ELEMENT ('BEM' mixin)
  - file organization: BLOCK/[__ELEMENT/][--MODIFIER/]FULL_SELECTOR.css|js|png|etc.


bem-constructor:
  - Sass mixin (1.0.0) to write BEM notation
  - Each mixin can take extra argument, which is same as making several calls

@include object('BLOCK'[, 'object|component|utility']) {...}  .o|c|u-BLOCK { ... }
  - can overrides namespaces 'o|c|u' with $bem-block-namespaces.TYPE STR and $bem-use-namespaces BOOL
@include element('ELEMENT') {...}                             .o-BLOCK__ELEMENT {...}
  - can override separator '__' with $bem-element-separator
@include modifies-element('ELEMENT') {...}                    > .o-BLOCK__ELEMENT {...}
@include modifier('MODIFIER') {...}                           .o-BLOCK[__ELEMENT]--MODIFIER{...}
  - can override separator '--' with $bem-modifier-separator
@include state('STATE') {...}                                 .o-BLOCK[__ELEMENT].is-MODIFIER{...}
  - can override namespace 'is' with $bem-state-namespace
@include suffix('MODIFIER') {...}                             .o-BLOCK[__ELEMENT]@MODIFIER{...}
  - can override namespace '@' with $bem-suffix-namespace
@include theme('THEME') {...}                                 .t-THEME ... {...}
  - can override namespace 't' with $bem-theme-namespace

@bem-debug(): show some color borders to distinguish components, elements, modifiers, etc.



RSCSS:
  - selector is .BLOCK[.-MODIFIER] [>] .ELEMENT[-MODIFIER]
     - BLOCK (called "component"): like BEM, but must be at least two different words
     - ELEMENT: like BEM
     - MODIFIER (called "variant")
     - >: otherwise might target .BLOCK .ANOTHERBLOCK .ELEMENT
  - file organization: BLOCK.css
  - focus on using UI component:
     - 1 UI component === 1 BLOCK
     - BLOCK declaration should not use positioning (so can be reused in different contexts)
        - but BLOCK2 using BLOCK might position BLOCK, and BLOCK might position ELEMENT
