
          
   ESPREE  
          



ALTERNATIVES ==>                  #See acorn
                                  #Still documented since it used by ESLint

VERSION ==>                       #3.4.3


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            PARSER             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESPREE.parse('JS'[, OPTS])        #Like ACORN.parse('JS'), but with different OPTS:
 ->TOP_NODE                       #  - ecmaVersion (def: 5)
																	#  - range: like ACORN OPTS.ranges
																	#  - loc: like ACORN OPTS.locations
																	#  - sourceType: like ACORN OPTS.sourceType
																	#  - comment BOOL (def: false): set TOP_NODE.comments (in Esprima format)
																	#  - attachComment BOOL (def: false): set each NODE.leadingComments|trailingComments
                                  #    (in Esprima format)
																	#  - tolerant BOOL (def: false): set TOKEN_ARR.errors
																	#  - tokens BOOL (def: false): set TOP_NODE.tokens TOKEN_ARR
																	#  - ecmaFeatures:
																	#     - impliedStrict BOOL (def: false): imply 'use strict'
																	#     - globalReturn BOOL (def: false): use ACORN OPTS.allowReturnOutsideFunction
																	#     - jsx BOOL (def: false): use acorn-jsx
																	#     - experimentalObjectRestSpread BOOL (def: false):
                                  #       using new NODE types ExperimentalSpreadProperty and ExperimentalRestProperty
                                  #RestElement -> ExperimentalRestProperty
                                  #SpreadElement -> ExperimentalSpreadProperty


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           TOKENIZER           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ESPREE.tokenize('JS'[, OPTS])     #Like [...ACORN.tokenizer('JS')], but:
  ->TOKEN_ARR                     #  - converts to Esprima token format OBJ:
                                  #     - type STR, among: Null, Boolean, Numeric, String, RegularExpression, Template,
                                  #       Identifier, Keyword, Punctuator, JSXText, JSXIdentifier, EOF
                                  #     - value STR
                                  #  - different OPTS: ecmaVersion, range, loc, comment, tolerant, ecmaFeatures (see above)
