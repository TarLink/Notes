
          
   RECAST  
          



ALTERNATIVES ==>                  #  - escodegen: not maintained anymore
                                  #  - recast (preferred)

VERSION ==>                       #0.12.5
                                  #Reverse JavaScript parser. Also do parsing (forwarding to Esprima)


RECAST.parse('JS'[, OPTS])->NODE  #Similar to ESPRIMA.parse()
                                  #Automatically use OPTS:
                                  #  - jsx true, ecmaVersion 6, sourceType 'module'
                                  #  - loc true, locations true, comment true, range OPTS.range (def: false)
                                  #Can specify OPTS:
                                  #  - tabWidth (def: 4)
                                  #  - sourceFileName STR: for source maps
                                  #  - tolerant BOOL (def: true)

RECAST.print(NODE[, OPTS])->OBJ   #Reverse parsing, with OBJ:
                                  #  - code 'JS'
                                  #OPTS:
                                  #  -
                                  #Only pretty prints what was changed, i.e. RECAST.print(RECAST.parse('JS'))
                                  #guaranteed to === 'JS', including comments and whitespaces
RECAST.prettyPrint(NODE[, OPTS])
 ->OBJ                            #Same as print() but pretty prints everything.
