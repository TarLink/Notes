
             
   ESCOMPLEX  
             



VERSION ==>                       #2.0.0-alpha
                                  #Must use GitHub URL to get real last version


ESCOMPLEX.analyse
('JS'|OBJ_ARR[, OPTS][, POPTS])
                                  #OBJ_ARR:
                                  #  - code 'JS'
                                  #  - path 'PATH' (used for dependency analysis)
                                  #OPTS:
                                  #  - ???
                                  #Returns:
                                  #  - reports OBJ_ARR (one per file):
                                  #     - path STR
                                  #     - functions OBJ_ARR:
                                  #        - name STR
                                  #        - line NUM
                                  #        - sloc:
                                  #           - logical NUM
                                  #           - physical NUM
                                  #        - params NUM
                                  #        - cyclomatic NUM
                                  #        - cyclomaticDensity NUM
                                  #        - halstead:
                                  #           - vocabulary NUM
                                  #           - difficulty NUM
                                  #           - volume NUM
                                  #           - effort NUM
                                  #           - bugs NUM
                                  #           - time NUM
                                  #     - aggregate OBJ:
                                  #        - like "functions" but for all functions in a file
                                  #        - no "name" nor "line"
                                  #     - dependencies ARR
                                  #     - maintainability NUM
                                  #  - adjacencyMatrix NUM_ARR_ARR
                                  #  - firstOrderDensity NUM
                                  #  - visibilityMatrix NUM_ARR_ARR
                                  #  - changeCost NUM
                                  #  - coreSize NUM
                                  #  - loc NUM
                                  #  - cyclomatic NUM
                                  #  - effort NUM
                                  #  - params NUM
                                  #  - maintainability NUM
                                  #If 'JS' is passed, only returns one reports OBJ
                                  #Uses Espree for AST parsing:
                                  #  - using espress.parse(..., OBJ), where OBJ:
                                  #     - is { ecmaVersion: 8, loc: true }
                                  #     - can be partially assigned with POPTS
                                  #Only ESTree es5 spec, not es2015, es2016, es2017, extensions nor experimental.
                                  #Also some deprecated ESTree are still there.


                                  #Possible properties:
                                  #  - lloc NUM:
                                  #     - 1 for:
                                  #        - what is or could be a full statement:
                                  #           - break|continue|return|throw
                                  #           - accessing a OBJ|ARR|FUNC_LIT
                                  #           - declaration
                                  #        - a full expression: EXPR, each OBJ VAR, [new] FUNC()
                                  #        - a structure: do|for|forin|if|else|switch|while|with, try|catch
                                  #     - not for: ?:, debugger|LABEL, parts of VAL (e.g. &&)
                                  #     - sumed to reports.functions.sloc.logical (starts at 0)
                                  #  - cyclomatic NUM:
                                  #     - number of possible branches
                                  #     - adds 1 for catch, dowhile|while, forin|for, if|?:|switch, &&, ||
                                  #     - sumed to reports.functions.cyclomatic (starts at 1)
                                  #  - operators 'TOKEN'[_ARR] or { filter(NODE)->BOOL, identifier 'TOKEN'[(NODE)] }[_ARR]:
                                  #     - main 'TOKEN', e.g. '=' for a declaration
                                  #     - "filter" is a test function
                                  #     - adds:
                                  #        - reports.functions|total.halstead.operators.identifiers 'TOKEN'_ARR, with each unique 'TOKEN'
                                  #        - reports.functions|total.halstead.operators.distinct NUM: number of unique 'TOKEN'
                                  #        - reports.functions|total.halstead init at new HalsteadMetrics()???
                                  #  - operands FUNC(NODE)->'VAL' or ARR of them
                                  #     - get values (i.e. what is not invariant) from VARs, declarations, FUNC_EXPR, VAL_LIT
                                  #     - some use safeName utility, e.g. get NODE.name, defaulting to '<anonymous>'
                                  #     - adds:
                                  #        - reports.functions|total.halstead.operands.identifiers 'VAL'_ARR, with each unique 'VAL'
                                  #        - reports.functions|total.halstead.operands.distinct NUM: number of unique 'VAL'
                                  #  - dependencies(NODE, BOOL):
                                  #     - calculated by looking at FUNC(...) that are either require[.config](...)
                                  #     - adds to reports.dependencies OBJ_ARR:
                                  #        - line NUM (line number)
                                  #        - type 'CommonJS' or 'AMD'
                                  #        - path 'MDL' or (if not literal value) '* dynamic dependency|ies *'
                                  #           - will use real 'MDL' if 'AMD' aliases were configured using
                                  #             require.config(CONFVAR paths)
                                  #  - children STR[_ARR]
                                  #     - used for recursion
                                  #  - newScope BOOL:
                                  #     - true for FUNC declarations
                                  #     - used during for recursion to indicate new scope
                                  #     - when inside a child scope, will use new reports.functions.* OBJ, including:
                                  #        - reports.functions.name 'FUNC' (including assigned VAR, or def '<anonymous>')
                                  #        - reports.functions.params NUM
                                  #        - reports.functions.line NUM (line number)
                                  #        - reports.functions.sloc.physical NUM (number of source lines)
                                  #report.aggregate.*:
                                  #  - sum of of the report.functions.* for: sloc.logical, cyclomatic,
                                  #    halstead.operators|operands
                                  #  - params: sum of all functions number of args
                                  #  - also starts with top-level function itself (same format as reports.functions),
                                  #    i.e. function with no name and no params
                                  #report.total.*:
                                  #Current report:
                                  #  -
