
         
   CHALK  
         



VERSION ==>                           #Node module (1.1.1)


CHALK.STYLE...(STR...)                #Apply STYLE on STR... among:
                                      #  - reset|bold|dim|underline|inverse|hidden
                                      #    (not on all terminals) italic|strikethrough
                                      #  - [bg]black|red|green|yellow|blue|magenta|cyan|white|gray[Bright]
                                      #Result must be put in a console.log()
                                      #STR can be the result of another CHALK.STYLE()

CHALK.enabled                         #Can disable it. Depends on CHALK.supportsColor too.
CHALK.supportsColor                   #Changed according to ENVVAR FORCE_COLOR=1|0

ANSI-REGEX()->REGEXP                 ##REGEXP checking if a STR has ANSI color sequences
                                     ##Package ansi-regex (3.0.0)
HAS-ANSI(STR)->BOOL                  ##Detects ANSI color sequences, using ANSI-REGEX
                                     ##Package has-ansi (3.0.0)
has-ansi [STR]                       ##Same as CLI. Def: stdin
                                     ##Package has-ansi-cli (3.0.0)

STRIP-ANSI(STR)->STR                 ##Removes ANSI color sequences, using ANSI-REGEX
                                     ##Package strip-ansi (4.0.0)
strip-ansi [STR]                     ##Same as CLI. Def: stdin
                                     ##Package strip-ansi-cli (2.0.0)

ANSI-STYLES.STYLE.open|close STR     ##ANSI color sequences
                                     ##Package ansi-styles (3.2.0)
ANSI-STYLES.modifier.MODIFIER
 .open|close STR                     ##ANSI sequences, e.g. for bold, etc.
ANSI-STYLES.color|bgColor.COLOR
 .open|close STR                     ##ANSI color sequences
ANSI-STYLES.color|bgColor.close STR  ##ANSI stop sequence, for any COLOR
ANSI-STYLES.codes                    ##Raw ANSI sequences, as a MAP
ANSI-STYLES.color|bgColor            ##ANSICOLOR, for terminal supporting:
 .ansi|ansi256|ansi16m               ##  - 4 bits (16 colors) (def)
                                     ##  - 8 bits (256 colors)
                                     ##  - 24 bits (16 million colors) ("true color")
ANSICOLOR.rgb()
ANSICOLOR.hsl()
ANSICOLOR.hsv()
ANSICOLOR.hwb()
ANSICOLOR.cmyk()
ANSICOLOR.xyz()
ANSICOLOR.lab()
ANSICOLOR.lch()
ANSICOLOR.hex()
ANSICOLOR.keyword()
ANSICOLOR.hcg()
ANSICOLOR.apple()
ANSICOLOR.gray()
ANSICOLOR.ansi16|ansi256|ansi16m()   ##Converts. Cannot be 16|256 to 16 millions

SUPPORTS-COLOR                       ##Either:
                                     ##  - false: terminal does not support color
                                     ##  - level 1|2|3: supports 16, 256 or 16 millions colors
                                     ##  - hasBasic|has256|has16m BOOL: same with booleans
                                     ##Influenced by:
                                     ##  - CLI option --[no-]color[=256|16m]
                                     ##  - ENVVAR FORCE_COLOR=0|1
                                     ##Usually 16 million colors is not detected, and needs to be manually
                                     ##enabled with --color=16m
                                     ##Package supports-color (4.4.0)
supports-color [--256|16m]           ##Same as CLI, using exit code
                                     ##Package supports-color-cli (2.0.0)
