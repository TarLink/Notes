<any>: contextmenu, draggable, dropzone, is, itemid, itemprop, itemref, itemscope, itemtype, slot, translate
  - accessKeyLabel, click(), focus(), blur(), forceSpellCheck(), onclick = FUNC(EVENT), oncontextmenu = FUNC(EVENT), onerror = FUNC(EVENT), ondrag[end|enter|exit|leave|over|start]|drop = FUNC(EVENT), onblur|focus = FUNC(EVENT), onload = FUNC(EVENT)
<a>: download, ping, rev, hreflang, referrerpolicy
  - relList, text, origin, username, password
<area>: hreflang, download, ping, referrerpolicy
  - relList, origin, username, password
<audio>: src, crossorigin, preload, autoplay, loop, muted, controls
  - (also <video>) oncanplay[through] = FUNC(EVENT), ondurationchange = FUNC(EVENT), onemptied = FUNC(EVENT), onended = FUNC(EVENT), onloaded[meta]data = FUNC(EVENT), onloadend|start = FUNC(PROGRESSEVENT), onpause = FUNC(EVENT), onplay[ing] = FUNC(EVENT), onratechange = FUNC(EVENT), onseeked|seeking = FUNC(EVENT), onstalled = FUNC(EVENT), onsuspend = FUNC(EVENT), ontimeupdate = FUNC(EVENT), onvolumechange = FUNC(EVENT), onwaiting = FUNC(EVENT), error, srcObject, currentSrc, networkState, buffered, load(), canPlayType(STR)->ENUM, readyState, seeking, currentTime, fastSeek(NUM), duration, getStartDate(), paused, defaultPlaybackRate, playbackRate, played, seekable, ended, play(), pause(), defaultMuted, audioTracks, videoTracks, textTracks, addTextTrack(TEXTTRACK[, STR[, STR]])->TEXTTRACK
  - new HTMLAudioElement([STR])
<bdi>
<button>: autofocus, disabled, formaction, formenctype, formmethod, formnovalidate, formtarget, menu, name, type, value
  - reportValidity(), labels
<canvas>: width, height
  - getContext(STR[, VAL...])->CONTEXT, toDataURL([STR[, VAL...]])->STR, toBlob(FUNC(BLOB)[, STR[, VAL...]]), probablySupportsContext(STR[, VAL...])
<caption>
<col>: span
<colgroup>: span
<data>: value
<datalist>
  - options
<details>: open
  - ontoggle = FUNC(EVENT)
<dialog>: open
  - oncancel = FUNC(EVENT), onclose = FUNC(EVENT), returnValue, show[Modal]([MOUSEEVENT|ELEM]), close([STR])
<embed>: src, type, width, height
  - getSVGDocument()
<fieldset>: disabled, name
  - type, elements, reportValidity()
<form>:
  - encoding, checkValidity(), reportValidity()
<hgroup>
<html>: manifest
<iframe>: src, srcdoc, name, sandbox, allowfullscreen, allowusermedia, width, height, referrerpolicy
  - contentDocument, contentWindow, getSVGDocument()->DOCUMENT
<img>: alt, src, srcset, sizes, crossorigin, width, height, referrerpolicy, longdesc
  - onloadstart|end = FUNC(EVENT), onprogress = FUNC(PROGRESSEVENT), naturalWidth, naturalHeight, complete, currentSrc, referrerPolicy, new HTMLImageElement([NUM[, NUM]])
<input>: accept, autofocus, dirname, inputmode, list, minlength, multiple, pattern, required, type="datetime[-local]|date|time|month|week|color"
  - valueAsDate, valueAsNumber, stepUp|Down(NUM), reportValidity(), labels, select(), selectionStart|End, selectionDirection, setRangeText(STR, [NUM, NUM[, STR]]), setSelectionRange(NUM, NUM[, STR])
<label>: for
  - control
<legend>
<link>: crossorigin, rev, as, sizes, referrerpolicy
  - relList
<main>
<menu>: type, label
  - onshow = FUNC(RELATEDEVENT)
<menuitem>: type, label, icon, disabled, checked, radiogroup, default
<meter>: value, min, max, low, high, optimum
  - labels
<noscript>
<object>: data, type, typemustmatch, name, width, height
  - contentDocument, contentWindow, getSVGDocument(), reportValidity()
<ol>: reversed, type
<optgroup>: disabled, label
<option>: disabled, label, selected, value
  - defaultSelected, text, index
  - new HTMLOptionElement([STR[, STR[, BOOL[, BOOL]]]])
HTMLOPTIONSCOLL (inherits from HTMLCOLL):
  - add(OPTION|OPTGROUP[, HTMLELEM|NUM]), remove(NUM), selectedIndex
<output>: for, name
  - type, defaultValue, value, reportValidity(), labels
<param>: name, value
<picture>
<progress>: value, max
  - position, labels
<rb>
<rp>
<rt>
<rtc>
<ruby>
<script>: src, type, charset, async, defer, crossorigin, nonce
  - text, onbefore|afterscriptexecute = FUNC(EVENT)
<select>: autocomplete, autofocus, disabled, multiple, name, required, size
  - type, options, ARR-like, OBJ-like, add(OPTION|OPTGROUP[, HTMLELEM|NUM]), remove(NUM), selectedOptions, selectedIndex, value, reportValidity(), labels
<slot>: name
  - assignedNodes([OBJ])
<small>
<source>: src, type, srcset, sizes, media
<style>: nonce
<summary>
<table>
  - caption|tHead|tFoot|tBodies, createCaption|THead|TFoot|TBody()->CAPTION|THEAD|TFOOT|TBODY, deleteCaption|THead|TFoot(), rows, insertRow([NUM])->TR, deleteRow(NUM)
<tbody>
<td>: colspan, rowspan, headers
  - cellIndex
<template>
  - content
<textarea>: autocomplete, autofocus, cols, dirname, disabled, inputmode, maxlength, minlength, name, placeholder, readonly, required, rows, wrap
  - type, defaultValue, value, textLength, reportValidity(), labels, select(), selectionStart|End, selectionDirection, setRangeText(STR[, NUM, NUM[, STR]]), setSelectionRange(NUM, NUM[, STR])
<tfoot>
  - rows, insertRow([NUM]), deleteRow(NUM)
<th>: colspan, rowspan, headers, scope, abbr
  - cellIndex
<thead>
  - rows, insertRow([NUM]), deleteRow(NUM)
<time>: datetime
<tr>
  - rowIndex, sectionRowIndex, cells, insertCell([NUM]), deleteCell(NUM)
<track>: default, kind, label, src, srclang
  - readyState, track
VIDEOTRACK:
  - id, kind, label, language, selected
AUDIOTRACK:
  - id, kind, label, language, enabled
VIDEO|AUDIO|TEXTTRACKLIST:
  - ARR-like, getTrackById(STR)->TRACK, onchange = FUNC(TRACKEVENT), onadd|removetrack = FUNC(TRACKEVENT)
  - (video only) selectedIndex
TEXTTRACK:
  - id, kind, label, language, inBandMetadataTrackDispatchType, mode, cues, activeCues, add|removeCue(TEXTTRACKCUE), oncuechange = FUNC(EVENT)
TEXTTRACKCUE:
  - track, id, start|EndTime, pauseOnExit, onenter|exit = FUNC(EVENT)
TEXTTRACKCUELIST:
  - ARR-like, getCueById(STR)->TEXTTRACKCUE
DATACUE (inherits from TEXTTRACKCUE):
  - new DataCue(NUM, NUM, ARRAYBUFFER), data
<video>: src, crossorigin, poster, preload, autoplay, playsinline, loop, muted, controls, width, height
  - see <audio>
  - videoWidth|Height
<wbr>

ABSTRACTWORKER:
  - onerror = FUNC(EVENT)
BARPROP:
  - visible
BROADCASTCHANNEL:
  - name, postMessage(VAL), close()
CONTROL: 
  - onchange|input|invalid = FUNC(EVENT), onselect = FUNC(EVENT)
CUSTOMELEMENTSREGISTRY
DATATRANSFER:
  - dropEffect, effectAllowed, items, setDragImage(ELEM, NUM, NUM)
DATATRANSFERITEM:
  - kind, type, getAsString(FUNC(STR)), getAsFile()->FILE
DATATRANSFERLIST:
  - ARR-like, add(STR, STR), add(FILE), remove(NUM), clear()
DOCUMENT: 
  - onDOMContentLoaded = FUNC(EVENT), onafter|beforeprint = FUNC(EVENT), onbeforeunload = FUNC(BEFOREUNLOADEVENT), onreadystatechange = FUNC(EVENT), location, domain, referrer, cookie, lastModified, readyState, .NAME, images, embeds, plugins, scripts, getElementsByName(), currentScript, open([STR[, STR]])->DOCUMENT, close(), write[ln](STR...), defaultView, activeElement, hasFocus()->BOOL, designMode, execCommand(STR[, BOOL[, STR]])->BOOL, queryCommandEnabled|Indeterm|State|Supported(STR)->BOOL, queryCommandValue(STR)->STR, open(STR, STR, STR[, BOOL]), external
DOCUMENT|ELEM:
  - oncopy|cut|paste = FUNC(EVENT)
DOMSTRINGMAP
DWORKERGLOBALSCOPE:
  - postMessage(VAL[, VAL]), close()
EVENTSOURCE:
  - url, withCredentials, readyState, onerror = FUNC(EVENT)
EXTERNAL:
  - AddSearchProvider(), IsSearchProviderInstalled()
HISTORY:
  - length, scrollRestoration, state, go([NUM]), back|forward(), push|replaceState(VAL, STR[, STR])
HTMLFORMCONTROLSCOLL (inherits from HTMLCOLL):
  - ARR-like, OBJ-like
LOCATION:
  - href, origin, protocol, host, hostname, port, pathname, search, hash, assign|replace(URL), reload(), ancestorOrigins
MEDIAERROR:
  - code
MESSAGECHANNEL:
  - port1|2
MESSAGEPORT:
  - postMessage(VAL[, VAL]), start(), close()
MIMETYPE:
  - type, description, suffixes, enabledPlugin
MIMETYPEARRAY:
  - ARR-like, OBJ-like
NAVIGATOR:
  - hardwareConcurrency, registerProtocol|ContentHandler(STR, STR, STR), unregisterProtocol|ContentHandler(STR, STR), isProtocol|ContentHandlerRegistered(STR, STR), cookieEnabled, appVersion, platform, productSub, userAgent, vendor, languages, onLine, plugins, mimeTypes, javaEnabled()->BOOL
PLUGIN:
  - ARR-like, name, description, filename
PLUGINARRAY:
  - ARR-like, OBJ-like
RADIONODELIST (inherits from NODELIST):
  - value
SHAREDWORKER:
  - port
SHAREDWORKERGLOBALSCOPE: 
  - onconnect = FUNC(MESSAGEEVENT), name, close()
STORAGE:
  - length, key(NUM)->STR, getItem(STR)->STR, setItem(STR, STR), removeItem(STR), clear()
TIMERANGES:
  - length, start|end(NUM)
VALIDITYSTATE:
  - valueMissing, tooShort, badInput
WEBSOCKET: 
  - onclose = FUNC(EVENT), url, readyState, bufferedAmount, extensions, protocol, close([NUM[, STR]]), binaryType, send(STR|BLOB|ARRBUFFER[VIEW])
WEBSOCKET|EVENTSOURCE: 
  - onopen = FUNC(EVENT)
WINDOW: 
  - onblur|focus = FUNC(EVENT), onload = FUNC(EVENT), onabort = FUNC(EVENT), onerror = FUNC(EVENT), onhashchange = FUNC(HASHCHANGEEVENT), onpagehide|show = FUNC(EVENT), onpopstate = FUNC(POPSTATEEVENT), onstorage = FUNC(STORAGEEVENT), onunload = FUNC(EVENT), onpopstate = FUNC(POPSTATEVENT), window, self, document, name, location, history, customElements, locationbar|menubar|personalbar|scrollbars|statusbar|toolbar, status, close(), closed, stop(), focus(), blur(), frames, length, top, opener, parent, frameElement, open([STR[, STR[, STR[, BOOL]]]]), .NAME, navigator, alert([STR]), confirm([STR]), prompt([STR[, STR2]]), print(), showModalDialog(STR[, VAL]), requestAnimationFrame(FUNC(NUM))->ID, cancelAnimationFrame(ID), postMessage(VAL, STR[, VAL]), localStorage, sessionStorage
WINDOW|DOCUMENT: 
  - onpageshow|hide = FUNC(PAGETRANSITIONEVENT)
WINDOW|EVENTSOURCE|WEBSOCKET|MESSAGEPORT|BROADCASTCHANNEL|DWORKERGLOBALSCOPE|WORKER: 
  - onmessage = FUNC(MESSAGEEVENT)
WINDOW|WORKERGLOBALSCOPE: 
  - onerror = FUNC(EVENT), onlanguagechange = FUNC(EVENT), onoffline|online = FUNC(EVENT), onrejectionhandled = FUNC(PROMISEREJECTIONEVENT), onunhandledrejection = FUNC(PROMISEREJECTIONEVENT), origin, btoa|atob(STR), setTimeout|Interval(STR|FUNC[, NUM[, VAL...]])->ID, clearTimeout|Interval(ID), createImageBitmap()
WINDOWMODAL:
  - dialogArguments, returnValue
WORKER (inherits from ABSTRACTWORKER):
  - terminate(), postMessage(VAL[, VAL])
WORKERGLOBALSCOPE:
  - self, location (href, origin, protocol, host, hostname, port, pathname, search, hash), navigator (appVersion, platform, productSub, userAgent, vendor, language, languages, onLine, hardwareConcurrency), importScrits(STR...)

BEFOREUNLOADEVENT:
  - returnValue
CLOSEEVENT:
  - wasClean, code, reason
DRAGEVENT (inherits from MOUSEEVENT):
  - dataTransfer
ERROREVENT:
  - message, filename, lineno, colno, error
HASHCHANGEEVENT:
  - oldURL, newURL
MESSAGEEVENT:
  - data, origin, lastEventId, source, ports
PAGETRANSITIONEVENT:
  - persisted
POPSTATEEVENT:
  - state
PROMISEREJECTIONEVENT:
  - promise, reason
RELATEDEVENT:
  - relatedTarget
STORAGEEVENT:
  - key, oldValue, newValue, url, storageArea
TRACKEVENT:
  - track
