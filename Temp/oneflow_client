																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            ROUTING            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/

SUMMARY ==> 
  - appRoutes: user-change, URL+MDL_FUNC
  - MDL.router.execute(): programatic, MDL_FUNC
  - Flow.RouteTo.location(): programatic, URL
  - <a href="">: do nothing, but should setup VIEW.triggers eventually calling programatic change

Flow.router                                           // Root MDL.router, with no appRoutes nor MDL_FUNC

MDL.Router = Flow.Routers.AppRouter.extend
({ appRoutes: { "PATH[:VAR|*VAR]": "MDL_FUNC" } });   // When URL user-change: fires MDL_FUNC([VAR...])

routes = Flow.RouteTo.compileRoutables(MDL.Router);   // routes is { MDL_FUNC: PATH }
MDL.RouteTo = { "ROUTE": FUNC(...)->PATH };           // using routes.MDL_FUNC
Flow.RouteTo.addRouteDefinitions(MDL.RouteTo);        // Adds Flow.RouteTo.ROUTE(...)->PATH, used by Flow.RouteTo.location|navigate()

MDL.Controller = Flow.Controllers.Controller.extend({ "MDL_FUNC"(...) });
                                                      // Can add access: MDL_FUNC"_ARR, to allow public access
Flow.addInitializer(function () {
  MDL.controller = new MDL.Controller();
  MDL.router = new MDL.Router({ controller: MDL.controller });
});

MDL.router.execute("MDL_FUNC"[, ...]): calls MDL_FUNC(...)
Flow.RouteTo.location|navigate("ROUTE"[, ...]): changes URL path to Flow.RouteTo.ROUTE(...)->PATH (navigates also fires URL user-change)

<a href="URL">:
  - URL should use routeTo.ROUTE([...])->PATH (template helper)
  - if external website: use data-bypass
  - otherwise, will not do anything by itself, but should set up VIEW.triggers["click a.SELECTOR"] "MDL_FUNC|MDL:SUBMDL:ACTION"

Flow.redirect([PATH[, BOOL]]): user change URL to "[/app]PATH" (/app if true)
Flow.reload(): user reload URL


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            BASICS             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


  - module                                        var MDL = Flow.module("MDL")
  - routing         modules/MDL/MDL.js            MDL.Router|router + comm (out, exp)
  - controller      modules/MDL/controller.js     MDL.Controller|controller, defining MDL_FUNC
                                                  MDL_FUNC often fires either:
                                                    - REGION.show(new MDL.*View(...))
                                                    - this.ensureView(REGION, VIEW_CTOR)
                                                  Using new Flow.Entities.MODEL(OBJ)
  - models          entities/MODEL/MODEL.js       Flow.Entities.MODEL = RelationalModel|SimpleModel.extend(OBJ)
  - views           modules/MDL/views/VIEW.js     MDL.VIEWView = Flow.Views.BASEVIEW.extend(OBJ), with OBJ.template requireJS of "tpl!PATH_TO_TEMPLATE"
  - templates       modules/MDL/templates/*.html                            

  - comm (out, exp)                               Flow|Agreement.execute|request("EVENT", ...)[->VAL]
                                                  "EVENT" is "MDL:SUBMDL:ACTION"
  - comm (in, exp)                                Flow|Agreement.commands|reqres.setHandler("EVENT", FUNC(...)[->VAL]):
                                                  Usually calls MDL_FUNC(), and (if ACTION "show") Flow.RouteTo.location()
  - comm (out, imp)                               Flow.on("EVENT", FUNC(...))
  - comm (in, imp)                                Flow.trigger("EVENT", ...)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             VIEWS             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


MVIEW OBJ:
  - template requireJS("tpl!PATH")
  - className STR
  - behaviors.BEHAVIOR OBJ: merge with Flow.addBehavior("BEHAVIOR", MBEHAVIOR)

MBEHAVIOR:
  - "DisableInputZoom": all inputs on focus, disable zoom
  - "TemplateLanguage": during rendering (between before:render and render), changes i18n.setLanguage() according to new MVIEW() OBJ2.lang "LANG"
  - "FeedbackButton": button that shows feedback while loading, after calling VIEW.triggerMethod("feedback:button:request", XHR)
  - "ActionButton": similar but legacy

BASEVIEW:
  - Flow.Views.ItemView|CollectionView|CompositeView: same as Marionette, with template helpers


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            MODELS             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


URL:
  - MODEL.urlRoot + COLL.url Flow.config.api.* (COLL URL)
  - All can use "<VAR>" then must use STR.replace("<VAR>", MODEL.get(...)->"ID")



																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:         DO NOT FORGET         :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


assetRoot()                       #Template helpers, link to /dist/

_t("STR"[, OBJ])                  
_tp("STR", "PLUR_STR", NUM[, OBJ])#Can contain {VAR}. Programatically, for several languages: use i18n.setLanguage() then restores

dataLabel|radio|input|select(): template helpers to do

ExceptionReporting.reportException
(ERROR)                           #Forwards to Rollbar and show UI error
tryFunc(FUNC(...))                #Calls ExceptionReporting.reportException(ERROR) if exception
Flow.delay|defer(...)             #Calls tryFunc()
console.debug|etc.                #console.debug() + Rollbar
console._debug|etc.               #console.debug() only

Flow.isPrintMode()                #Should not use popup|popover|modal in print mode

Flow.$                            #Link to $
Flow.ajax.ajax                    #Link to $.ajax, but:
                                  #  - XHR.fail() calls module "error-handler", which shows flash notifications and redirects
                                  #     - except 404 when not logged in: shows full page error. 
                                  #       IS module "public:info" 404|410 (according to RESPONSE.revoked)
                                  #     - unless OBJ.ignoredStatusCodes NUM_ARR
                                  #     - OBJ.messageContainer JQ: where notification appears
                                  #  - OBJ.method "PATCH" must use OBJ.patch true
                                  #  - extra HTTP headers flow-client-version: BUILD_NO
Flow.ajax.get|post|put[JSON]      #Same with OBJ.method|contentType set


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            LOADING            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


main.js: all libs (except need i18n)
flow.js: tools (error handling, browser, data_tools) + config + Flow
startup.js: libs (need i18n) + tools (others) + everything else (load only public modules if in public path)
module "index":
  - route "" -> "index:show"
  - MDL_EVENT:
     - "index:show"(OBJ) -> "agreements:dashboard:show"(Flow.settings.direction(), OBJ) 

LIBS: do validation, then stickit, then module "auth", then module "dashboard"


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            LAYOUT             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


Flow: MAPPLICATION but acting as a MLAYOUTVIEW too (on "document"):
Flow.main "#main": main content Flow.Layouts.Public|ApplicationBase
  - Public: big box (e.g. login page), with region content "#content-area"
  - ApplicationBase: main page, with regions:
      - top "#top-navigation"
      - loader "#app-loader"
      - app "#app-body"
      - flash "#flash-notification"
Flow.footer "#footer": bottom bar on agreement, for guests


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             TOOLS             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


browser.*: check browser type, disable zoom (when focusing on input, for mobile), disable scroll (on popover|modals, for mobile)
dateTools.timeago|dateTime|customDate(): creates|update <abbr> with time info
Flow.storage: link to localStorage


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            MODULES            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/

Auth:
  - no routes
  - MDL_EVENT:
     - "auth:login"(OBJ): on login screen, sending OBJ:
        - data.email|password|persistent (form)
        - messageContainer|error(): to show error in UI
     - "auth:autologin"(OBJ): at startup.
     - "auth:logout"(OBJ): when clicking logout button
     - "auth:token-user:init"(VAL)
     - "auth:token-user:set"(USER, POSITION, BOOL)
Loaders:
  - no routes
  - no MDL_EVENT
  - loading spinner (covers whole screen) at Flow.main.currentView.loader:
     - fades at app:started
     - appears at requests:start|finished (i.e. on AJAX requests), with DELAY 1sec, MIN_SHOW 0.8sec, MAX_SHOW 20s
