
                       
   JSON_CANONICAL_FORM  
                       



ALTERNATIVES ==>                 J#  - JSON canonical form: RFC draft-staykov-hu-json-canonical-form-00
                                 S#  - seagreen son: format + Haskell implementation
                                 T#  - json-stable-stringify: JavaScript implementation, not maintained
                                 C#  - canonical-json: JavaScript implementation, not maintained, not as good as
                                 C#    json-stable-stringify
                                  #See their doc for implementation details

CANONICAL ==>                     #Reducing possible different variants of same data
                                  #Goal is better comparison, e.g. for diff, or need to use as key (e.g. caching key)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         RESTRICTIONS          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ENCODING ==>                    SJ#UTF-8

WHITESPACES|NEWLINES ==>       TSJ#Must not be used between tokens

CIRCULAR REFS ==>                T#Replaced by '__cycle__'

OBJ                           CTSJ#Must be lexicographically sorted:
                              CTSJ#  - i.e. based on Unicode codepoint value
                              CTSJ#  - is default STR comparison behavior in JavaScript
                              CTSJ#    (i.e. ARR.sort(), Object.keys(OBJ).sort())
                                 S#No duplicated keys

[-]DIGIT.NUME[-]NUM              J#For all non-integer NUMs
[-]NUM[.NUM]                     S#No exponent
                                 S#No trailing zeros
                                 S#No -0

STR                              S#No \/
                                 S#\uXXXX: only for U+0000-U+001F, and if not one of \b \t \n \f \r



