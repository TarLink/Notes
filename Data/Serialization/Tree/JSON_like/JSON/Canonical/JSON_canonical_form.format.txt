
                       
   JSON_CANONICAL_FORM  
                       



ALTERNATIVES ==>                 J#  - JSON canonical form: RFC draft-staykov-hu-json-canonical-form-00
                                 S#  - seagreen son: format + Haskell implementation
                                 T#  - json-stable-stringify: JavaScript implementation, not maintained
                                 C#  - canonical-json: JavaScript implementation, not maintained

CANONICAL ==>                     #Reducing possible different variants of same data
                                  #Goal is better comparison, e.g. for diff, or need to use as key (e.g. caching key)


ENCODING ==>                    SJ#UTF-8

WHITESPACES|NEWLINES ==>        SJ#Must not be used between tokens

OBJ                             SJ#Must be lexicographically sorted:
                                SJ#  - i.e. based on Unicode codepoint value
                                SJ#  - is default STR comparison behavior in JavaScript
                                SJ#    (i.e. ARR.sort(), Object.keys(OBJ).sort())
                                 S#No duplicated keys

[-]DIGIT.NUME[-]NUM              J#For all non-integer NUMs
[-]NUM[.NUM]                     S#No exponent
                                 S#No trailing zeros
                                 S#No -0

STR                              S#No \/
                                 S#\uXXXX: only for U+0000-U+001F, and if not one of \b \t \n \f \r


--- json-stable-stringify ---

STRINGIFY(VAL[, OPTS])->'JSON'
OPTS:
  - cycle BOOL (def: false): handle circular refs
  - replacer|space: like JSON.stringify() arguments (replacer can only be FUNC)
  - cmp(VAL, VAL2)->-1|0|1: key sorting, def: default ARR.sort(), i.e. codepoint-wise

WHITESPACES|NEWLINES ==>          #Must not be used between tokens

OBJ                               #Must be lexicographically sorted

CIRCULAR REFS ==>                 #Replaced by '__cycle__'

toJSON(): handled


--- canonical-json ---

Not as good as json-stable-stringify

STRINGIFY(...)->'JSON' (like JSON.stringify(...))

OBJ                               #Must be lexicographically sorted

toJSON(): handled
