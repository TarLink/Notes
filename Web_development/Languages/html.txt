
          
   HTML   
          


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           ESSENTIEL           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

Jargon:
  - element = <start_tag attr>content</end_tag> #In lowercase (best practice)
  - attr = name[="value"]                       #Si seulement name : "Boolean attribute"
  - void element = <tag>                        #noted <TAG>/ dans la doc
  - <!-- commentaire -->                        #Must not include --, and not start with > or ->

At the root should be index.html, the startpage.

CATEGORIES ==>                                  #Content categories :
                                                #  - metadata content : header tag
                                                #  - flow/inline content : a du contenu
                                                #    - sectioning content : <section>, <article>, <nav>, <aside>
                                                #    - heading content : <h*>
                                                #    - phrasing content : mark-up, comme <span>, etc. Can only include 
                                                #      other prasing content.
                                                #      - embedded element : <canvas>, <video>, <img>, etc.
                                                #    - interactive content : <a>, forms, <embed>/<object> and <iframe>, 
                                                #                            <img usemap>
                                                #      - form content
                                                #Also :
                                                #  - transparent : if can be suppressed with document still valid
                                                #  - replaced : embedded or form (not affected by CSS)

JAVASCRIPT ==>                                  #This doc also define the JavaScript for HTML elements.
HTMLElement                                     #Parent of all HTML tags. Enfant d'ELEMENT (cf doc DOM).
                                                #J'appelle HTMLTAGElement TAG par concision, e.g. AUDIO pour HTMLAUDIOELEMENT
HTMLELEMENT.ATTRIBUTE                           #L'attribute HTML et l'attribute accessible via JavaScript (IDL attribute),
                                                #sont distincts, mais changer l'un en général change l'autre :
                                                #  - ils sont tous disponibles
                                                #  - certains sont readonly : je le précise.
                                                #  - nom est camelcase, par opposition à lowercase in HTML
                                                #  - can be BOOL, STR, NUM ou autre specific HTMLELEMENT (je précise
                                                #    alors) selon contexte.
                                                #Préférer utiliser *etAttribute()
                                                #Les tags ayant leur propre classe définissent des properties en plus : ils
                                                #sont définis dans cette doc (les autres non).

HTMLCollection                                  #Liste d'HTMLELEMENT
HTMLCOLLECTION.length
HTMLCOLLECTION[UINT]                            #If several matches, some browsers return only the first, other a NODELIST.
HTMLCOLLECTION[STR]                             #STR est l'ID.

DATA URI SCHEME ==>                             #Use a ressource only present in memory as an URL, anywhere where a URL is 
                                                #accepted :
                                                #  - "data:[MIMETYPE];base64,CODE", where CODE is the data encoded in base64. 
                                                #    (déf: text/plain)
                                                #  - "data:[MIMETYPE];charset=utf-8,CODE" where CODE is URI encoded, such as 
                                                #    with encodeURIComponent()
                                                #Base64 discard whitespaces
                                                #See also WINDOW.btoa|atob() et FILEREADER.readAsDataURL()


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       INTEROPERABILITY        :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


Browser comptability :
  - desktop
    - Chrome 44, Opera 31
    - IE 11
    - Firefox 40
    - Safari 8
  - mobile/tablet
    - Chrome Mobile 44, Opera Mobile 31
    - Safari Mobile 8.4
    - Opera Mini 8
    - Android browser 4.3
    - UC browser 9.9

<!--[if IE [8 ou 9, rien, lt 8, gt 8, gte 8]]>
  <...>

Versions : 
  - HTML4 historique depuis plus de 10 ans. HTML5 nouveau.
  - XHTML5 suit HTML5 (used to be XHTML 1.2)

XHTML :
  - XHTML previous favori avant création de HTML5. Maintenant desuet.
  - type dépend du MIME Type : "text/html" vs "application/xhtml+xml" (ou "application/xml")
  - XHTML en général plus restrictif, mais permet d'être manipulé par parser XML
  - "polyglot" = XHTML HTML-compatible
  - ce doc assume seulement HTML5, je me fiche d'XHTML

JavaScript :
  - TAG.VAR signifie qu'il s'agit d'une propriété JavaScript uniquement

HTML5 SHIV ==>                                 !#Polyfill for some HTML5 tags (3.7.2).
                                               !#Options are passed with WINDOW.htlm5 = OBJ (before loading script):
                                               !#  - elements "TAG ...":
                                               !#     - def: what is listed in this doc as !#
                                               !#     - def. ones work without polyfill with IE9, except: <abbr> (IE7), 
                                               !#       <progress|datalist> (IE10), <bdi|data|details|summary|main|meter|
                                               !#       output|dialog|template> (no current version of IE)
                                               !#  - shivCSS BOOL (def: true): adds CSS polyfill, e.g. display: block
                                               !#  - shivMethods BOOL (def: true): adds support for IE6-8 by monkey patching
                                               !#    DOCUMENT.createElement|DocumentFragment()->ELEM
                                               !#    Difference: ELEM.parentNode is DOCUMENTFRAGMENT, but should be null.
                                               !#    jQuery monkey patches too.
                                               !#Problem: 
                                               !#  - just allows using empty/featureless tags, but the ones with functionality
                                               !#    (e.g. <audio|video|canvas>) will not work
                                               !#  - cannot clone ELEM in JavaScript for browsers that use the polyfill.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       GLOBAL ATTRIBUTES       :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


POUR TOUS ==>                                   #
class="STR STR..."                              #Utilisé par CSS et JavaScript
                                                #Only [:alpha:][[:alnum:]-_].
id="STR"                                        #Same but must be unique.
onEVENT="JAVASCRIPT"                            #See JavaScript doc. EVENT always lowercase.
contenteditable="BOOL"                          #Make content editable by user, and all children tags.
draggable="STR"                                 #Changes possibility to drag : déf "true" on links and images, déf "false" sur
                                                #reste, "" for inherit. Needs also dragstart event handler to work.
title="STR"                                     #Tooltip                           
lang="STR"                                      #Language code.
dir="STR"                                       #Text direction, "ltr", "rtl"
role="STR"                                      #Used for accessibility
data-VAR="VAL"                                  #Custom attribute. VAR devrait commencer par un namespace, comme 
                                                #data-myapp-myprop="VAL". Doit être seulement [a-z-] (no uppercase)
                                                #On y accède en JavaScript via *etAttribute() (.dataset pour le futur, mais
                                                #pas encore supporté)
hidden                                          #Like CSS display:none, mais devrait être utilisé pour éléments non pertinents,
                                                #et non élements temporairement cachés (tels que panel)

POUR FORMS ==>                                  #
spellcheck="STR"                                #Red line under wrong word, depending on lang attribute.
                                                #Can be "true" (déf pour TEXTAREA ou contenteditable), "false" (déf pour other
                                                #forms) ou "" (inherit).
accesskey="CHAR"                                #Give focus. Shortcut depends on browser :
                                                #  - Safari/Chrome  : Alt (Ctrl-Opt on Mac)
                                                #  - IE      : Alt (requires CR in IE8)
                                                #  - Firefox : Shift-Alt (Ctrl-Opt on Mac)
                                                #  - Opera   : Shift-Esc
tabindex="NUM"                                  #Tab order


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        MAIN STRUCTURE         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<!DOCTYPE html>/
<html lang="fr">
  manifest="URL"                                #Cf ApplicationCache in DOM doc.
<head>
<body>                                          #Dans cet ordre. <html> comprend only <head> et <body>

<div>                                           #Ensemble de paragraphs, top conteneurs dans <body>.
<aside>                                        !#<div> est déprécié, préférer :
<footer>                                       !#  - <header> et <footer> au début/fin
<header>                                       !#  - <section> au milieu sauf si <aside> (side text (glossary, ads, etc.)) ou
<nav>                                          !#    <nav> (section contenant links, tel que barre de navigation)
<section>                                      !#  - <figure> pour element not linked to document flow (e.g. floating picture)
<figure>                                       !#Each has potentially <h*>, then paragraphs-like conteneurs.

<figcaption>                                   !#Texte à l'intérieur d'un <figure>

<h*>                                            #Headings. Goes down from <h1> (most important) to <h6>
<p>                                             #Paragraphes. Préférer autre paragraphs-like content.
<pre>                                           #console content
<blockquote>                                    #Pour citation multiline
  cite="URL"                                    #Source de la citation
<address>                                       #Une addresse postale. Should not include any heading or sectioning tag.
<article>                                      !#Pour articles (blog posts, comment, etc.)

<ol>                                            #Liste (bullet point-like) ordonnée de <li>. Can be nested.
  HTML.start                                    #Starting index
<ul>                                            #Pareil mais non-ordonnée, just bullets.
<li>                                            #Element de <ol>, <il> ou <menu>
  HTML.value                                    #Index (seulement pour <ol>)

<dl>                                            #Definition list, contenant des paires <dt>/<dd>
<dt>                                            #Titre d'une définition, followed by one or more <dd>
<dd>                                            #Contenu d'une définition


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           PHRASING            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<span>                                          #Phrasing tag.
<strong>         
<em>                                            
<ins>                                           
  cite="URL"                                    #URL expliquant l'insertion
  datetime="STR"                                #Date de l'insertion (à titre info)
<del>                                           
  cite="URL"                                    
  datetime="STR"                                #Same as <ins>
<mark>                                         !#Highlighted text
<kbd>                                           #User input/command line words (souvent monotype font)
<samp>                                          #Même chose mais pour output.
<code>                                          #Same
<abbr>                                         !#Abbréviation.
  title="STR"                                   #Full name.
<var>                                           #Une variable (math ou programmation)
<q>                                             #Pour citation uniline.
  cite="URL"                                    #Source de la citation
<cite>                                          #Une citation
<dfn>                                           #Un terme défini autre part.
  title="STR"                                   #Terme défini

<sub>                                           
<sup>                                           #Subscript/superscript
<bdo>         
    dir="STR"                                   #Direction du texte (rtl, ltr or auto)

<br>/                                           #Linebreak. Use as a newline in a paragraph, not to increase space 
                                                #between paragraphs (prefer CSS for this).
<hr>/                                           #Semantic break between two paragraphs, en general mis en valeur par une ligne
                                                #graphiquement.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            HEADER             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<meta charset="utf-8">/                         #Toujours mettre. Should be first in <head>
                                                #So can write tel quel since UTF-8, but &#x00[00[00]] also possible

<link rel="shortcut icon" href="favicon.ico">/  #Seul .ico est interopérable. Utiliser 16x16 et 32x32 sizes.
                                                #Use default name favicon.ico and put in website root dir.

<title>                                         #Titre du haut de la page, aussi utilisé comme titre de moteur de recherche.
                                                #Should be different for each page. Can only contain text.
 TITLE.text                                     #STR

<meta name="description" content="STR">/        #Description affichée par moteur de recherche. 140 chars max.
                                                #Should be different for each page.
<meta name="keywords" content="STR...">/        #Keywords indexant la page by search engine.
<meta name="robots"                             #Search engine indexation de la page (index) ou des pages pointées (follow).
 content="[no]index,[no]follow">/               #Follow n'empêche pages pointées d'être indexées si pointées par un autre site.
                                                #Mettre aussi à la root du site un /robots.txt avec :
                                                #  User-agent: *
                                                #  [Dis]Allow: /section/*
                                                #Globbing * ? et regex $ only.

<meta name="author" content="Moi même">/
<meta name="contact" content="me@me.com">/
<meta name="copyright" content="Moi même">/
<meta name="generator" content="FrontPage 4.0">/

<meta name="anyother" content="is possible">/

<base>/                                         #Spécifie la base URL (déf: ".") et target par défaut des URLs suivant.
                                                #Doit être avant les URLs qui suivent. Si un second <base> est rencontré, est 
                                                #ignoré.
  href="URL"                                    #URL peut être relative.
  target="STR"
  
                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       CSS ET JAVASCRIPT       :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


                                                #CSS and JavaScript link to external file works as #include
                                                #Priority is from top to bottom


<link rel="stylesheet" href="URL.css">          #From external file.
                                                #Utiliser @import éventuels dans les feuilles css. 
  rel="alternate stylesheet" title="STR"        #Provide an alternate stylesheet in the view menu of the browser.
  media="MEDIA_QUERY"                           #MEDIA_QUERY is usually "all" (auquel cas inutile)
  LINK.disabled                                 #Disable le LINK (can be set). Only with CSS sheets.
  LINK.sheet                                    #Renvoie STYLESHEET if link to it.

<style media="MEDIA_QUERY">
  ...CSS...
</style>                                        #Inline. Put in <head>
  STYLE.disabled                                #Disable le STYLE (can be set)


<div style="NAME: VAL;[NAME: VAL;]..."></div>   #In tags


<script src="script.js"></script>               #From external file. Preferred. Should be in <head>.

<script>CODE</script>                           #Inline. If in <body>, execute while loading. Should be in <head>

<a href="JavaScript:CODE"></a>                  #
<any onEVENT="CODE"></any>                      #Deprecated

<noscript>
  Activez JavaScript pour voir contenu
</noscript>

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             LINKS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

<a>
  href="URL"                                    #Lien pointé par élément et ses enfants.
                                                #Peut être un anchor/URL fragment via "[URL]#ID", allant à l'élement dont 
                                                #l'id est ID.
                                                #URL peut être local (par exemple "../file") ou utiliser d'autres protocoles,
                                                #dont file:///
  target="STR"                                  #Comment ouvrir le lien :
                                                #  - "_self" (déf) 
                                                #  - "_blank" : new tab
                                                #  - "_parent" : direct parent frame
                                                #  - "_top" : top parent frame (erase all other frames)
  hreflang="STR"                                #lang du lien (à titre indicatif).
  type="STR"                                    #MIME type du lien. Ne fait rien (mais dans le futur pourrait afficher un
                                                #icone lors du survol en fonction du type)
  media="MEDIA_QUERY"                           #Limite to specific MEDIA_QUERY type.
  rel="STR [STR2]..."                           #Relationship between current page and linked page.
                                                #Interprété par le site web/plugins, non par le browser, donc tout est possible
                                                #Valeurs courantes :
                                                #  - "nofollow" : search engine should consider link external, and not
                                                #    endorsed by current site (often paid ads)
                                                #  - point to specific page :
                                                #    - "help"
                                                #    - "search"
                                                #    - "sidebar" : content to be displayed in a sidebar
                                                #    - "license"
                                                #    - "bookmark" : key index page, used often as bookmark
                                                #  - "prev"/"next" : sequence (webcomics, forum, etc.)
                                                #  - "external" : externe, not endorsed
                                                #  - "author" : author of the link
  A.protocol                                    #"http:". Example is "http://www.a.fr:80/part?var=a&var2=b#an".
                                                #Same for following. Most subpart can be "".
  A.hostname                                    #"www.a.fr"
  A.port                                        #"80"
  A.host                                        #"www.a.fr:80" (hostname + port)
  A.pathname                                    #"/part"
  A.search                                      #"?var=a&var2=b"
  A.hash                                        #"#an"


<map>                                           #Englobe des <area>. 
                                                #Represente un overlay transparent au-dessus d'une <img> ou <object>.
                                                #L'img ou object doit avoir un attribut usemap avec l'id (HTML5) ou le name 
                                                #(HTML4) de map. Utiliser à la fois id et name : <map id="STR" name="STR">
  MAP.areas                                     #Ensemble des AREA, sous forme d'HTMLCOLLECTION. 
  MAP.images                                    #IMG et OBJECT associés, sous forme d'HTMLCOLLECTION.
<area>/                                         #Sous-section de <map>, definissant une zone/hot spot interactive
  shape="STR"                                   #Shape du hot spot : "rect", "circle", "poly", "default" (everything)
  coords="NUM..."                               #Coordonnees (en CSS pixels) de l'hot spot, selon la shape :
                                                #  - "rect" : left,top,right,bottom
                                                #  - "circle" : x,y,radius
                                                #  - "poly" : x1,y1,...,xn,yn
  href="URL"                                    #
  target="STR"                                  #
  hreflang="STR"                                #
  type="STR"                                    #
  alt="STR"                                     #Texte à afficher si impossibilité d'afficher images.
  rel="STR"                                     #Cf <a>
  media="MEDIA_QUERY"                           
  AREA.protocol                                 #
  AREA.hostname                                 #
  AREA.port                                     #
  AREA.host                                     #
  AREA.pathname                                 #
  AREA.search                                   #
  AREA.hash                                     #Same as A


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             FORM              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<form>                                          #Formulaire. Ensemble d'éléments de formulaire (<input>, <button>, etc.)
                                                #It is good practice to :
                                                #  - check for input client-side, with the submit event handler, to notify 
                                                #    users without refreshing the page
                                                #  - then check for input server-side, for security reasons
                                                #Don't nest.
  action="URL"                                  #
  method="post|get"                             #Check HTTP doc. In short: send POST|GET request with VAR=VAL&... payload.
  enctype="STR"                                 #enctype="" used if "multipart/form-data" (file upload).
  accept-charset="STR"                          #Charset in Content-Type [C]. Def is charset of the page (souvent UTF-8).
  target="STR"                                  #
  autocomplete="off|on"                         #Suggestion from previous use of the form. 
                                                #If set to false, all <input> should also have their autocomplete attribute 
                                                #set to false. Not supported by Opera, but will not impact experience.
                                               ##Modernizr "autocomplete" (Safari<5.2)
  FORM.elements                                 #Ensemble des controls, sous forme d'HTMLCOLLECTION. 
  FORM[UINT]
  FORM[STR]                                     #Renvoie control par leur index ou id.
  FORM.length                                   #Nombre de controls
  FORM.submit()                                 #
  FORM.reset()                                  #Emet events.


<input>/                                        #Element de formulaire.
                                                #Can be hidden with display: none et controller le click event via JavaScript.
  name="STR"                                    #VAR utilisé lors de l'envoi des data
  value="VAL"                                   #VAL utilisé lors de l'envoi des data.
                                                #If set by HTML, valeur par défaut.
  type="STR"                                    #Type de l'élément.
  type="text"                                   #Single-line input (linebreaks are removed). 
  type="password"                               #Password doesn't show input.
    maxlength="NUM"                             #Number of Unichars pouvant être entré. Déf: -1 (means infinite).
    size="NUM"                                  #Size of box, in number of Unichars (déf: 20). 
    placeholder="STR"                           #Text en grey si input vide (not supported by password).
                                               ##Modernizr "placeholder" (IE<10)
                                               ##For IE <=9, can use jquery-html5-placeholder-shim:
                                               ##  - version of 24/02/2015, "parndt" fork
                                               ##  - fired at DOMContentLoaded, can refire with $.placeholder.shim()
    autocomplete="off|on"                       #Like for form (déf: on)
    readonly                                    #Like disabled, but user can still click it (but not modified). 
    INPUT.selectionEnd|Start                    #Start/end indexs UINT de la sélection courante.
    INPUT.setSelectionRange(NUM, NUM2[, STR])   #Modifie sélection courante with begin NUM et end NUM2. 
                                                #STR est la selectionDirection : "none" (déf), "forward", "backward". Ne pas
                                                #utiliser si selectionDirection pas supporté.
    INPUT.select()                              #Emet event select
  type="email"                                  #Comme type="text". 
  type="tel"                                    #Essentiellement sémantique, avec cependant :
  type="url"                                    #  - parfois layout different (e.g. "tel" donne input keyboard on iOS)
  type="search"                                 #  - parfois automatic .pattern (e.g. "email" et parfois "url")
    autocomplete="off|on"                       #
    placeholder="STR"                           #
                                               ##Modernizr "email|tel|url|search" (IE<10)
  type="checkbox"                               #
  type="radio"                                  #For radio : if same name, same radio group.
    checked                                     #For checkbox, VAL is "on" ou "".
                                                #For radio, VAL is value de la radio checked.
    INPUT.defaultChecked                        #Initial value of "checked"
  type="file"                                   #Upload. Can't set value by JavaScript. Value semble seulement le filename.
    INPUT.files                                 #Fichiers uploadés as FILELIST
    multiple                                    #Can upload several files.
                                               ##Modernizr "multiple" (IE<10)
  type="button"                                 #Préférer <button>. Value is label displayed
  type="reset"                                  #Reset the form. Value is label displayed
  type="image"                                  #Submit the form. Value is label displayed. Def. value : "Submit Query"
    src="URL"                                   #
    formaction|target|enctype|method="STR"      #Override the action|target|enctype|method attribute of the associated FORM.
    alt="STR"                                   #Like <img>
    width|height="NUM"                          #
  type="hidden"                                 #Not displayed (value is changed by JavaScript) but submitted to the server.
  disabled                                      #Disable use.
  autofocus                                     #Gives focus when page loads. Works only via initial HTML code, not dynamically
                                                #through JavaScript.
                                               ##Modernizr "autofocus" (IE<10)
  form="STR"                                    #Au lieu d'associer à FORM parent, associe au FORM dont ID est STR.
  INPUT.defaultValue                            #Initial value of "value"

  BUTTON|SELECT|OBJECT|TEXTAREA|INPUT|FIELDSET  #Renvoie VALIDITYSTATE, which has info about validity as BOOL.
  .validity                                     #Validity is calculated according to several attributes.
    VALIDITYSTATE.valid                         #False if any other property is true
    VALIDITYSTATE.valueMissing                  #True if required field, but no value
    VALIDITYSTATE.typeMismatch                  #True if incorrect pattern (via automatic pattern in some <input>)
    VALIDITYSTATE.patternMismatch               #True if incorrect pattern (via .pattern)
    VALIDITYSTATE.tooLong                       #True if beyond .maxlength (can't be true in most browsers, which prevent user 
                                                #from going over .maxlength)
    VALIDITYSTATE.customError                   #setCustomValidity() has been called
  BUTTON|...|FIELDSET.checkValidity()           #Renvoie .validity.valid, and fires invalid event on the ELEMENT if false.
                                                #submit event calls automatically it. 
                                                #If not valid :
                                                #  - prevent submit event, except in Safari : so submit event handler
                                                #    needs to be defined, and checkValidity().
                                                #  - if via submit event, show automatic error message next to ELEMENT 
                                                #    ("validationMessage")
  BUTTON|...|FIELDSET.setCustomValidity(STR)    #Makes the ELEMENT invalid, with a validationMessage STR.
                                                #If STR is "" though, it's valid.
                                                #Usually called on the change event to set custom validation.
  BUTTON|...|FIELDSET.willValidate              #True if checkValidity() will be called during submit (usually true).
  BUTTON|...|FIELDSET.oninvalid = FUNC(EVENT)   #Fired by checkValidity() (including after submit)

<button>                                        #Préférer à <input type="button"> car peut avoir un contenu (le label, 
  name="STR"                                    #phrasing content).
  value="VAL"
  type="STR"                                    #Peut être "submit", "reset" ou "button" (déf)
  disabled
  autofocus                                     
  form="STR"                                    
  formaction|target|enctype|method="STR"        #Override the action|target|enctype|method attribute of the associated FORM.

<textarea>                                      #Comme <input type="text">, mais multiline.
  name="STR"
  maxlength="NUM"
  disabled
  readonly
  cols="NUM"                                    #Width in Unichars (déf: 20)
  rows="NUM"                                    #Same for lines.
  wrap="STR"                                    #How the browser automatically insert linebreaks for wrapping : "soft" (déf) 
                                                #or "hard"
  placeholder="STR"                             #
  autocomplete="off|on"
  autofocus                                     
  form="STR"                                    
  TEXTAREA.value                                #Texte STR
  TEXTAREA.defaultValue                         #
  TEXTAREA.selectionEnd|Start                   #
  TEXTAREA.select()                             #
  TEXTAREA.setSelectionRange(NUM1, NUM2[, STR]) #Comme INPUT
  TEXTAREA.type                                 #La STR "textarea"
  
<select>                                        #Menu déroulant, contenant des <option>/<optgroup>
  name="STR"  
  disabled                                      #Comme <input>
  size="NUM"                                    #Nombre d'éléments montrés à la fois (déf: 0)
  multiple                                      #Possibilité de choisir plusieurs valeurs
  autofocus                                     
  SELECT.value                                  #VALUE du premier OPTION sélectionné.
  SELECT.selectedIndex                          #Index du premier OPTION sélectionné.
  SELECT.options                                #Liste des OPTION, sous forme de HTMLCOLLECTION.
  SELECT.length                                 #Nombre of OPTION
  SELECT.add(OPTION[, OPTION2])                 #Rajoute OPTION, avant OPTION2 (déf: à la fin)
  SELECT.remove(UINT)                           #Remove OPTION à l'index UINT
  form="STR"                                    

<optgroup>                                      #Groupe d'<option>
  label="STR"
  disabled
<option>                                        #Element de <select>. Contains only text.
  value="STR"                                   #If empty STR, it is the default option.
  label="STR"
  selected                                      #Boolean value.
  disabled
  OPTION.index                                  #UINT. If not part of SELECT, 0. Readonly.
  OPTION.text                                   #Text content, concaténé STR.
  OPTION.defaultSelected                        #Initial value of "selected"
  OPTION.form                                   #Si part of SELECT, same value as SELECT.form. Sinon null.

<progress>                                     !#
  value="NUM"                                   #Progression, de 0 à max (déf: 1). Si null, indeterminate.
  max="NUM"
  PROGRESS.position                             #Renvoie value / max. Readonly.
  
<label>                                         #Texte/contenu devant un élément de formulaire.
  for="STR"                                     #L'élément de formulaire est celui ayant l'ID STR.
  form="STR"                                    

<fieldset>                                      #Comme <div>, mais pour éléments de formulaires recevant une <legend>.
  form="STR"                                    
  FIELDSET.elements                             #Renvoie ensemble des contrôles sous forme d'HTMLCOLLECTION
  FIELDSET.type                                 #Renvoie "fieldset"
<legend>                                        #Titre affiché du fieldset.
  LEGEND.form                                   #Le FORM parent, ou null.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             TABLE             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<table>                                         #Tableau en deux dimensions
  TABLE.caption|tHead|tFoot|tBodies             #TABLESECTION ou TABLECAPTION. null si aucun. Can be set.
  TABLE.createCaption|THead|TFoot()             #S'il y en a un, le renvoie. Sinon, le crée et le renvoie.
  TABLE.deleteCaption|THead|TFoot()             #
  TABLE.rows                                    #Renvoie les TR, sous forme de HTMLCOLLECTION.
  TABLE.insertRow(UINT)                         #Remove le TR à la position UINT
  TABLE.deleteRow(UINT)                         #Crée un TR à la position UINT, et le renvoie.

<caption>/                                      #Titre de <table>

<thead>                                         #Sous-section de <table>, contenant first <tr>s
<tbody>                                         #Sous-section de <table>, contenant main <tr>s
<tfoot>                                         #Sous-section de <table>, contenant last <tr>s
  TABLESECTION.rows                             #(TABLESECTION comprend <tfoot>, <thead> or <tbody>)
  TABLESECTION.delete|insertRow(UINT)           #Comme pour TABLE, mais pour TABLESECTION uniquement.

<tr>                                            #<table> row, contenant <td> ou <th>
  TR.cells                                      #Renvoie les TD/TH du row, sous forme de HTMLCOLLECTION.
  TR.deleteCell(UINT)                           #
  TR.insertCell(UINT)                           #Comme TABLESECTION, mais pour des TD/TH
  TR.rowIndex                                   #UINT. Renvoie -1 si pas partie d'une table.
  TR.sectionRowIndex                            #Pareil, mais au sein du TFOOT, THEAD ou TBODY uniquement.

<td>                                            #<table> cell, inside a <tr>
  rowspan="NUM"                                 #How much cells it extends horiz. (0 -> all) (déf 1)
  colspan="NUM"                                 #Same for vertic. (0 impossible)
  headers="ID[ ID2...]"                         #ID of the <th> related to this cell.
<th>                                            #Comme <td> mais si inside <thead>.
  rowspan="NUM"                                 
  colspan="NUM"                                 
  headers="ID[ ID2...]"                         
  abbr="STR"
  TD|TH.cellIndex                               #UINT. Renvoie -1 si pas partie d'une table.

<colgroup>                                      #Ensemble de <col>. Ne change pas content, sert juste à selectionner pour CSS.
  span="NUM"                                    #Nombre de colonnes (sinon all). If present, no <col> inside.
<col>/                                          #Colonne.
  span="NUM"                                    #Nombre de colonnes (sinon 1)

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           EMBEDDED            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<img>/                                          #Image
                                                #Supported by all : JPEG, GIF, PNG, BMP
  src="URL"
  alt="STR"                                     #Texte à afficher si image non available.
  height|width="NUM"                            #In CSS pixels
  IMG.naturalHeight|width                       #Same, but size of the file, so not affected by height|width
  IMG.complete                                  #True if read and displayed, and format accepted by browser.
  usemap="#ID"                                  #See <map>
  ismap                                         #<img> doit être clickable (être dans un <a>). Fait que les coordonnées du
                                                #click local à <img> seront pushées via GET, e.g. ?50,30
                                                #Le but est de contrôler le résultat du clic en fonction des coordonnées
                                                #server-side ("server-side map")
  IMG.onload = FUNC(EVENT)                      #
  IMG.onabort = FUNC(EVENT)                     #
  IMG.onerror = FUNC(EVENT)                     #


<iframe>                                        #Document HTML embedded.
                                                #Can be used. But AJAX can work too.
  src="URL"                   
  height="NUM"
  width="NUM"                                   #En CSS pixels
  name="STR"                                    #Can be used in any target attribute (such as <a>)
  sandbox[="STR ..."]                           #Restreint possibilités d'iframe pour des raisons de sécurité. 
                                                #Some can be allowed by "STR" allow-*. Liste des restrictions :
                                                #  - plugins disabled
                                                #  - scripts disabled (allow-scripts)
                                                #  - no form submission (allow-forms)
                                                #  - unique origin, so same-origin policy apply (allow-same-origin)
                                                #    Also block document.cookie and localStorage access
                                                #  - no popups
                                                #  - can't go up to container DOCUMENT
                                                #  - can't use <object> or similar
                                                #  - can't use seamless attribute
                                                #  - can't use autoplay attribute, autofocus, etc.
  IFRAME.contentDocument|Window                 #Le DOCUMENT ou WINDOW à l'intérieur de l'IFRAME

<object>                                        #External resource.
                                                #Ex :
                                                #  - .swf, avec "application/x-shockwave-flash"
                                                #  - .pdf, avec "application/pdf"
                                                #  - ou tout autre MIME type supporté par le browser, dont via plugins
                                                #If not supported, content dans <object> is displayed.
  data="URL"
  type="STR"                                    #MIME-type
  name="STR"                                    #Can be used in any target attribute (such as <a>)
  height="NUM"
  width="NUM"                                   #In CSS pixels
  usemap="#STR"                                 #To use a <map>
  form="STR"                                    
  OBJECT.contentDocument                        #Le DOCUMENT actuel, ou null si aucun.
<param>/                                        #Paramètre d'un <object>. Dépend de l'objet.
  name="STR"
  value="STR"


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             MEDIA             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<audio>                                        !#
                                               ##Modernizr "audio" (IE<9), with Modernizr.audio.ogg|mp3|wav|m4a "probably",
                                               ##"maybe" or "" (i.e. no)
  src="URL"                                     #Source of the audio. Can be multiple times, so browser chooses the best one.
                                                #Should provide both WebM et AAC audio files.
                                                #En détail :
                                                #  Firefox + Opera + Chrome : 
                                                #    - .ogg/.oga (Vorbis) vs .webm (Vorbis). Préférer webm, meilleure qualité.
                                                #    - others, less interesting :
                                                #      - .ogg/.opus (Opus/Ogg) (without Opera) : newer, less support but better
                                                #         quality
                                                #      - .wav (also Safari) : lossless (heavier)
                                                #  IE + Safari (+ Chrome) : .mp3 (more widespread) ou .aac (better quality)
                                                #Préférer utiliser <source>
  controls                                      #Affiche des controles (lecture, etc.) (sinon invisible)
                                                #Il est possible d'utiliser plutôt JavaScript pour des contrôles plus
                                                #personnalisés, ou liés à d'autres événements que des clics sur boutons.
  loop                                          #Fait que l'audio loop
  autoplay                                      #Fait que l'audio commence dès que chargé sur la page.
  muted
  volume="NUM"                                  #From 0 to 1.

<video>                                        !#
                                               ##Modernizr "video" (IE<9), with Modernizr.audio.ogg|webm|h264 "probably",
                                               ##"maybe" or "" (i.e. no)
  src="URL"                                     #Comme audio
                                                #Should provide both WebM et MP4 videos.
                                                #En détail :
                                                #  Firefox + Opera + Chrome : .webm (Vorbis/VP8) vs .ogg/.ogv (Theora). 
                                                #  Préférer webm, meilleure qualité.
                                                #  IE + Safari (+ Chrome) : .mp4 (H.264)
  controls
  loop
  autoplay
  muted
  preload="STR"                                 #Comme <audio>
  height="NUM"
  width="NUM"                                   #Height/width en CSS pixels. Can deform frame contenant, mais pas video, qui
                                                #respecte toujours son ratio, tout en restant dans la frame.
  poster="URL"                                  #Thumbnail (first frame by def)
  VIDEO.videoHeight|Width                       #Taille de VIDEO, en dehors de redimensionnement via height|width

  AUDIO|VIDEO.onloadeddata|metadata =FUNC(EVENT)#Loaded metadata, ou first frame of data.
  AUDIO|VIDEO.oncanplay[through] = FUNC(EVENT)  #Media can play. 
                                                #If Through : can play until the end (while still buffering until the end)
  AUDIO|VIDEO.onemptied = FUNC(EVENT)           #Quand media est reloaded depuis zero
  AUDIO|VIDEO.onended = FUNC(EVENT)             #Fin du media

  AUDIO|VIDEO.onpause|play = FUNC(EVENT)        #Only once
  AUDIO|VIDEO.onplaying = FUNC(EVENT)           #When played after having been paused
  AUDIO|VIDEO.onwaiting = FUNC(EVENT)           #Paused because lack of data
  AUDIO|VIDEO.onseeking|seeked = FUNC(EVENT)    #Changement d'endroit de lecture (seek) début/fin.
  AUDIO|VIDEO.ontimeupdate = FUNC(EVENT)        #Changement d'endroit de lecture, lorsque le changement temporel intervient

  AUDIO|VIDEO.onstalled = FUNC(EVENT)           #Impossible de fetch data
  AUDIO|VIDEO.onsuspend = FUNC(EVENT)           #Data fetching stopped
  AUDIO|VIDEO.
  onduration|volume|ratechange = FUNC(EVENT)    #Change of durée, volume ou playbackrate.

<source>/                                       #Indique media sources d'<audio> et <video> (if no src attribute)
  src="URL"                                     #Comme audio/video
  type="URL"                                    #MIME type, e.g. "video/ogg", "video/webm", "video/mp4", "audio/webm", 
                                                #"audio/ogg", "audio/wave", "audio/mpeg" (mp3), "audio/aac"
  media="MEDIA_QUERY"

Media                                           #Comprend AUDIO et VIDEO
  MEDIA.currentSrc                              #Comme src, mais mieux :
                                                #  - donne le src de <source>, si utilisé
                                                #  - reflète changement de source si serveur choisir un autre media en 
                                                #    fonction de la résolution
                                                #  - renvoie null si networkState est NETWORK_EMPTY
                                                #  - readonly
  MEDIA.currentTime                             #Nombre de secondes écoulées DOUBLE. Can be set.
  MEDIA.duration                                #Durée DOUBLE. Readonly. Valeurs spéciales :
                                                #  - "Inf" : streaming
                                                #  - "NaN" : inconnu
                                                #  - 0 : media indisponible
  MEDIA.playbackRate                            #Lecture speed (déf: 1). Can be negative (backward), entre 0 et 1 (slow motion)
                                                #et > 1 (fast forward). Sound is muted outside of a specific range 
                                                #(e.g. 0.25 to 5), depending on browsers.
  MEDIA.defaultPlaybackRate                     #Initial value of "playbackRate"
  MEDIA.ended                                   #True si à la fin du media. Readonly.
  MEDIA.paused                                  #True si media not playing. Readonly.
  MEDIA.seeking                                 #True si changement de position actuellement. Readonly
  MEDIA.load()                                  #
  MEDIA.pause()                                 #Emet ces events.
  MEDIA.play()                                  #Changing the src requires the media to be reloaded.
  MEDIA.buffered                                #Renvoie quantité buffered so far, as TIMESRANGE :
                                                #  TIMESRANGE.length : nombre de buffers (en général 1)
                                                #  TIMESRANGE.start|end(UINT) : renvoie point de départ/fin du buffer numéro
                                                #  UINT, en secondes
  MEDIA.played                                  #Same for quantité played. Includes anything already played. 
                                                #If seek forward/backward, creates new ranges in TIMESRANGE.
  MEIDA.seekable                                #Same for quantité seekable

  MEDIA.muted                                   #Mute the audio BOOL.

  MEDIA.error                                   #The most recent MEDIAERROR, ou null. Readonly.
  MEDIA.networkState                            #Media loading state :
                                                #  - NETWORK_EMPTY : pas encore commencé à charger
                                                #  - NETWORK_IDLE : fini/arrêté de chargé
                                                #  - NETWORK_LOADING : charge
                                                #  - NETWORK_NO_SOURCE : problème de chargement
  MEDIA.canPlayType(STR)                        #Renvoie possibilité de lire le MIME type STR : "probably" (true), "" (false)
                                                #or "maybe" (unknown).


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            CANVAS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


<svg>                                           #Document SVG
                                                #Like a .svg file, but without <?xml ?>. 
                                                #Attributs de <svg> sont conservés.
                                               ##Modernizr "[inline]svg", "svgclippaths"

<canvas>                                       !#Area where to draw vector graphics via JavaScript (very similar to Cairo)
                                                #Content is displayed if canvas not supported
                                               ##Modernizr "canvas" (IE<9)
                                                #Canvas libraries exist to simplify, for example drawing graphs.
                                                #There are plugins AI or SVG to JavaScript (Canvas API).
  width="NUM"
  height="NUM"                                  #In CSS pixel
  CANVAS.getContext(STR)                        #"2d" to return a CONTEXT, "3d" for WebGL (not supported yet).
  CANVAS.toDataURL([STR[, NUM]])                #Renvoie CANVAS sous forme de STR de Data URI scheme. 
                                                #STR est MIME type parmi "image/png" (déf) et "image/jpeg".
                                                #NUM est jpeg quality, de 0 à 1.
  CANVAS.onload = FUNC(EVENT)                   #

  CanvasDrawingStyles
  DRAWINGSTYLES.lineWidth
  DRAWINGSTYLES.lineCap
  DRAWINGSTYLES.lineJoin
  DRAWINGSTYLES.miterLimit
  DRAWINGSTYLES.*etLineDash(DOUBLE...)
  DRAWINGSTYLES.lineDashOffset
  DRAWINGSTYLES.font
  DRAWINGSTYLES.textAlign
  DRAWINGSTYLES.textBaseline

  CanvasPathMethods
  PATHMETHODS.moveTo(2 DOUBLE)                  #Commence un nouveau path (coordonnées locales).
  PATHMETHODS.lineTo(2 DOUBLE)                  #Continue un path avec une nouvelle ligne.
  PATHMETHODS.quadraticCurveTo(4 DOUBLE)
  PATHMETHODS.bezierCurveTo(6 DOUBLE)
  PATHMETHODS.arcTo(6 DOUBLE)
  PATHMETHODS.rect(4 DOUBLE)
  PATHMETHODS.arc(5 DOUBLE[, BOOL])
  PATHMETHODS.closePath()                       #Clot le path.

  CanvasRenderingContext2D                      #Enfant de PATHMETHODS et DRAWINGSTYLES
  CONTEXT.canvas                                #Renvoie le CANVAS sous-jacent
  CONTEXT.save|restore()
  CONTEXT.scale(DOUBLE, DOUBLE2)
  CONTEXT.rotate(DOUBLE)
  CONTEXT.translate(DOUBLE, DOUBLE2)
  CONTEXT.[setT|t]ransform(6 DOUBLE)
  CONTEXT.globalAlpha
  CONTEXT.globalCompositeOperation
  CONTEXT.stroke|fillStyle
  CONTEXT.createLinearGradient(4 DOUBLE)
  CONTEXT.createRadialGradient(6 DOUBLE)
  CONTEXT.createPattern(VIDEO|CANVAS|IMAGE)
  CONTEXT.shadowOffsetX|Y
  CONTEXT.shadowBlur
  CONTEXT.shadowColor
  CONTEXT.clearRect(4 DOUBLE)
  CONTEXT.fillRect(4 DOUBLE)
  CONTEXT.strokeRect(4 DOUBLE)
  CONTEXT.beginPath()
  CONTEXT.fill|stroke([STR])
  CONTEXT.fill|stroke(PATH)
  CONTEXT.clip([STR])
  CONTEXT.clip(PATH)
  CONTEXT.isPointInPath(2 DOUBLE[, STR])
  CONTEXT.isPointInPath([PATH, ]2 DOUBLE)
  CONTEXT.fill|strokeText(4 DOUBLE)             ##Modernizr "canvastext" (IE<9)
  CONTEXT.measureText(STR)
  CONTEXT.drawImage(VIDEO|CANVAS|IMAGE, 2|4|8 DOUBLE)
  CONTEXT.createImageData(IMAGEDATA|2 DOUBLE)
  CONTEXT.getImageData(4 DOUBLE)
  CONTEXT.putImageData(IMAGEDATA, 2|4 DOUBLE)
  
  CanvasGradient
  GRADIENT.addColorStop(DOUBLE, STR)
  CanvasPattern
  
  TextMetrics
  TEXTMETRICS.width
  
  ImageData
  IMAGEDATA.width|height
  IMAGEDATA.data


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         NOT SUPPORTED         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/



SUPPORTED BY IE10 BUT NOT OTHERS ==>            #Firefox 22 :
                                                #  - <input>: type=number, range
                                               ##    Modernizr "number|range" (IE<10)
                                                #  - <input type=range>: stepUp|Down(), min, max, step
                                                #    VALIDITYSTATE.rangeUnder|Overflow|stepMismatch (implemented but not
                                                #    working)
                                               ##    Modernizr "max|min" (no IE yet)
                                               ##    Modernizr "step" (IE<10)
                                                #  - <track>, et cuechange event
                                                #  - MEDIA : .audioTracks
                                                #Opera 12 :
                                                #  - <iframe>: sandbox="allow-top-navigation|popups"
                                                #  - <audio>: preload
                                                #  - INPUT.validationMessage (not working)
                                                #Chrome 28 :
                                                #  - HTMLELEMENT.forceSpellCheck()
                                                #  - CANVAS : .toBlob()
                                                #Safari 6 :
                                               !#  - <datalist>: list 
                                                #  - <input type=text|email|search|tel|url|range> : list
                                               ##    Modernizr "list"
                                                #  - <input type="file">: accept
                                                #  - <form> : novalidate
                                                #  - automatically preventing forms invalid to be sent
                                                #  - <button>, <input type="image|submit">: formnovalidate
                                                #  - <input type=text|email|search|tel|url> : pattern
                                               ##    Modernizr "pattern" (IE<10)
                                                #  - <input type=text|email|search|tel|url|password>, <textarea>, <select> : 
                                                #      required, et CSS :required et :optional
                                               ##    Modernizr "required" (IE<10)
                                                #  - <iframe> : allowfullscreen
                                               !#  - <time>

NOT SUPPORTED AT LEAST BY IE10 ==>              #<a>, <area> : download
                                               !#<details>, <summary>
                                                #<menuitem>, <menu> (only useful if type et menu attributes), 
                                                #  contextmenu global attr., <button>: menu
                                               !#<bdi>
                                               !#<main>
                                               !#<data>
                                                #<keygen>
                                               !#<meter>, <output>
                                                #<input type="text|search">: inputmode
                                                #<input type="text|search">, <textarea> : dirname
                                                #<input type="email|url"> : maxlength
                                                #<input type="email">: multiple
                                                #<input type=email|search|tel|url> : readonly
                                                #<input type=email|search|tel|url> : size
                                                #<input type=search|tel|url> : select(), selectionStart|End,
                                                #<input type="color|time|date[time[-local]]|month|week">
                                               ##Modernizr "color|time|date[time[-local]]|month|week" (no IE yet)
                                                #  setSelectionRange()
                                                #<fieldset> : name, disabled
                                               !#<dialog>
                                               !#<template>
                                                #FORM : .checkValidity()
                                                #TEXTAREA.validationMessage
                                                #TEXTAREA|SELECT|INPUT|BUTTON|PROGRESS : .labels
                                                #INPUT|TEXTAREA : .selectionDirection                     
                                                #TEXTAREA : .setRangeText(), .textLength
                                                #SELECT : .selectedOptions
                                                #LABEL : .control
                                                #<link> : sizes
                                                #<ol> : reversed
                                                #<iframe> : seamless, srcdoc
                                                #<img>, <link>, <video>, <script> : crossorigin
                                                #Global attributes : inert, translate
                                                #<audio>, <video>: mediagroup
                                                #<a rel="noreferrer">
                                                #<style>: scoped
                                                #Table sorting :
                                                #  - <table> : sortable, sort event
                                                #  - TABLE.stopSorting()
                                                #  - <th> : sorted, TH.sort()
                                                #<object> : typemustmatch
                                                #<img> : srcset
                                                #HTMLELEMENT : .accessKeyLabel, .command*, .relList, .properties
                                                #TABLE : .createTBody()
                                                #OBJECT : .contentWindow
                                                #CANVAS : toBlob|DataURLHD(), .supportsContext(), .setContext(), 
                                                #  .transferControlToProxy()
                                                #MEDIA : .text|videoTracks, .fastSeek(), .controller, .addTextTrack(), 
                                                #  .startDate, .defaultMuted, .readyState
