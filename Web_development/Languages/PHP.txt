
         
   PHP   
         


PHP ==>                                         #.php
                                                #case sensitive, except function and class names (not var names.)
                                                #Dynamic type
                                                #Free-form (whitespace don't matter)
                                                #Object-oriented (class-based)
                                                #Object passed by reference, native types by value.
                                                #Version 5.4
                                                #Concurrent de Microsoft ASP.NET. Perl et Python sont possibles également.

USE ==>                                         #Use :
                                                #  - interacting with server (reading files/database)
                                                #  - interacting with user (forms)
                                                #  - interacting with user metadata 
                                                #    (restricting access according to user metadata, like IP)
                                                #It is a preprocessor => return same file but processed.
                                                #Only instructions between <? ?> are processed, rest is left as-is.
                                                #Usually outuputs HTML, but other formats are possible (such as picture)
                                                #PHP is processed server-side, and client only gets the processed HTML.
                                                #PHP is not processed by a browser, needs either a server doing it or a
                                                #command-line interpreter (install php5-cli)

php [FILE] [-- ARGS]                            #Command-line
                                                #Use $argv au lieu de $_GET/$_POST/$_REQUEST
-r STR                                          #Like if FILE was <?php STR ?>

<?php
  STATEMENTS...
?>                                              #PHP statements included in HTML.

<?= STR; ?>                                     #Same as <?php echo "STR"; ?> ??? Eviter car peu portable.
                        
//COMMENT
/* COMMENT */
#COMMENT

STATEMENTS;

include STR                                     #Include URL STR. Useful when a page has always same content, such as header.
require STR                                     #Same, but instead of putting a warning when error, make the execution stop.

TYPES ==>

INT                                             
UINT
FLOAT                                           #All plateform-specific.
BOOL                                            #BOOL to NUM : 0 (false), != 0 (true)
STR                                             #"STR" ou 'STR'
NULL
RESOURCE                                        #File (incl. database)

OPERATORS ==>                                   #Same as Javascript, except :
                                                #  - STR : 
                                                #    - STR . STR2 : concaténation
                                                #  - BOOL :
                                                #    - xor
                                                #    - and/or, alias de && ||

$VAR = VAL                                      #Name of VAR : [[:alpha:]_][[:alnum:]_]*
$VAR                                            #Déférencement

function FUNC([$VAR...])
{
  STATEMENTS...
  [return VAL;]
}

STRUCTURES ==>                                  #Same as Javascript, except...

array(STR...)                                   #Indexed ARRAY
$ARRAY[UINT]                                    #Déférencement. Commence à index 0.
array(STR=>STR2...)                             #Associative ARRAY
$ARRAY[STR]                                     #Déférencement
MULTIDIMENSIONAL ARRAY ==>                      #Array d'array.

foreach ( ARRAY as $VAR ) { }                   #Loop, VAR est la value                       
foreach ( ARRAY as $VAR=>$VAR2 ) { }            #Loop, VAR est l'index, VAR2 la value
                        
echo VAL
print VAL                                       #Same thing

$_POST                                          #Array contenant les variables POST envoyées
$_GET                                           #Array contenant les variables GET envoyées
$_REQUEST                                       #Concaténation de $_POST, $_GET et $_COOKIE

setcookie(STR,STR2,DATE)                        #Crée un cookie avec VAR STR, VAL STR2, expirant à DATE
                                                #To delete, put a past DATE and "" as STR2
$_COOKIE                                        #Associative array contenant les cookies.

AJAX ==>                                        #Javascript loads a PHP page in the background, and use its final content as a 
                                                #content to be shown in the current page.
                                                #Advantage : change content of current page, without reloading a new page.
                                                #Page in the background is done by :
                                                #  - creating a XMLHttpRequest object
                                                #  - setting a function to be executing when PHP page is done 
                                                #    (retrieving content and changing current page) 
                                                #  - sending a POST/GET request to this PHP page.
                                                #AJAX doesn't update history, but HTML5 introduced methods to update history 
                                                #manually.

SPL ==>                                         #Standard PHP Library
