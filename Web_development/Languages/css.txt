
         
   CSS   
         


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            GENERAL            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SYNTAX  ==>                                     #Case sensitive. 
                                                #Skips whitespaces.
                                                #CSS3 on-going, divided in modules.

INCLUDING IN HTML ==>                           #Priority is from top to bottom

<link rel="stylesheet" href="URL.css">          #From external file.
  media="MEDIA_QUERY"                           #MEDIA_QUERY is usually "all" (auquel cas inutile)

<style>...</style>                              #Inline

<div style="NAME: VAL;[NAME: VAL;]..."></div>   #In tags

INTEROPERABILITY ==>                            #Non-supported are skipped, last line wins. So put fallback first.
                                                #Extensions fallbacks used when experimental:
                                                #   -moz- (Firefox), -webkit- (Chrome+Safari), -o- (Opera), -ms- (IE)
                                                ##Ext: signifie extensions nécessaires.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SYNTAX             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


/* COMMENT */

@STR VAL                                        #At-rules

SELECTOR... {                                   #RULE
  VAR: VAL;...
}

STR                                             
"STR"
'STR'                                           #Unicode : \XXXX.
VAR                                             #VAR names, used by CSS counters
URANGE                                          #U+[XX]XX[-U+[XX]XX]

NUM                                             #
LEN                                             #Relative (prefer):
                                                #  - LENem: 1em is current font-size
                                                #  - LENex: 1/2 em
                                                #  - LENrem: 1em is <html> font-size
                                                #Absolute:
                                                #  - LENpx|pc|pt|cm|mm|in: physical measure (always in 96ppi). Prefer px.
                                                #    1in = 96px = 72pt = 6pc = 25.4mm 
PERC                                            #Percentage
LENP                                            #LEN|PERC

POSITION                                        #[VAL [VAL2]] where VAL|VAL2 is top|bottom|center|left|right[ LENP]
                                                #Def: top left
ANGLE                                           #NUMdeg, NUMrad, NUMgrad, NUMturn (360deg). Can be negative.

TIME                                            #TIMEms|TIMEs
COLOR                                           #Can be:
                                                #  - STR, dont blue, red, etc. (SVG color keywords)
                                                #  - #NNN[NNN]
                                                #  - rgb[a](255|100%,255|100%,255|100%[,1])
                                                #  - hsl[a](360,100%,100%[,1])
                                                #  - transparent: like rgba(1,1,1,0)
                                                #  - currentColor: current "color"

URI                                             #url("URL")|none
GRADIENT                                        #[repeating-]linear-gradient(ANGLE|STR, COLOR[ LENP]...)
                                                #  - STR: to [left|right] [top|bottom] (def: to bottom)
                                                #  - LENP: def: 0|100% for begin|end, interpolation for others.
                                                #    Cannot be negative.
                                                #[repeating-]radial-gradient([STR][ VAL][at POSITION], COLOR[ PERC]...)
                                                #  - STR: circle or ellipse (déf)
                                                #  - VAL is radius:
                                                #    - STR: closest|farthest-corner(def)|side
                                                #    - LEN for circle, LENP LENP2 for ellipse
                                                #  - POSITION is center (def: center), and can only be STR|LENP, 
                                                #    not STR LENP
IMAGE                                           #URI|GRADIENT

FUNC                                            #FUNC(ARG)


VALUE CALCULATION ==>                           #  - initial: default
                                                #  - computed: after inheritance
                                                #  - used: after applying on layout (e.g. converting %)
                                                #  - actual: after browser correction

INHERITANCE ==>                                 #Some properties are inherited by elements children :
                                                #  - paragraph-related: text-align, white-space, visibility, etc.
                                                #  - font-related: color, font-*, etc.
                                                #  - table-related: border-collapse, etc.
                                                #  - list-related: list-*
                                                #  - quotes
inherit                                         #Used as a VAL, means parent VAL, e.g.:
                                                #  SELECTOR { VAR: VAL; }                   // Override parent VAL
                                                #  MORE_SPECIFIC_SELECTOR { VAR: inherit; } // Restore parent VAL

SHORTHAND PROPERTY ==>                          #Allow defining several properties in one, e.g. border, outline,
                                                #margin, padding, font, etc.
                                                #Note:
                                                #  - ommitted VAL takes default value, even if previously defined
                                                #  - "inherit" doesn't work
                                                #  - on positional values:
                                                #     - 4: TOP RIGHT BOTTOM LEFT
                                                #     - 2: TOP|BOTTOM RIGHT|LEFT
                                                #     - 1: TOP|BOTTOM|RIGHT|LEFT
                        

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           AT-RULES            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@charset "UTF-8";                               #Should always be on top

@media MEDIAQUERY... { RULE }                   #Fire RULE if MEDIAQUERY is met:
                                                #  - MEDIAQUERY: MEDIA|REQUIREMENTS...
                                                #     - MEDIA: [only|not] STR:
                                                #        - "all" 
                                                #        - "screen|print|tv|speech" (def: 'screen')
                                                #        - "braille|visual|bitmap|tty" (def: 'visual')
                                                #     - REQUIREMENTS: REQUIREMENT[ and REQUIREMENT2]...
                                                #        - REQUIREMENT: ( [min-|max-]VAR[: VAL] ):
                                                #           - color: bits/channel
                                                #           - color-index: number of indexed colors
                                                #           - monochrome: if VAL, bits/channel. 
                                                #             Otherwise whether screen is monochrome.
                                                #           - [device-]aspect-ratio: NUM/NUM2 (e.g. 16/9)
                                                #           - [device-]height|width: app|device screen size
                                                #           - resolution: NUMdpi|dpcm|dppx
                                                #           - orientation: landscape|portrait
                                                #           - scan: progressive|interlace (for tv)
                                                #           - grid: tty or feature phone old display
WINDOW.matchMedia("MEDIAQUERY")->MEDIAQUERYLIST #
MEDIAQUERYLIST.media                            #"MEDIAQUERY". Readonly
MEDIAQUERYLIST.matches                          #BOOL
MEDIAQUERYLIST.add|removeListener
(FUNC("MEDIAQUERY"))                            #When matches changes.
mediaCheck(OBJ)                                ##According to OBJ.media "MEDIAQUERY", fires OBJ.entry|exit|both(MEDIAQUERYLIST)
                                               ##Compatible older IE (with only [min|max-]height|width|aspect-ratio: VALpx|em)
                                               ##Version 0.4.6
mq("MEDIAQUERY")->BOOL                         ##Polyfill of matchMedia("MEDIAQUERY").matches, by Modernizr.

@import URL [MEDIAQUERY]                        #


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           SELECTORS           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SELECTORSELECTOR2                               #And
SELECTOR, SELECTOR2...                          #Or
SELECTOR SELECTOR2...                           #Descendant
SELECTOR > SELECTOR2...                         #Direct child
SELECTOR + SELECTOR2...                         #Direct next sibling
SELECTOR ~ SELECTOR2...                         #Any following sibling

:not(SELECTOR)                                  #

PRECEDENCE ==>                                  #Called 'specificity', from less to more specific:
                                                #  - following list (goes in priority order)
                                                #  - HTML-inline
                                                #  - VAR: VAL !important (to avoid)

*                                               #Any

[ATTR]                                          #ATTR exists
[ATTR="STR"]                                    #ATTR value === "STR"
[ATTR!="STR"]                                  ##ATTR value !== "STR" (including nothing) (jQuery UI)
[ATTR$="STR"]                                   #ATTR value === "...STR"
[ATTR^="STR"]                                   #ATTR value === "STR..."
[ATTR|="STR"]                                   #ATTR value === "STR[-...]"
[ATTR*="STR"]                                   #ATTR value === "...STR..."
[ATTR~="STR"]                                   #ATTR value === "...STR..." and STR is a whole word (space-delimited)
#ID                                             #Same as [id="ID"]
.CLASS                                          #Same as [class~="CLASS"]

:enabled|disabled                               #Like [disabled]
:checked                                        #Like [checked|selected]
:selected                                      ##Like [selected] (jQuery UI)
:data(STR)                                     ##Like [data-STR], but having used JQ.data(STR) (jQuery-UI)
:lang(LANG)                                     #Like [lang="LANG"] but case-insensitive, and includes parents
:target                                         #Like #ID, where ID is URL fragment identifier

TAG                                             #<TAG>

:link                                           #<a>
                                                #Should follow this order: :link, :visited, :hover, :active
:visited                                        #Visited link. Can only change color.
:input                                         ##<input>, <button>, <textarea>, <select>, <optgroup>, <option>, <label>,
                                               ##<fieldset>, etc. (jQuery UI)
:header                                        ##<h*> (not <hgroup>) (jQuery UI)
:root                                          ##<html>

:first|last|only-child                          #Current element is its parent's first|last|only child
:first|last|only-of-type                        #Same but tag by tag.
:nth[-last]-child|of-type([-]NUMn[ +|- NUM2])   #Same but for the child whose number x === [-]NUMn +|- NUM2, with positive integer n
                                                #E.g. -2n+10 takes children number 10, 8, 6, 4 and 2
:odd|even                                       #Same as :nth-child(2n[+1])
:empty                                          #Has no child
:parent                                        ##Has child (jQuery UI)

:hover                                          #On mouseover.
:active                                         #On focus|clickdown.
:focus                                          #
:focusable|tabbable                            ##(jQuery UI)
:animated                                      ##Currently animated (jQuery UI)

:hidden|visible                                ##Not taking any space (jQuery UI), e.g.:
                                               ##  - diplay: none
                                               ##  - width|height === 0
                                               ##  - <input type="hidden">
                                               ##  - hidden ancestor
                                               ##Does not cover invisible but taking space (e.g. 'transparent' or visibility: hidden)
:contains('STR')                               ##A TEXT descendant contains STR (jQuery UI)

:[in]valid                                      #ELEM.validity.valid

::first-letter                                  #Can only change font, background and box model properties
::first-line                                    #Can only change font and background properties


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            POSITION           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

inline vs all others: 
  - no height|width (so no *overflow*, text-align too)
inline[-*] vs all others:
  - position static|relative: horizontal, not vertical
[inline-]table[-*]:
  - like <table[-*]>
    Like a cells grid (controlling gutter, fixed column width). Allow using table-layout, border-collapse|spacing, empty-cells, caption-side
list-item:
  - like <li|ul>. Allow using list-style-* (bullet points)

positioned elements:
  - bottom|top|right|left, offset-*
non-replaced inline:
  - text-combine-upright
all but non-replaced inline:
  - [min|max-]width|height, box-sizing, touch-action, [min|max-]inline|block-size
all but table row|col[-group]:
  - text-orientation
all but table row|col|footer[-group]:
  - padding|margin-*
block:
  - clear, break-*, widows|orphans, text-overflow, text-indent, text-align[-*], tab-size
block with normal flow:
  - page-break-*
flex:
  - flex-*, align-*, order, justify-content
non-replaced block (except table), table-cell, inline-block:
  - column-width|count
non-replaced:
  - overflow[-*]
replaced:
  - object-*
table-cell, inline:
  - vertical-align
in-flow block-level:
  - column-span
multicol:
  - column-rule-*, column-gap|fill
not table:
  - writing-mode
text element:
  - text-rendering, ime-mode
scrolling container:
  - scroll-*


Inherited:
  - paragraph-related: text-align, white-space, etc.
  - font-related: color, font-*, etc.
  - table-related: border-collapse, etc.
  - list-related: list-*
  - visibility
  - quotes
  - widows|orphans

Most property are 'visual', except:
  - 'all': fallback, counter-*, content, will-change, unicode-range
  - also 'interactive': cursor, outline-*
  - 'interactive': transition[-*], scroll-snap-*, ime-mode
  - also 'continuous': [user|min|max-]zoom, orientation
  - 'paged': break-*
  - also 'paged': widows|orphans, page-break-*, marks

Animated: yes if based on NUM (including RECT, FUNC(NUM...), COLOR, but excluding TIME)
  - except:
     - background-repeat|size|position, font-stretch, text-shadow, grid-*, border-*color, border-spacing
  - but including:
     - visibility

TODO:
  - categorize below properties under relevant specs (at beginning of second column of CSS specs now)

compatibility:
  - OK:
     - height, :active, ::after|before|content, ANGLE (except turn), attr() (basic syntax), background, background-clip
       background-color, background-image, background-origin, background-position,
       background-repeat (except round|space), border, border-bottom|top|left|right[-*], border-collapse, border-color,
       border-spacing, border-style, border-width, bottom|top|right|left, box-sizing, caption-side (except block|inline-*),
       @charset, :checked, clear|float (except inline-start|end), color, COLOR, 
       Counters (counter-reset|increment)
       cursor (except grab[bing], zoom-in|out, none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed,
       nesw|nwse|col|row-resize, all-scroll), direction, :disabled, display (except *flex, *grid, contents, run-in, ruby*),
       :empty, empty-cells, :enabled, :first|last|only-child, :first|last|only-of-type, :nth-*, ::first-letter, ::first-line, :focus, font,
       @font-face (except WOFF2, unicode-range), font-family, font-size, rem, font-style, font-weight, :hover, image, @import,
       :indeterminate, inherit, :invalid|valid|required|optional, :lang, [repeating-]linear|radial-gradient, line-height, :link,
       list-style[-image|position], list-style-type (basic values), margin, margin-bottom|left|right|top,
       min|max-height|width (except fill|fit-content|min-content|max-content), 
       width (except fit-content|min-content|max-content, [fill-]available, border|content-box), 
       @media (except min|max-resolution, dppx, dpcm),
       @namespace, :not, opacity, overflow[-x|y], word-wrap, padding, padding-bottom|top|left|right, page-break-inside,
       page-break-before|after (only auto|always), position (except sticky), quotes, :root, table-layout, :target, 
       text-align (except start|end|match-parent), text-decoration, text-indent (except hanging|each-line), 
       text-overflow (except two-value or STR), text-transform (except full-width, full-size-kana), 
       unicode-bidi (except isolate*|plaintext), vertical-align, visibility, :visited, white-space, word-spacing, z-index,
       Selectors: TAG, .CLASS, #ID, * (including namespaces), [ATTR], [ATTR= ~= |= ^= $= *=], SELECTOR + SELECTOR2, 
       SELECTOR ~ SELECTOR2, SELECTOR > SELECTOR2, SELECTOR SELECTOR2
  - -webkit:
     - animation[-*] (except animation-direction: [alternate-]reverse), 
       3D transforms (backface-visibility, perspective*, transform*)
  - -moz, -webkit:
     - Multi-column layout (columns, column-*)
  - Not IE11:
     - Counter styles (@counter-style), 
       symbols, all, attr() (extended syntax), 
       Blending (background|mix-blend-mode), 
       Replaced content (element()), 
       image-rect(),
       Shapes (BASIC-SHAPE (i.e. inset|polygon|circle|ellipse()), shape-*), 
       Logical properties (block|inline-size, border-inline|block-*, clear|float: inline-start|end), 
       Masking (clip-path)
       cursor (grab[bing], zoom-in|out), :default, :dir, 
       Ruby layout (ruby*, display: ruby*), 
       Display module (display: contents),
       @document, element, 
       Filter effects (filter),
       @font-face WOFF2, @font-feature-values, font-kerning, font-language-override, font-size-adjust,
       font-synthesis, font-variant*, image-rendering, image-orientation, initial, :in|out-of-range, isolation, vmax, 
       list-style-type (extended values), margin|padding|offset|max|min-block|inline-*, mask*, 
       min|max-height|width: fill|fit-content|min-content|max-content, 
       width: fit-content|min-content|max-content, [fill-]available, border|content-box, 
       object-fit|position, outline-offset, overflow-wrap,
       position: sticky, :read-only|write, resize, :scope, scroll-behavior, scroll-snap-*, @supports, tab-size,
       text-align: start|end|match-parent, text-decoration-*, text-indent: hanging|each-line, text-orientation, 
       text-overflow (two-value of STR), text-rendering, text-transform (full-width, full-size-kana), text-underline-position,
       transform-box, unicode-bidi: isolate*|plaintext, unset, will-change, writing-mode, 
       Selectors: [ATTR ... i]
     - transitions on 'content'
  - Not Safari 8:
     - ANGLE turn, animation-direction: [alternate-]reverse, 
       Fullscreen (::backdrop), 
       background-repeat (round|space), 
       Fragmentation (box-decoration-break, break-*),
       page-break-after|before (except auto|always)
       cursor (none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed, nesw|nwse|col|row-resize,
       all-scroll), 
       Grid (display: [inline-]grid), 
       font-feature-settings, font-stretch, ime-mode, @viewport, [max|min-]zoom,
       text-align-last, text-combine-upright, touch-action
       Flex (align-*, display: [inline-]flex, flex*, justify-content, order), @media (min|max-resolution, dppx, dpcm),
       orphans|widows, word-break: keep-all
  - Only not Opera Mini 8:
     - border-image[-*], border-radius, background-attachment|size, 
       animations (animation*), 
       transitions, 
       3D transforms (backface-visibility, perspective*, transform*), GRADIENT,
       box-shadow, @font-face, vw|vh|vmin, letter-spacing, outline, outline-color|style|width, pointer-events, text-shadow,
       word-break: normal|break-all
  - Not Android browser 4.3:
     - calc(), :fullscreen
  - Not Firefox 40:
     - Display module (display: run-in), 
       @page :first|left|right, marks, @font-face: unicode-range, line-break
  - Not Chrome 45:
     - hyphens
  - Not on Safari mobile 9:
     - ::selection


BOX MODEL ==>                                   #Content > Padding > Border > Margin
[max-|min-|][height|width]: LENP                #  - content : actual content.
                                                #    min and max : not on table contents (max-* can be none)
padding[-top|bottom|left|right]                 #  - padding : space between content and border
border[-top|bottom|left|right]                  #  - border
margin[-top|bottom|left|right]                  #  - margin : space between border and other 
                                                #      margin are sometimes collapsed (only one margin is kept) when :
                                                #        - empty element (border+padding+border = 0) 
                                                #        - no space between top margin and top margin du parent (first child) 
                                                #          or same for bottom (last child)
                                                #        - two siblings (ex: two <p> following)
                                                #Déf for all: auto
                                                #Not on phrasing content.
line-height: LENP                               #Same as height, except:
                                                #  - affect also inline-level, where phrasing content is vertically centered

box-sizing: STR                                 #Change box model, for browser compatibility (useless), e.g. what's implied
                                                #by height|width : content-box (déf), padding box or border-box.
                                                ##Ext: -moz-

INLINE VS BLOCK ==>                             #Inline-level vs Block-level :
                                                #  - inline-level position horizontally after previous content ; block-level 
                                                #    vertically
                                                #  - inline-level content pas affecté par width/height
                                                #    - content overflow possible only for block-level donc. Overflow content
                                                #      ne change pas siblings ou parents (considéré non-existant).
                                                #  - inline is by déf for phrasing content, block-level for sectionning, 
                                                #    embedded content, etc.
                                                #Types :
                                                #  - inline-level :
display: inline                                 #    - normal
display: inline-block                           #    - affecté par content width/height (comme block), mais positionned 
                                                #      horizontally (comme inline)
display: inline-table                           #    - like table, but positionned horizontally
                                                #  - block-level :
display: block                                  #    - normal
display: list-item                              #    - same, but with bullet points (for <ul>, etc.)
display: table[-[caption|cell|column|footer     #    - for <table>, etc. En dehors de table et table-caption, pas de padding 
|header][-group]]                               #      ni de margin, seulement width/height.
column-width|count: ...                         #    - like block, but divided into several columns
display: none                                   #  - removed from layout

visibility: STR                                 #Affect visibility, but not layout : visible (déf), hidden.
                                                #visibility: collapse does affect layout : same as display:none, but for table
                                                #elements, but without changing table width/height (faster)

FLOW ==>                                        #Inline : part of the normal flow. Either inline-level or block-level.
position: static                                #  - normal (déf)
position: relative                              #  - same, but with shift relative to normal position. 
                                                #    Siblings and parents stay at same position.
float: left|right                               #Floating : part of normal flow, but shifted to left/right. 
                                                #  Any following inline boxes aside the floating boxes is horizontally 
                                                #  affected up until the bottom side of the floating box.
                                                #  Always block-level.
clear: none                                     #  - non-cleared : several floating boxes are stacked horizontally.
clear: left|right|both                          #  - cleared : several floating boxes are stacked vertically. 
                                                #    - Can be stacked vertically according to opposite floats direction
                                                #    - non-float peuvent utiliser clear pour ne commencer verticalement
                                                #      qu'après les floats.
                                                #Absolute : taken out of normal flow. Often block-level.
position: absolute                              #  - relative to parent document
position: fixed                                 #  - relative to screen
                                                #"Positionned element" : relative + absolute. 
top|bottom|right|left: NUM                      #(déf: auto) Specify shift/position on positionned elements.

z-index: NUM                                    #Profondeur : Positionned > float > inline
                                                #Pour positionned :
                                                #  - comparaison z-index : -∞ (deeper) to ∞ (closer). Déf is 0.
                                                #  - comparaison est fait de sibling à sibling. Ex:
                                                #    - A, parent de B, frère de C, all absolute position.
                                                #    - z-index de A est 1, B 3, C 2
                                                #    - B sera dessous de C, grâce parent A est en-dessous de C

MULTI-COLUMN LAYOUT ==>                         #Can only be applied to display: *block* or *table*
                                                #column-width|count divides the content block into several columns
                                               ##Ext: -moz- et -webkit-                                        
column-width: LEN                               #Divides according to length.
column-count: UINT                              #Divides according to number of columns.
columns: WIDTH COUNT                            #Shorthand

column-gap: LEN                                 #(déf: normal, i.e. 1em)
column-rule-color: COLOR                        #
column-rule-style: STR                          #Like for border-color|style|width, but for lines between columns (déf: none
column-rule-width: VAL                          #black and 3px)
column-rule: COLOR STR VAL                      #Shorthand


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           PARAGRAPH           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


overflow[-x|y]: STR                             #Comment l'overflow content est affiché (ne change pas layout des siblings et
                                                #parents :
                                                #  - visible (déf) : dépasse
                                                #  - hidden : caché
                                                #  - auto : caché, avec scrollbar si besoin
                                                #  - scroll : caché, avec scrollbar toujours
                                                #For display: [inline-]block
word-wrap: STR                                  #Si break-word (déf: normal),fait qu'overflow est break à la lettre près.
                                                #Suprime effet d'overflow.
                                                #Renommé overflow-wrap : mettre les deux noms.
text-overflow: STR                              #Comment la troncature de l'overflow content apparaît :
                                                #  - clip : coupé au caractère prêt
                                                #  - ellipsis : pareil, mais avec "..."
                                                #For display: [inline-]block
white-space: STR                                #                        | Wrapping | No-wrapping |
                                                # -----------------------+----------+-------------+
                                                #  Whitespace collapsing |  normal  |   nowrap    |
                                                # -----------------------+----------+-------------+
                                                #       No WS collapsing | pre-wrap |     pre     |
                                                # -----------------------+----------+-------------+
                                                #pre-line : comme normal, sauf que real newline (in HTML code) are preserved.
text-align: STR                                 #Alignement horizontal du texte, parmi left, right, center and justify
                                                #For display: [inline-]block
vertical-align: VAL                             #For display: inline*, alignement par rapport à la ligne courante :
                                                #  - baseline (déf)
                                                #  - sub|super
                                                #  - middle|text-top|bottom : align top|bottom line with parent element 
                                                #    middle|top|bottom (bottom != baseline)
                                                #  - top|bottom : comme text-top|bottom, mais par rapport à ligne courante, non
                                                #    à l'élément parent
                                                #  - LENP : align at LENP above baseline du parent element
                                                #For display: table-cells :
                                                #  - baseline|top|middle|bottom : move whole cell padding box par rapport à son
                                                #    row courant
text-indent: LENP                               #Indentation du texte (first-line only)
letter|word-spacing: VAL                        #Espace entre lettres ou mots : normal ou LEN (can be negative)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             FONTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@font-face { VAR:VAL... }                       #Charge une police et permet de l'utiliser comme font-family name.
                                                #VAR possibles :
                                                #  - font-family : STR qui pourra être utilisé par les font-family pour référer
                                                #    à cette police
                                                #  - src: local(STR)|URI [format(STR)]... (doit être dans même domaine)
                                                #         commencer par local(STR) pour voir si user a la police, sinon faire
                                                #         URL pour l'utiliser
                                                #         IE, et autres supportent différents formats. Faire :
                                                #         src: url("...eot") format("eot"), url("...woff") format("woff"),
                                                #         url("...ttf") format("truetype"). 
                                                #         Des sites proposent de générer cela.
                                                #         Same origin policy.
                                                #  - font-* : all of them except font-size, for selecting font variants.
                                                #  - unicode-range: URANGE.... Si police n'a pas cet URANGE, pas utilisée.
                                                #    Ne semble pas marcher.

font-size: VAL                                  #VAL possibles :
                                                #  - absolute values : medium ou [[x]x-]small|large
                                                #  - relative au parent element : larger|smaller
                                                #  - LENP
font-family: STR...                             #Police. Si plusieurs, utilise la première étant trouvée pour l'user.
                                                #STR peut être "STR" (specific police) ou generic police STR : 
                                                #sans-serif, serif, fantasy, cursive, monospace
                                                #Specific police names peut être différent de nom de fichier (le nom est
                                                #inscrit dans le fichier).

color: COLOR                                    #Text color (can't be gradient)
font-style: STR                                 #Choisit face normal ou italic (si disponible)
font-variant: STR                               #Choisit face normal ou small-caps (si disponible)
font-weight: VAL                                #Choisit face normal ou bold (si disponible). Possible aussi: bolder et 
                                                #lighter (than parent element).
                                                #Aussi NUM: 100 à 900, with 500 being normal.
text-decoration: STR                            #Can be none, underline, overline ou line-through
                                                #Can't be erased by children.
font: FONT-STYLE FONT-VARIANT FONT-WEIGHT       #Most are somewhat optional.
 FONT-SIZE LINE-HEIGHT FONT-FAMILY              #Reset font-stretch, font-kerning and font-size-adjust
text-transform: STR                             #Capitalisation parmi none (déf), lowercase, uppercase, capitalize
text-shadow: VAL...                             #Comme box-shadow, mais sans le spread LEN4 ni inset.

unicode-bidi: STR                               #Utilisation de direction: STR :
                                                #  - normal : direction n'a aucun effet
                                                #  - embed : n'a effet que pour élément
                                                #  - bidi-override : a effet pour éléments suivants également
direction: STR                                  #Direction : auto, rtl or ltr
 

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        BOX DECORATION         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


opacity: NUM                                    #Opacité de l'élément (0 à 1)
background-color: COLOR                         #Couleur de la content box.
background-image: IMAGE...                      #Always go over background-color. Always put a backup background-color in case
                                                #image can't be downloaded.
                                                #Multiple IMAGE : First IMAGE goes on top. Doing successive background-image
                                                #erase previous, not go over it. For all other background-* (except color),
                                                #multiple VAL... affect those different backgrounds.
                                                #SVG images automatically fit to container unless size or ratio is specified 
                                                #in the SVG file. If SVG looks blurry on Firefox, make it smaller then scale 
                                                #it 100 times.
background-size: VAL[ VAL2]...                  #Position VAL VAL2 (width height) de la background-image. 
                                                #If only VAL, both width and height. Peut être :
                                                #  - LENP
                                                #  - auto (déf) : keep size
                                                #  - contain : rescaled to "background-origin"-box (déf: padding-box), while 
                                                #    keeping proportion, so that one side of the image == one side of the box,
                                                #    and the other side image < other side box (is contained)
                                                #  - cover : same but the other side image > other side box (dépasse)
                                                #contain and cover remplacent both VAL et VAL2.
                                               ##Polyfills:
                                               ##  - jquery.backgroundSize.js (IE 6-8, deprecated):
                                               ##     - must use JQ.css()
                                               ##     - if JQ size changes, must manually $.refreshBackgroundDimensions(JQ)
                                               ##     - only contain|cover, no VAL2...
                                               ##     - background-position POSITION: no VAL2, only keywords or PERC
                                               ##     - no background-repeat|clip|origin|attachment|scroll
                                               ##     - no position: static
                                               ##  - background-size-polyfill (IE 8): must be done server-side
background-attachment: STR...                   #Values :
                                                #  - scrolled (déf) : normal
                                                #  - fixed : position is not according to content box but to whole viewport,
                                                #    so doesn't move while scrolling
background-repeat: VAL[ VAL2]...                #Repeating of the x-axis (VAL) and y-axis (VAL2) :
                                                #  - repeat (déf) : repeat et clip last one
                                                #  - no-repeat : don't repeat
                                                #VAL seul means VAL VAL. repeat-x and repeat-y comme VAL seule sont possibles.
background-position: POSITION...                #Position de la background-image au sein de la box (déf: top left)
background-clip: STR...                         #Clip la background-color/image selon : border-box (déf CSS), padding-box
                                                #ou content-box. 
                                                #Si border, est en dessous du border (border can be trasparent)
                                                #Clip, mais ne change pas position de la background-image (background-origin)
background-origin: STR...                       #Origine (coin supérieur gauche) de la première image (ou image de référence
                                                #si repeat est coin supérieur gauche de la border-box, content-box ou
                                                #padding-box (déf).
background: B-COLOR B-IMAGE B-POSITION
B-REPEAT B-ATTACHMENT B-CLIP...

border-left|top|bottom|right-color: COLOR
border-left|top|bottom|right-style: STR         #Parmi :
                                                #  - none (déf)|display : aucun
                                                #  - solid : plain color
                                                #  - dotted
                                                #  - dashed
                                                #  - double : two plain lines
                                                #  - outset/inset : simple embossed/carved
                                                #  - ridge/groove : advanced embossed/carved
border-left|top|bottom|right-width: VAL         #Can be LEN or STR : thin, medium (déf) or thick
border-bottom|top-left|right-radius:LENP[ LENP2]#Rounded corner : LENP horiz., LENP2 vertical. Si seulement LENP, LENP2 pareil.
                                                #Don't work with border-style: dotted or dashed
border-left|top|bottom|right: B-COLOR B-STYLE 
B-WIDTH                                         #Shorthand properties (following too)
border: B-COLOR B-STYLE B-WIDTH
border-color: COLOR...
border-style: STR...
border-width: VAL...
border-radius: LENP...[ / LENP2...]             #LENP sont les horiz. et LENP2 les vertic.

outline-color: COLOR                            #Outline are just like borders, except :
outline-style: STR                              #  - they are just outside borders 
outline-width: VAL                              #  - they don't take space (can even go over margin box).
outline: O-COLOR O-STYLE O-WIDTH                #  - they may be non-rectangular if some inline content is bigger than other
                                                #    inline content

box-shadow: VAL...                              #Shadow inside/outside of the margin box. Can be :
                                                #  - none (déf)
                                                #  - [inset] VAL : inside instead of outside
                                                #  - LEN LEN2 [LEN3[ LEN4]][ COLOR] : 
                                                #     - LEN LEN2 are horiz/vertic. shift.
                                                #     - LEN3 is the blur radius (déf: 0). 
                                                #     - LEN4 is size compared to element (déf: 0) (can be negative). 
                                                #If multiple VAL, multiple shadows.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            TABLES             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


table-layout: STR                               #For display:[inline-]table, whether cells adjust automatically to content
                                                #(auto (déf)) or are according to first row cells width or to columns width
                                                #(fixed).
border-collapse: STR                            #For display:[inline-]table, whether cell borders are merged (collapse) or not 
                                                #(separate (déf)).
                                                #Si collapse, border-radius ne marche pas.
border-spacing: LEN [LEN2]                      #For border-collapse: separate, horiz. (LEN) / vertic. (LEN2) space between
                                                #cells (déf: 0)
empty-cells: STR                                #For display: table-cell, whether empty cells have borders and backgrounds 
                                                #(show (déf) or hide)
caption-side: STR                               #Whether a display: table-caption will be on top (déf) or bottom.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             LISTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


                                                #Following are for display: list-item
list-style-type: STR                            #Bullet point image, parmi : none, disc (déf), square, decimal[-leading-zero],
                                                #lower|upper-roman|alpha|latin (alpha and latin are same), lower-greek,
                                                #armenian, georgian
list-style-image: IMAGE                         #Bullet point image
list-style-position: STR                        #Position du bullet-point : dans la box courante (inside) ou juste en
                                                #dehors (outside (déf))
list-style : LS-IMAGE LS-POSITION LS-TYPE       

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:   TRANSFORM AND ANIMATIONS    :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


EXTENSION ==>                                  ##-webkit- for all transform-related. Chrome works bad for 3D : 
                                                #  - only orthogonal perspective (perspective* doesn't work)
                                                #  - translateZ : l'axe Z est toujours le même, qu'importe la rotation
transform: FUNC...                              #Modifie rendered element (without changing flow/layout) :
                                                #  - translate[X|Y|Z|3d](LENP[, LENP2[, LENP3]]) : 
                                                #      If none of X|Y|Z, only LENP
                                                #  - rotate[X|Y|Z|3d]([3 NUM, ]ANGLE) (déf: Z) : 
                                                #      3d fixe l'axe de rotation en fonction du ratio X/Y/Z de NUM/NUM2/NUM3
                                                #  - skewX|Y(ANGLE[, ANGLE2])
                                                #  - scale[X|Y|Z|3d](NUM[, NUM2[, NUM3]]) :
                                                #      If none of X|Y|Z, duplication de NUM
                                                #      scaleZ semble seulement multiplier translateZ
                                                #  - matrix[3d](6|12 NUM) : matrix like OpenGL
                                                #  - perspective(LEN) : 
                                                #      Doit venir en premier, change perspective lors rotation.
                                                #Devient display: fixed durant transformation.
transform-origin: VAL[ VAL2[ VAL3]]             #Centre de l'opération effectué par transform, hors perspective (déf: center)
                                                #VAL peut être LENP|top|bottom|left|right|center. VAL est X, VAL2 Y, VAL3 Z.
perspective-origin: VAL[ VAL2[ VAL3]]           #Pareil pour transform: perspective. Affecte seulement éléments contenus.
perspective: LEN                                #Comme transform: perspective(LEN), mais pour éléments contenus.
backface-visibility: STR                        #visible or hidden pour la face de derrière (déf: visible)

EXTENSION ==>                                  ##-webkit- for all transition-related (including webkitTransitionEnd)
transition-property: STR...                     #Property to transit (déf: all).
                                                #The transition settings are specified on the "normal"/start rule, not the 
                                                #"ending" rule. The transition moves back when "ending" rule doesn't apply
                                                #anymore.
                                                #All properties based on numbers (including RECT, FUNC(NUM...), COLOR,
                                                #but excluding TIME) and plain colors, can be transited. Exceptions :
                                                #   - background-repeat|size|position, font-stretch, text-shadow, grid-*, 
                                                #     border-*color, border-spacing
                                                #Invisible elements can't be transited. Wait for elements to be ready on the
                                                #document before transition.
                                                #Can specify several properties : then each transition-duration|delay|timing
                                                #apply, or repeat if only one.
transition-duration: TIME...                    #Time of transition (déf: 0s)
transition-timing-function: FUNC...             #Evolution of the transition (slow at the end, etc.). Can be :
                                                #  - steps(NUM[, start|end]) : if start (déf: end), first step occurs 
                                                #    immediately
                                                #  - cubic-bezier(4 NUM) : bezier curve, where start handler has position
                                                #    NUM1,NUM2 et end handler NUM3,NUM4 (coordonnées 0 à 1)
                                                #    For jQuery UI Sine, Quad, Cubic, Quart, Circ, Expo, Back and Quint
                                                #    (but not Elastic nor Bounce) to cubic-bezier, see http://easings.net/
                                                #  - ease / ease-in-out : slow begin/end
                                                #  - ease-in|out: slow begin|end
                                                #  - linear
                                                #  - step-start|end : like steps(1, start|end)
transition-delay: TIME...                       #Time for transition to start (déf: 0s)
transition: PRO DURATION FUNC DELAY...          #Shorthand

TransitionEvent                                 #Readonly.
                                               ##Ext: Webkit
TRANSITIONEVENT.propertyName
TRANSITIONEVENT.elapsedTime                     #Does not take transition-delay into account
ALL.ontransitionend = FUNC(TRANSITIONEVENT)     #When a CSS transition ends.
                                               ##Ext: webkitTransitionEnd

EXTENSION ==>                                  ##-webkit- for all animation-related (including @-webkit-keyframes and 
                                               ##webkitTransitionEnd|*)
ANIMATIONS ==>                                  #Like transition, but sequence of them. Is launched as soon as the CSS text
                                                #is read (so it should be filtered by a selector).
                                                #Can also pause/itère/reverse.
@keyframes STR {                                #Une animation dont le name est STR.
  PERC... { ... }...                            #Les percentages ("keyframe") vont de 0% (can also be "from") to 100% (can 
}                                               #also be "to").
                                                #For each keyframe, apply the rule { ... }. Properties mentioned in one 
                                                #keyframe but not another are assumed to have the same value as before the
animation-name: STR...                          #Le STR de @keyframes à déclencher. 
                                                #Les propriétés animation-* ne doivent pas être dans la @keyframes, sauf 
                                                #animation-timing-function, qui peut être dehors (ensemble de l'animation) ou
                                                #dedans (une seule keyframe).
                                                #Les priorités à animer sont mêmes que pour transitions.
                                                #Can be several animation, like transitions.
animation-duration: TIME...                     #
animation-timing-function: FUNC...              #
animation-delay: TIME...                        #Like transitions, but for the whole animation.

animation-iteration-count: UINT...              #Nombre d'itérations (déf 1). Can be infinite.
animation-direction: STR...                     #Passage d'une itération à l'autre :
                                                #  - normal (déf): saut direct de 100% à 0%
                                                #  - alternate: reste à 0%/100%, et va dans sens opposé
animation-fill-mode: STR...                     #Par défaut, on saute directement de la position avant animation à la keyframe
                                                #0%/100%. Mais on peut :
                                                #  - none (déf)
                                                #  - forwards: la position reste à dernière keyframe après animation
                                                #  - backwards: position avant animation devient celle de première keyframe
                                                #  - both: forwards+backwards
animation-play-state: STR...                    #Défaut est running, mais on peut mettre paused (via JavaScript).
animation: NAME DURATION FUNC DELAY UINT DIR    #
  FILL STATE                                    #Shorthand

AnimationEvent                                  #Readonly.
                                               ##Ext: Webkit
ANIMATIONEVENT.propertyName
ANIMATIONEVENT.elapsedTime                      #Does not take animation-delay into account
ALL.onanimationstart|end = FUNC(ANIMATIONEVENT) #Quand CSS animation starts/ends.
ALL.onanimationiteration = FUNC(ANIMATIONEVENT) #Quand CSS animation ends an interation (except the last one).
                                               ##Ext: webkitAnimationStart|End|Iteration


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            OTHERS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

cursor: VAL...                                  #Image du cursor. 
                                                #Can be multiple so if first fails, second is used, except if first fails 
                                                #because of URI NUM NUM2 syntax not supported (IE). In last case, put 
                                                #"cursor: VAL" fallback before another "cursor: URI NUM NUM2".
                                                #VAL possible :
                                                #  - STR parmi (see MDN for pictures) :
                                                #    - auto, crosshair, default, move, text, wait, help, pointer
                                                #      n[ew]|s[ew]|w|e-resize, progress, all-scroll, cell, col|row-resize, 
                                                #      copy, no-drop, not-allowed, vertical-text, ew|ns|nesw|nwse-resize,
                                                #      alias
                                                #    - not FF/Chrome (Windows) : context-menu
                                                #    - not Opera : none
                                                #  - URI [NUM NUM2]: NUM NUM2 est le hotspot du cursor en pixel (coord. local)
                                                #    Not supported by Opera. .cur for all. Keep size 32x32px or 16x16

content: VAL[ VAL2]...                          #Ajoute du contenu. Le selector doit être SELECTOR:sbefore|after, et ajoute
                                                #avant/après cet élément ce qui est déclaré :
                                                #  - none
                                                #  - STR
                                                #  - IMAGE
                                                #  - attr(VAR[, STR]) : renvoie VAL d'attribut VAR, ou STR si absent (déf: "")
                                                #  - counter[s](...) : cf counter-*
                                                #  - open|close-quote : cf quotes
                                                #  - no-open|close-quote : don't insert quaotes, put increment quote level
                                                #Le SELECTOR::before|after peut être suivi de n'importe quel autre property.
quotes: VAL                                     #Set values of open-quote et close-quote selon :
                                                #  - none (déf)
                                                #  - [STR STR2]... : si plusieurs définit root level quotes, first child
                                                #    level quotes, etc.
                                                #Not for Safari.
counter-reset: VAR[ NUM]...                     #Counters are NUM variables, utilisées pour numéro de chapitre via
counter-increment: VAR[ NUM]...                 #content: counter[s](...).
                                                #Il faut d'abord initialiser à NUM via counter-reset (peut réinitialiser 
                                                #aussi), en général dans un ul/ol
                                                #counter-increment ajoute NUM, en général mis dans un li::before.
                                                #Substitution :
                                                #  - counter(VAR[, STR]) : remplacé par nombre. STR est un list-style-type.
                                                #  - counters(VAR, STR2[, STR]) : remplacé par nombre suivi de STR

page-break-after|before: STR                    #When browser/application defines page breaks, controls whether they are
                                                #auto (déf) or always (always page break after this element)
                                                #For display: [inline-]block. Media query doit accepter "paged".
page-break-inside: STR                          #Pareil mais inside l'élement : auto (déf) ou avoid (jamais au milieu de cet
                                                #élément)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         NOT SUPPORTED         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SUPPORTED BY IE10 BUT NOT OTHERS ==>            #Opera 12 :
                                                #  - transition & animation of text-shadow, grid-*, border-*color, 
                                                #    background-position
                                                #Opera 15 :
                                                #  - hyphens, hyphenate* : break word at end of line, according to languages
                                                #  - calc()
                                                #Safari 6 :
                                                #  - outline-color: invert
                                                #  - orphans widows
                                                #  - font-feature-settings
                                                #  - animation-direction: [alternate-]reverse
                                                #  - flexbox layout
                                               ##    Modernizr "flexbox" 
                                                #  - font-stretch
                                                #Safari 7 :
                                                #  - grid layout
                                                #  - LENvh, LENvw, LENvmin, LENvmax
                                                #  - extension+different syntax on gradients
                                                #Firefox 22 :
                                                #  - transition & animation of border-spacing
                                                #  - CSS regions :
                                                #    - @region, flow-into, flow-from, region-overflow, wrap* shape*
                                                #  - background-attachment: local
                                                #  - background-repeat: round/space
                                                #  - display: run-in
                                                #  - CSS device adapt :
                                                #    - @viewport, [min|max-]width/height (mobile phones), *zoom, orientation,
                                                #      resolution
                                                #  - @page, @page:first|left|right, marks, box-decoration-break, 
                                                #    page-break-before|after: avoid|left|right
                                                #  - column-span, break-after|before|inside
                                                #Chrome 28 :
                                                #  - perspective is buggy (cf doc). Might depend on GPU.
                                                #  - text-shadow : LEN4 (spread)
                                                #  - touch events : touch-action
                                                #  - column-fill
                                                #  - table selector CSS4 : 
                                                #     - :nth-[last-]column, :column, || selector
                                                #  - word-break
                                                #  - writing-mode 
                                                #  - text-justify
                                                #  - text-underline-position

NOT SUPPORTED AT LEAST BY IE10 ==>              #  - transition & animation : 
                                                #    - properties based on gradients
                                                #    - animation/transition of background-size, font-stretch
                                                #  - transition : 
                                                #    - TRANSITIONEVENT.pseudoElement
                                                #  - transform :
                                                #    - transform-style: preserve-3d
                                                #  - resize : let users resize elements
                                                #  - intrisic/extrinsic sizing :
                                                #    - max|min-height|width : fill-available
                                                #    - max|min-height|width + width : fit-content, min|max-content. 
                                                #      Works on <table>
                                                #  - filter() : Photoshop-like filters for pictures
                                                #  - mask*, clip* : SVG masks
                                                #  - :scope : apply CSS to specific element and children
                                                #  - @supports : feature support testing selector
                                                #  - object-fit|contain
                                                #  - SVG fonts
                                                #  - :in|out-of-range, :default, :read-only|write 
                                                #  - SELECTOR! > SELECTOR2 
                                                #  - :local-link, :any-link
                                                #  - :matches, :nth[-last]-match
                                                #  - icon
                                                #  - image-orientation, image-*
                                                #  - cursor: zoom-in|out
                                                #  - text-overflow: STR ou VAL VAL2
                                                #  - nav-down|up|left|right|index
                                                #  - attr()
                                                #  - toggle(VAL...)
                                                #  - hanging-punctuation
                                                #  - ::value, ::choices
                                                #  - ::repeatitem|index
                                                #  - border-image*
                                                #  - font-size-adjust
                                                #  - text-align-last
                                                #  - size
                                                #  - outline-offset, outline-radius
                                                #  - appearance
                                                #  - speech CSS : cue*, mark*, pause*, rest*, voice*, speak, phonemes, 
                                                #    interpret-as, volume, play-during, azimuth, elevation, 
                                                #    @phonetic-alphabet, etc.
                                                #  - initial
                                                #  - text-orientation
                                                #  - text-align: start|end, match-parent, STR
                                                #  - width: available, border|content-box
                                                #  - text-indent: hanging, each-line
                                                #  - SELECTOR /.../ SELECTOR2
                                                #  - :placeholder-shown, :user-error
                                                #  - :blank
                                                #  - ::marker
                                                #  - :dir(DIR)
                                                #  - :past, :future, :current
                                                #  - max-lines
                                                #  - tab-size
                                                #  - text-combine
                                                #  - mix-blend-mode, isolation, background-blend-mode
                                                #  - font-language-override, font-variant-*, font-kerning
                                                #    text-rendering, font-synthesis,
                                                #    unicode-range, text-emphasis*
                                                #  - @counter-style
                                                #  - @top-left (et autres)
                                                #  - @document
                                                #  - text-decoration-*
                                                #  - var()
                                                #  - cross-fade()
                                                #  - image-rect()
                                                #  - element()
