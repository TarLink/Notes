
         
   CSS   
         


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            GENERAL            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SYNTAX  ==>                                     #Case sensitive. 
                                                #Skips whitespaces.
                                                #CSS3 on-going, divided in modules.

INTEROPERABILITY ==>                            #Non-supported are skipped, last line wins. So put fallback first.
                                                #See HTML doc for list of browsers
                                                #Extensions fallbacks used when experimental:
                                                #   -moz- (Firefox), -webkit- (Chrome+Safari), -o- (Opera), -ms- (IE)
                                                ##Ext: signifie extensions nécessaires.
                                                ##Opera Mini: means works on all supported browser but Opera Mini


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             HTML              :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


<link rel="stylesheet" href="URL.css">          #From external file. Must be served with Content-Type [S] "text/css"
  media="MEDIAQUERY"                            #
  rel="alternate stylesheet" title="STR"        #Provide an alternate stylesheet in the view menu of the browser.
  LINK.disabled                                 #Disable le LINK (can be set). Only with CSS sheets.
  LINK.sheet                                    #Return STYLESHEET if link to it.

<style>...</style>                              #Inline
  media="MEDIAQUERY"                            #
  STYLE.disabled                                #

<any>
  style="NAME: VAL;[NAME: VAL;]..."             #In tags


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             TYPES             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


STR                                             
"STR"
'STR'                                           #Unicode : \XXXX.
VAR                                             #VAR names, used by CSS counters

NUM                                             #INT|FLOAT, can use scientific notation.
LEN                                             #Relative to font-size:
                                                #  - NUMrem: 1em is <html> font-size
                                                #  - NUMem: 1em is current font-size
                                                #     - when inherited, uses parent (that uses NUMem) font-size
                                                #     - to use current font-size even when inherited, use NUM instead 
                                                #       (only with line-height)
                                                #  - NUMex: lowercase height in current font-size (often 1/2 em)
                                                #  - NUMch: '0' width in current font-size (often 1/2em)
                                                #Relative to viewport size (i.e. only visible part):
                                                #  - NUMvh|vw: 1% of viewport height|width
                                                #  - NUMvmin: 1% of viewport min(height, width)
                                                #Absolute (avoid):
                                                #  - NUMpx|pc|pt|cm|mm|in: 
                                                #     - physical measure
                                                #     - Prefer px
                                                #     - always 96ppi, i.e.:
                                                #        - 1in = 96px = 72pt = 6pc = 25.4mm 
                                                #     - but this is virtual resolution and virtual pixels ("CSS pixels").
                                                #       Ratio between number of hardware pixels and CSS pixels is "pixel ratio",
                                                #       usually from 1 to 4
                                                #Relative:
                                                #  - LENvh, LENvw, LENvmin
                                               ##    Opera mini
PERC                                            #Percentage. Depends on property.
LENP                                            #LEN|PERC

DIRECTION                                       #top|left|bottom|right|center
POSITION                                        #[VAL [VAL2]] where VAL|VAL2 is [DIRECTION] [LENP]
                                                #Def VAL VAL2: top left
                                                #Def VAL|VAL2: center 0
                                                #Def DIRECTION: center
                                                #Def LENP: 0
                                                #If using only one PERC, the second will get same computed value, so PERC PERC != PERC
ANGLE                                           #NUMdeg, NUMrad, NUMgrad. Can be negative.

TIME                                            #TIMEms|TIMEs
COLOR                                           #Can be:
                                                #  - STR, dont blue, red, etc. (SVG color keywords)
                                                #  - #NNN[NNN]
                                                #  - rgb[a](255|100%,255|100%,255|100%[,1])
                                                #  - hsl[a](360,100%,100%[,1])
                                                #  - transparent: like rgba(1,1,1,0)
                                                #  - currentColor: current font "color"

URI                                             #url("URL")|none
GRADIENT                                        #[repeating-]linear-gradient(ANGLE|STR, COLOR[ LENP]...)
                                                #  - STR: to [left|right] [top|bottom] (def: to bottom)
                                                #  - LENP: def: 0|100% for begin|end, interpolation for others.
                                                #    Cannot be negative.
                                                #[repeating-]radial-gradient([STR][ VAL][at POSITION], COLOR[ PERC]...)
                                                #  - STR: circle or ellipse (déf)
                                                #  - VAL is radius (def: farthest-corner):
                                                #    - STR: closest|farthest-corner|side
                                                #    - LEN for circle, LENP LENP2 for ellipse
                                                #  - POSITION is center (def: center)
                                               ##Opera mini
IMAGE                                           #URI|GRADIENT

FUNC                                            #FUNC(ARG)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SYNTAX             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


/* COMMENT */

@STR VAL                                        #At-rules

SELECTOR... {                                   #RULE
  VAR: VAL;...
}


VALUE CALCULATION ==>                           #  - initial: default
                                                #  - specified: after inheritance
                                                #  - computed: after calculation without layout (e.g. converting %, em)
                                                #  - used: after calculation with layout (e.g. converting %, em)
                                                #  - actual: after browser correction (e.g. border-width FLOAT->INT)

INHERITANCE ==>                                 #Some properties are inherited by elements children:
                                                #  - paragraph-related: text-align, white-space, visibility, etc.
                                                #  - font-related: color, font-*, etc.
                                                #  - table-related: border-collapse, etc.
                                                #  - list-related: list-*
                                                #  - quotes

inherit                                         #Used as a VAL, means parent VAL:
                                                #  - for inherited properties, allows restoring values, e.g.:
                                                #      SELECTOR { VAR: VAL; }                   // Override parent VAL
                                                #      MORE_SPECIFIC_SELECTOR { VAR: inherit; } // Restore parent VAL
                                                #  - for non-inherited properties, make them inherited, e.g.:
                                                #      PARENT { border: VAL }
                                                #      CHILD { border: inherit }

SHORTHAND PROPERTY ==>                          #Allow defining several properties in one, e.g. border, outline,
                                                #margin, padding, font, etc.
                                                #Note:
                                                #  - ommitted VAL takes default value, even if previously defined
                                                #  - "inherit" only works with 1-value syntax
                                                #  - order usually does not matter, except:
                                                #     - on positional values:
                                                #        - 4: TOP RIGHT BOTTOM LEFT
                                                #        - 3: TOP RIGHT|LEFT BOTTOM
                                                #        - 2: TOP|BOTTOM RIGHT|LEFT
                                                #        - 1: TOP|BOTTOM|RIGHT|LEFT
                                                #     - on corners:
                                                #        - 4: TOP-LEFT TOP-RIGHT BOTTOM-RIGHT BOTTOM-LEFT
                                                #        - 3: TOP-LEFT TOP-RIGHT|BOTTOM-LEFT BOTTOM-RIGHT
                                                #        - 2: TOP-LEFT|BOTTOM-RIGHT TOP-RIGHT|BOTTOM-LEFT
                                                #        - 1: TOP-LEFT|BOTTOM-RIGHT|TOP-RIGHT|BOTTOM-LEFT


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           AT-RULES            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@charset "CHARSET";                             #Should always be at beginning with no newline|whitespace before.
                                                #Ex: "UTF-8"                                            
                                                #Not needed if CSS served with Content-Type with correct charset

@import URL [MEDIAQUERY]                        #Must be put first, but after @charset

@namespace [NAMESPACE] URL                      #Define an XML NAMESPACE or the default one (URL points to XML namespace)
                                                #This allows using NAMESPACE|SELECTOR, to restrict to a given NAMESPACE,
                                                #or SELECTOR to use default one.
                                                #Useful e.g. when mixing SVG with XHTML.
                                                #Must be put first, but after @charset|import


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:         MEDIA QUERIES         :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


@media MEDIAQUERY... { RULE }                   #Fire RULE if MEDIAQUERY is met:
                                                #  - MEDIAQUERY: [only|not] MEDIAFEATURES_ARR
                                                #     - 'only' does not change test, but will make IE<8 ignore whole
                                                #       CSS file
                                                #  - MEDIAFEATURES_ARR: MEDIAFEATURES[,...]
                                                #  - MEDIAFEATURES: 
                                                #     - MEDIA|(FEATURE), 'and'-separated
                                                #     - If present, MEDIA must be first
                                                #  - MEDIA: "all|screen|print|speech" (def: 'all'): device type
                                                #  - (FEATURE) is ([min-|max-]VAR[: VAL]) (def VAL: "not 0")
                                                #     - height|width: viewport size
                                                #     - aspect-ratio NUM/NUM2 (e.g. 16/9)
                                                #     - orientation landscape|portrait
                                                #     - color NUM: bits/channel (0 if no colors)
                                                #     - color-index NUM: number of indexed colors (0 if none)
                                                #     - monochrome NUM: bits/channel. If not monochrome, 0.
                                                #     - scan: progressive|interlace (for tv)
                                                #     - grid NUM: 1 if tty or feature phone old display (0 otherwise)
WINDOW.matchMedia("MEDIAQUERY")->MEDIAQUERYLIST #
MEDIAQUERYLIST.media                            #"MEDIAQUERY". Readonly
MEDIAQUERYLIST.matches                          #BOOL
MEDIAQUERYLIST.add|removeListener
(FUNC("MEDIAQUERY"))                            #When matches changes.
mediaCheck(OBJ)                                ##According to OBJ.media "MEDIAQUERY", fires OBJ.entry|exit|both(MEDIAQUERYLIST)
                                               ##Compatible older IE (with only [min|max-]height|width|aspect-ratio: VALpx|em)
                                               ##Version 0.4.6
mq("MEDIAQUERY")->BOOL                         ##Polyfill of matchMedia("MEDIAQUERY").matches, by Modernizr.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           SELECTORS           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SPECIFICITY ==>                                 #When several SELECTOR for the same element.
                                                #Priority is 'specificity', checking (from most specific to least):
                                                #  - presence of:
                                                #     - VAR: VAL !important (to avoid)
                                                #  - most specific part's type (e.g. "#ID" in "div#ID")
                                                #    From more to less specific:
                                                #     - HTML-inline
                                                #     - #ID
                                                #     - :PSEUDO, [ATTR ...], .CLASS 
                                                #     - TAG, ::PSEUDO
                                                #     - * 
                                                #  - number of combinators used with the most specific parts, e.g.:
                                                #     - .CLASS.CLASS2 (2) > .CLASS (1)
                                                #     - .CLASS .CLASS2 (2) === .CLASS > .CLASS2 (2)
                                                #     - TAG.CLASS (1, because TAG < .CLASS)
                                                #     - TAG:PSEUDO:PSEUDO2 (2) === .CLASS > .CLASS2 (2)
                                                #  - load order (last has higher priority)

SELECTORSELECTOR2                               #And
SELECTOR, SELECTOR2...                          #Or

SELECTOR SELECTOR2...                           #Descendant
SELECTOR > SELECTOR2...                         #Direct child
SELECTOR + SELECTOR2...                         #Direct next sibling
SELECTOR ~ SELECTOR2...                         #Any following sibling

:not(SELECTOR)                                  #

*                                               #Any. To avoid.

[ATTR]                                          #ATTR exists
[ATTR="STR"]                                    #ATTR value === "STR"
[ATTR!="STR"]                                  ##ATTR value !== "STR" (including nothing) (jQuery)
[ATTR$="STR"]                                   #ATTR value === "...STR"
[ATTR^="STR"]                                   #ATTR value === "STR..."
[ATTR|="STR"]                                   #ATTR value === "STR[-...]"
[ATTR*="STR"]                                   #ATTR value === "...STR..."
[ATTR~="STR"]                                   #ATTR value === "...STR..." and STR is a whole word (space-delimited)
#ID                                             #Same as [id="ID"]. Prefer using .CLASS
.CLASS                                          #Same as [class~="CLASS"]

:enabled|disabled                               #Like [disabled]
:checked                                        #Like [checked|selected]
:selected                                      ##Like [selected] (jQuery)
:data(STR)                                     ##Like [data-STR], but having used JQ.data(STR) (jQuery UI)
:lang(LANG)                                     #Like [lang="LANG"] but case-insensitive, and includes parents
:target                                         #Like #ID, where ID is URL fragment identifier

:required                                       #Like input|textarea|select[required]
:optional                                       #Like input|textarea|select:not([required])
:indeterminate                                  #Like input[type="checkbox"] + ELEM.indeterminate === true
:[in]valid                                      #ELEM.validity.valid

TAG                                             #<TAG>

:link                                           #Like [href], i.e. <a|area>
                                                #Should follow this order: :link, :visited, :hover, :active
:visited                                        #Same but previously clicked on it. 
                                                #Can apply change color-related properties (and not opacity).
:input                                         ##<input>, <button>, <textarea>, <select>, <optgroup>, <option>, <label>,
                                               ##<fieldset>, etc. (jQuery)
:button|checkbox|file|image|password|radio|reset|submit|text      ##Like [type="button|checkbox|file|image|password|radio|reset|submit|text"] (jQuery)
:header                                        ##<h*> (not <hgroup>) (jQuery)
:root                                          ##<html> (jQuery)

:nth-child([NUMn] + [NUM2])                     #Current element is x-th's child of its parent, where x === NUM*n + NUM2, with n>0
                                                #NUM|NUM2 can be negative.
                                                #Can also be :nth-child(odd|event), i.e. 2n[+1]
:nth-last-child(...)                            #Same but counting children from the end.
:first|last-child                               #Same as :nth-[last-]child(1)
:only-child                                     #Same as :first-child:last-child
:...-of-type                                    #Same as :...-child, but consider children tag by tag.
:odd|even                                      ##Same as :nth-child(odd|even) (jQuery)

:empty                                          #Has no child
:parent                                        ##Has child (jQuery)
:eq(INT)
:lt|gt(INT) 
:first|last                                    ##Of all the matching elements (jQuery)

:hover                                          #On mouseover.
:active                                         #On clickdown.
:focus                                          #On focus.
:focusable|tabbable                            ##(jQuery UI)
:animated                                      ##Currently animated (jQuery)

:hidden|visible                                ##Not taking any space (jQuery), e.g.:
                                               ##  - diplay: none
                                               ##  - width|height === 0
                                               ##  - <input type="hidden">
                                               ##  - hidden ancestor
                                               ##Does not cover invisible but taking space (e.g. 'transparent' or visibility: hidden)

:contains('STR')                               ##A TEXT descendant contains STR (jQuery)
:has(...)                                      ##Like JQ.has(...) (jQuery)

::first-letter                                  #Can only change font, text decoration, background and box model properties
                                                #Display BLOCK
::first-line                                    #Can only change font, text decoration and background properties
                                                #Display BLOCK


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           BOX MODEL           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


BOX MODEL ==>                                   #Content > Padding > Border > Margin
[min|max-]height|width: LENP|auto               #  - content: 
                                                #     - actual content
                                                #     - Display BLOCK
                                                #     - Def: auto, i.e. according to content
                                                #     - Can use box-sizing: content-box|border-box:
                                                #        - if border-box, specifies border-box height|width, not actual content
                                                #        - for browser compatibility (useless)
                                                #Percentage: 
                                                #  - *width: parent block's width
                                                #  - *height: parent block's height, if specified. Otherwise, not used.
                                                #Display BLOCK
padding[-top|bottom|left|right]: LENP           #  - padding: 
                                                #     - space between content and border
                                                #     - def: 0
                                                #     - Percentage: parent block's padding*
border-top|bottom|left|right-width: LEN|STR     #  - border: see below (def: medium, but border-style none)
margin[-top|bottom|left|right]: LENP|auto       #  - margin:
                                                #     - margin-top|bottom: Display BLOCK
                                                #     - can be negative
                                                #     - def: 0
                                                #     - Percentage: parent block's margin*
                                                #     - auto: like 0, except if:
                                                #        - Normal flow or (providing left|right are not 'auto') Absolute
                                                #        - used on both margin-left|right
                                                #        -> horizontally center element
                                                #     - collapsed:
                                                #        - only bigger margin is kept.
                                                #          If negative NUM, sum of smallest negative NUM and biggest positive NUM.
                                                #        - Normal flow
                                                #        - when two margin-top|bottom follow each other with nothing in-between:
                                                #           - margin-bottom and margin-top of an element with content+padding+border 0px
                                                #           - nothing (border|padding, text node, etc.) separating:
                                                #              - first child's margin-top and parent's margin-top
                                                #              - last child's margin-bottom and parent's margin-bottom
                                                #           - two vertical siblings (not necessarily same tag)

line-height: LENP|normal|NUM                    #Height of phrasing content's lines.
                                                #Will also affect, on Display:
                                                #  - INLINE: content's height
                                                #  - BLOCK, content's min-height (together with real 'min-height') unless 'height' specified
                                                #Percentage: like using NUMem
                                                #NUM (prefer) is like NUMem, but always current font-size even when inherited (see above)
                                                #Def: normal (around 1.2)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            DISPLAY            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


REPLACED ELEMENT ==>                            #Element not ruled by CSS, e.g. <img|object|video|audio|canvas|iframe> 
                                                #and elements inserted with 'content':
                                                #  - no default 'display'
                                                #  - behave like inline-block elements, except:
                                                #     - not affected by phrasing content properties like line-height

display: VAL                                    #Default depends on HTML tag:
                                                #  - <table>-related elements: display: table-*
                                                #  - <li>: display: list-item
                                                #  - <ol|ul>: display: block
                                                #  - invisible content, like <head|link|script|meta|title|base>: display: none
                                                #  - top-level controls, like <input|button|textarea|select>: display: inline-block
                                                #  - lower-level controls, like <optgroup|option>: display: block
                                                #  - replaced elements: no default display
                                                #  - phrasing content, like <span>: display: inline
                                                #  - sectioning content, like <div|p>: display: block
display: inline|inline-block|block              #Differences:
                                                #  - normal flow: inline elements stacked horizontally, block vertically, 
                                                #    inline-block horizontally unless they span another line
                                                #  - inline not affected by width|height (or related properties) nor margin-top|bottom, [inline-]block is
                                                #  - inline[-*] usually phrasing content, block sectioning or embedded content
display: none                                   #Remove element from layout
<any>                                    
  hidden                                        #Like display:none but should be used on elements never shown
Display BLOCK                                   #Means not display: inline
Display INLINE                                  #Means display: inline[-*]

visibility: STR                                 #Affect visibility:
                                                #  - visible (def)
                                                #  - hidden: but does not affect layout


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           POSITION            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


PARENT BLOCK ==>                                #Means: 
                                                #  - Normal flow or floats: closest parent with Display BLOCK
                                                #  - position: absolute: closest absolute parent (if none, parent document)
                                                #  - position: fixed: viewport

NORMAL FLOW ==>                                 #Position:
position: static                                #  - normal (déf)
position: relative                              #  - same, but with shift relative to normal position. 
                                                #    Siblings and parents stay at same position.

FLOATS ==>                                      #Position:
float: left|right|none                          #  - like normal flow, but aligned to left|right, taking space normal flow 
                                                #    cannot occupy anymore.
                                                #  - will stack horizontally with other floats (unless clear: left|right|both)
                                                #  - forces display: block|table
clear: none|left|right|both                     #Shift element down to the lowest left|right|both floating box:
                                                #  - Normal flow: affect next elements
                                                #  - Floats: stack vertically
                                                #  - Absolute: no effect
                                                #"Clearfix":
                                                #  - make float's parent's min-height === float's height
                                                #  - how: set on parent those properties:
                                                #     - overflow: hidden|auto
                                                #     - or content: "" (with :after), display: block|table, clear: both
                                                #  - for IE7, used to require also zoom: 1 or width: 100%

ABSOLUTE ==>                                    #Taken out of normal flow:
position: absolute                              #  - relative to closest Absolute parent (if none, parent document)
position: fixed                                 #  - relative to viewport (i.e. not affected by scrolling)

top|bottom|right|left: LENP|auto                #Specify shift|position with position: relative|absolute|fixed 
                                                #Def: auto, i.e. 'not specified'
                                                #Percentage: parent block's top|bottom|right|left

z-index: NUM|auto                               #Stack: 
                                                #  - Absolute > Floating > Normal flow
                                                #  - Only relevant when there is potentional overlap, i.e.:
                                                #     - Absolute or display: relative
                                                #     - lower opacity
                                                #     - transform
                                                #  - higher is closer. Def is 0. Can be negative.
                                                #  - is done sibling to sibling, i.e.:
                                                #      <a>        // z-index: 1
                                                #        <b></b>  // z-index: 3
                                                #      </a>
                                                #      <c></c>    // z-index: 2, above <b>, because sibling to sibling
                                                #  - def: auto (i.e. same as parent)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:      OVERFLOW / WRAPPING      :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


overflow[-x|y]: STR                             #How overflown content is displayed (does not change siblings|parents layout):
                                                #  - visible (def): overflows
                                                #  - hidden: hidden, no scrollbar
                                                #  - auto: hidden, scrollbar if needed
                                                #  - scroll: hidden, always scrollbar
                                                #Display BLOCK
                                                #Overflow will only happen if block cannot vertically expand, i.e. either:
                                                #  - wrapped:
                                                #     - [max-]height
                                                #  - non-wrapped:
                                                #     - white-space: nowrap|pre  
                                                #     - word as long as width
word-wrap: STR                                  #If break-word (def: normal), breaks non-wrapped overflown content at any letter
                                                #(not only whitespace), making it not overflown anymore.
word-break: STR                                 #normal|break-all: same as word-wrap normal|break-all, but more standard
                                                ##Opera mini
text-overflow: STR                              #How non-wrapped overflown content is displayed:
                                                #  - clip (def): hidden
                                                #  - ellipsis: same but with "..."
                                                #Display BLOCK
white-space: STR                                #How whitespaces in phrasing content is handled:
                                                #  - wrapped: overflown whitespace -> newline
                                                #  - collapsed: several whitespaces -> one space
                                                #                         +----------+-------------+
                                                #                         | Wrapped  | Not wrapped |
                                                # +-----------------------+----------+-------------+
                                                # |     Any collapsed     | normal   | nowrap      |
                                                # +-----------------------+----------+-------------+
                                                # | Newline not collapsed | pre-line |             |
                                                # +-----------------------+----------+-------------+
                                                # | Nothing collapsed     | pre-wrap | pre         |
                                                # +-----------------------+----------+-------------+


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           PARAGRAPH           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


text-align: STR                                 #Horizontal alignment of phrasing content: left|right|center|justify
                                                #Display BLOCK
vertical-align: VAL                             #Vertical alignment of phrasing content:
                                                #  - baseline (def): baseline to parent's baseline
                                                #  - sub|super: baseline to parent's subscript|superscript's line
                                                #  - text-top|bottom: top|bottom to top|bottom's parent's line
                                                #  - top|bottom: top|bottom to top|bottom's parent's box
                                                #  - middle: middle to parent's baseline + 1ex
                                                #  - LENP: baseline to parent's baseline + LENP
                                                #Display INLINE
                                                #Percentage: current line-height

text-indent: LENP                               #Text indent (first line only)
                                                #Display BLOCK
                                                #Percentage: current width
word-spacing: LENP|normal                       #Space between words.
                                                #Percentage: current font's width
letter-spacing: LEN|normal                      #Space between letters.
                                               ##Opera mini: letter-spacing


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             FONTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@font-face { VAR: VAL... }                      #Loads a font, allowing it to be used as font-family.
                                                #VAR:
                                                #  - font-family: STR, new font-family name
                                                #  - src: local(STR)|URI [format(STR)]...:
                                                #     - must be in same domain (same origin policy)
                                                #     - local(STR) look in user's browser. Use URI as fallback.
                                                #     - formats: 
                                                #        - woff: all
                                                #        - embedded-opentype: only IE
                                                #        - opentype|truetype: not IE
                                                #        - svg: only Safari
                                                #        - woff2: not IE nor Safari
                                                #       Should use fallbacks because of browser support (can use online generators)
                                                #  - font-style|variant|weight|stretch|feature-settings: for selecting font variants.
                                               ##Opera Mini

font-size: VAL                                  #VAL:
                                                #  - LENP. 
                                                #    Percentage: parent's font-size
                                                #  - rem-based keywords: [[x]x-]small|medium|large (about 0.55, 0.6, 0.8, 1, 1.125, 1.5, 2rem)
                                                #  - em-based keywords: larger|smaller (about 0.8, 1.2em)
font-family: STR...                             #Font:
                                                #  - "STR": specific font (font name, which can differ from filename)
                                                #  - STR: browser font among sans-serif|serif|fantasy|cursive|monospace
                                                #Can use several for fallbacks:
                                                #  - done glyph by glyph, for a specific variant (font-style|etc.)

color: COLOR                                    #Font color
font-style: STR                                 #Can be:
                                                #  - normal (def)
                                                #  - oblique: slopped but not curvy
                                                #  - italic: slopped and curvy, fallbacks to oblique
font-variant: VAL                               #Can be normal|small-caps
font-weight: VAL                                #Can be:
                                                #  - normal|bold
                                                #  - 100-900: 100 is thin, 400 is normal, 700 is bold, 900 is extra bold
                                                #  - lighter|bolder: less|more than parent's, among 100|400|700|900
text-decoration: STR                            #Can be none|underline|overline|line-through
font: FONT-STYLE FONT-VARIANT FONT-WEIGHT       #Note:
 FONT-SIZE LINE-HEIGHT FONT-FAMILY              #  - font-size: must be defined, and be after font-style|variant|weigth but before line-height
                                                #  - font-family: must be defined, and be last
                                                #  - font-variant: only normal|small-caps allowed
                                                #  - font-stretch|kerning|size-adjust: reset

text-transform: STR                             #Can be none|lowercase|uppercase|capitalize
text-shadow: VAL...                             #Same syntax as box-shadow, except no spread nor inset.
                                               ##Opera mini

direction: STR                                  #Text direction: rtl or ltr (def)
unicode-bidi: STR                               #How 'direction' is used:
                                                #  - normal (def)
                                                #  - embed: only for children
                                                #  - bidi-override: also revert individual letters
 

																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:          BACKGROUND           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


opacity: NUM                                    #From 0 to 1

background-color: COLOR                         #
background-image: IMAGE...                      #Interaction with background-color:
                                                #  - goes over it
                                                #  - should always put a backup background-color in case image can't be downloaded.
                                                #Multiple IMAGE: 
                                                #  - First IMAGE goes on top. 
                                                #  - Doing successive background-image erase previous, not go over it. 
                                                #  - For all other background-* (except color), multiple VAL... affect those 
                                                #    different backgrounds in same order.
                                                #SVG images: 
                                                #  - automatically fit to container unless size or ratio is specified 
                                                #    in the SVG file. 
                                                #  - If SVG looks blurry on Firefox, make it smaller then scale it 100 times.

background-origin: STR...                       #background-image's origin, i.e. initial containing box:
                                                #  - together with background-position, determines where image starts 
                                                #  - determines how background-size: contain|cover work
                                                #Can be content-box, padding-box (def) or border-box
background-position: POSITION...                #Where first background-image should start, within its origin (def: top left)
                                                #Percentage: 
                                                #  - 100% === origin's size - image's size
                                                #  - rational: 50% will center image, 100% will mirror it to other corner
background-attachment: STR...                   #Can be:
                                                #  - scrolled (def): normal
                                                #  - fixed: 
                                                #     - make background's origin the viewport instead of background-origin
                                                #     - so doesn't move while scrolling
                                               ##Opera mini

background-clip: STR...                         #Clip background-color|image (but does not change background's origin nor position)
                                                #Can be content-box, padding-box or border-box (def)
                                                #If border-box, goes beyond border (which can be transparent).

background-size: VAL...                         #background-image's size:
                                                #  - X Y, where X|Y:
                                                #     - auto (def): image's intrisic size
                                                #     - LENP. Percentage: origin's box
                                                #  - XY: same as XY XY
                                                #  - contain: 
                                                #     - rescaled to background-image origin's box
                                                #     - while keeping ratio, so it is "contained":
                                                #        - one side of the image == one side of the box,
                                                #        - the other side image < other side box
                                                #  - cover: same but the other side image > other side box ("clipped")
                                               ##Polyfills:
                                               ##  - jquery.backgroundSize.js (IE 6-8, deprecated):
                                               ##     - must use JQ.css()
                                               ##     - if JQ size changes, must manually $.refreshBackgroundDimensions(JQ)
                                               ##     - only contain|cover, no VAL2...
                                               ##     - background-position POSITION: no VAL2, only keywords or PERC
                                               ##     - no background-repeat|clip|origin|attachment|scroll
                                               ##     - no position: static
                                               ##  - background-size-polyfill (IE 8): must be done server-side
                                               ##Opera mini

background-repeat: X[ Y]...                     #Repetition of the background-image (X alone means X X)
                                                #  - no-repeat
                                                #  - repeat (def)
                                                #  - repeat-x|y: same as repeat no-repeat (or inverse)

background: B-COLOR B-IMAGE B-POSITION
B-REPEAT B-ATTACHMENT B-CLIP...                 #


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            BORDERS            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


border-left|top|bottom|right-color: COLOR       #Def: currentColor
border-left|top|bottom|right-style: STR         #Parmi :
                                                #  - none|hidden (def): put width to 0
                                                #  - solid: one plain line
                                                #  - double: two plain lines
                                                #  - dotted
                                                #  - dashed
                                                #  - outset|inset : simple embossed|carved
                                                #  - ridge|groove : advanced embossed|carved
border-left|top|bottom|right-width: LEN|STR     #Width:
                                                #  - STR can be thin|medium|thick
                                                #  - def: medium (but def border-style is none)
border-bottom|top-left|right-radius:LENP[ LENP2]#Rounded corner: LENP horiz., LENP2 vertical.
                                                #Percentage: border box size.

border-color: COLOR...                          #Shorthand
border-style: STR...                            #Shorthand
border-width: VAL...                            #Shorthand
border-radius: LENP...[ / LENP2...]             #Shorthand. LENP sont les horiz. et LENP2 les vertic.
                                               ##Opera mini

border-left|top|bottom|right: B-COLOR B-STYLE 
B-WIDTH                                         #Shorthand
border: B-COLOR B-STYLE B-WIDTH                 #Shorthand


ALL ==>                                        ##Opera mini
                                                #Border-image box:
                                                #  - is originally same as border box, but when changed does not change border box
                                                #  - can go over border box:
                                                #     - with border-image-width > border-width: inside, covering padding|content
                                                #     - with border-image-outset > 0: outside, covering margins
border-image-source: IMAGE|none                 #If defined, border-color becomes transparent.
                                                #Must be the full square, 4 corners + 4 sides (corners will not be repeated, only middle image)
border-image-slice: VAL... [fill]               #Same values as border-width (except can only be PERC or NUM (pixels))
                                                #Defines how the border-image-source is divided into corners, sides and middle,
                                                #by specifying top|bottom and left|right width:
                                                #  - e.g. with a 30*30px square, sides are 10px-wide and middle 10*10px, so should
                                                #    use 10 10 10 10
                                                #  - is blank beyond border-image-source
                                                #  - def: 100%, i.e. corner images will be full image, and side images will be empty
                                                #  - if 'fill', adds background-image as middle image
                                                #    fill can be placed anywhere
border-image-repeat: STR[ STR2]                 #How side images are repeated.
                                                #For horizontal[ vertical]:
                                                #  - stretch (def): to fit
                                                #  - repeat: repeat FLOAT times
                                                #  - round: repeat INT times, then stretch a little in order to fill gap still there
border-image-width: VAL...                      #Same values as border-width
                                                #border-image box width (def: border-width)
border-image-outset: VAL...                     #Same values as border-width
                                                #Grows/offsets border-image box (but does not change width)
border-image: BI-SOURCE BI-SLICE BI-WIDTH 
BI-OUTSET BI-REPEAT                             #Shorthand


ALL ==>                                        ##Opera mini
outline-color: COLOR                            #Outline are just like borders, except :
outline-style: STR                              #  - they are just outside borders 
outline-width: VAL                              #  - they don't take space (can even go over margin box).
outline: O-COLOR O-STYLE O-WIDTH                #  - they may be non-rectangular if some phrasing content is bigger than other
                                                #    phrasing content (depends on browser)

box-shadow: VAL...                              #Shadow inside/outside of the margin box. 
                                                #Can be none or [inset] LEN LEN2 [LEN3[ LEN4]][ COLOR] : 
                                                #  - inset: inside instead of outside
                                                #  - LEN LEN2: horizontal/vertical shift
                                                #  - LEN3: blur radius (def: 0)
                                                #  - LEN4: spread, i.e. size compared to element, where positive number
                                                #    grows, negative shrinks (def: 0)
                                                #Can use multiple VAL for multiple shadows.
                                               ##Opera mini


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            COLUMNS            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


column-width: LEN                               #Divides layout into several columns according to column width:
                                                #  - fill one column after another
                                                #  - no element can span several columns
                                                #Display BLOCK
                                                #Allow using column*
                                               ##Ext: -webkit, -moz
column-count: UINT                              #If column-width not set, same but according to number of columns.
                                                #If set, max. number of columns
                                                #Allow using column*
columns: WIDTH COUNT                            #Shorthand

column-gap: LEN|normal                          #Space between each column.
                                                #(déf: normal, i.e. 1em)

column-rule-color: COLOR                        #Like for border-* but for lines between columns: 
column-rule-style: STR                          #  - only appearing when columns are needed
column-rule-width: VAL                          #  - does not change columns positions
column-rule: COLOR STR VAL                      #Shorthand


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            TABLES             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


display: table                                  #Like <table>
display: table-caption                          #Like <caption>
display: table-header|row|footer-group          #Like <thead|tbody|tfoot>
display: table-column[-group]                   #Like <col[group]>
display: table-row|cell                         #Like <tr|td|th>
                                                #Are all default display values for those elements.
                                                #All except: 
                                                #  - table:                   no position: relative
                                                #  - table[-caption]:         no margin
                                                #  - table[-caption|cell]:    no padding
                                                #  - table[-caption|column*]: no *width
                                                #  - table[-caption|row*]:    no *height
                                                #Table-cell can use vertical-align
                                                #Allow using table-related properties below.
                                                #Display BLOCK
display: inline-table                           #Like display: table, but Display INLINE

table-layout: STR                               #How cells width is calculated:
                                                #  - auto (def): according to content
                                                #  - fixed: 
                                                #     - if <col[group]>, according to their width
                                                #     - otherwise according to first <tr>'s cells width
                                                #On display: [inline-]table.
border-collapse: STR                            #How cell borders are merged:
                                                #  - collapse: merged.
                                                #    border-radius does not work.
                                                #  - separate (def): not merged. An extra 1px is added between cells
                                                #On display: [inline-]table.
border-spacing: LEN [LEN2]                      #If border-collapse: separate, space between cell borders (def: depends on browser)
                                                #On display: [inline-]table.
empty-cells: STR                                #Whether empty cells have borders and backgrounds: show (def) or hide.
                                                #On display: table-cell
caption-side: STR                               #Whether caption is on top (def) or bottom.
                                                #On display: table-caption


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             LISTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


display: list-item                              #Like <li>:
                                                #  - allow using list-style-*
                                                #  - user agent usually adds margins on top|bottom and padding on left
                                                #Are default display values for <li> (<ol|ul> are display: block)

list-style-type: STR                            #Bullet point image, among: 
                                                #  - none 
                                                #  - disc (def for <ul>), square: shapes
                                                #  - decimal[-leading-zero] (def for <ol>): numbers
                                                #  - lower|upper-roman|alpha|latin (alpha|latin are same): letters
                                                #  - lower-greek, armenian, georgian
list-style-image: IMAGE                         #Bullet point image
list-style-position: STR                        #Bullet point position: 
                                                #  - inside: current box
                                                #  - outside (def): create extra inline box on left of current box
list-style : LS-IMAGE LS-POSITION LS-TYPE       


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           TRANSFORM           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


ALL ==>                                        ##Ext: -webkit
                                               ##Opera mini
transform: FUNC...                              #Modify rendered element:
                                                #  - without changing flow
                                                #  - but applies to Absolute children too
                                                #Can be:
                                                #  - translateX|Y|Z(LENP)
                                                #  - translate[3d](LENP, LENP2[, LENP3])
                                                #     - 3d: only difference is to allow using LENP3
                                                #  - scaleX|Y|Z(NUM)
                                                #     - scaleZ multiplies translateZ
                                                #  - scale[3d](NUM, NUM2[, NUM3])
                                                #     - 3d: only difference is to allow using NUM3
                                                #  - rotate[X|Y|Z](ANGLE):
                                                #     - rotate(): same as rotateZ()
                                                #  - rotate3d(X, Y, Z, ANGLE):
                                                #     - keep rotation axis fixed, according to ratio X/Y/Z
                                                #  - perspective(LEN): like 'perspective: LEN', except: 
                                                #     - applied to (only) current element
                                                #     - must come before the FUNC that will use perspective
                                                #     - perspective-origin is transform-origin
                                                #        - if parent's perspective-origin present, use both
                                                #  - skewX|Y(ANGLE)
                                                #  - matrix[3d](6|12 NUM): matrix like OpenGL
transform-origin: X[ Y[ Z]]                     #Transformation center (def: 50% 50% 0).
                                                #In other words: translate3d(-X, -Y, -Z), applies transform(), then translate3d(X, Y, Z)
                                                #X|Y|Z can be LENP|DIRECTION.

perspective: LEN                                #Changes perspective ('distance from eye') for rotateX|Y(), translateZ(), 
                                                #for all child elements using 'transform' (but not for itself)
perspective-origin: X[ Y[ Z]]                   #Focus center ('eye position') of 'perspective' (def: 50% 50%)
                                                #X|Y|Z can be LENP|DIRECTION.

backface-visibility: STR                        #Whether back side is visible (def) or hidden


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:    TRANSITIONS ANIMATIONS     :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/



ALL ==>                                        ##Opera mini
transition-property: STR|none|all...            #Property to transition (déf: all):
                                                #  - any change to this property will be done smoothly, according to 
                                                #    other transition-*
                                                #  - with several STR..., other transition-* will follow same property order
                                                #    (or repeat if using only one value)
                                                #  - can be transited:
                                                #     - property based on numbers: including RECT, FUNC(NUM...), COLOR
                                                #  - cannot be transited:
                                                #     - property based on TIME
                                                #     - background-repeat|size|position, font-stretch, text-shadow, grid-*, 
                                                #       border-*color, border-spacing
                                                #     - invisible elements
                                                #     - elements not ready on the document
transition-delay: TIME...                       #How long before starting (def: 0s)
transition-duration: TIME...                    #How long it lasts (def: 0s). 
                                                #Should add transition-delay to it.
transition-timing-function: FUNC...             #Relation between value change and time spent (e.g. slower at end, etc.).
                                                #Can be :
                                                #  - linear (def)
                                                #  - ease-in|out: slow begin|end
                                                #  - ease-in-out: slow begin, slow end
                                                #  - ease: like ease-out, but slightly less slow begin
                                                #  - steps(NUM[, start|end]): 
                                                #     - if start (def: end), first step occurs immediately
                                                #  - step-start|end: like steps(1, start|end)
                                                #  - cubic-bezier(4 NUM): 
                                                #     - bezier curve, where start handler has position NUM1, NUM2 
                                                #       and end handler NUM3, NUM4
                                                #     - for jQuery UI Sine, Quad, Cubic, Quart, Circ, Expo, Back and Quint
                                                #       (but not Elastic nor Bounce) to cubic-bezier, see http://easings.net/
transition: PROPERTY DURATION FUNC DELAY...     #Shorthand

TransitionEvent                                 #Readonly.
                                               ##Ext: Webkit
TRANSITIONEVENT.propertyName
TRANSITIONEVENT.elapsedTime                     #Does not take transition-delay into account
ALL.ontransitionend = FUNC(TRANSITIONEVENT)     #When a CSS transition ends.
                                               ##Ext: webkitTransitionEnd


ALL ==>                                        ##Ext: -webkit
                                               ##Opera mini
ANIMATIONS ==>                                  #Like transition, but:
                                                #  - sequence of them
                                                #  - can pause|repeat|reverse
                                                #  - launched as soon as the CSS selector containing 'animation-name' applies
@keyframes KEYFRAMES {                          #Define an animation.
  PERC... { ... }...                            #Each line is a single 'keyframe':
}                                               #  - go from 0% to 100%:
                                                #     - can use 'from|to' for 0|100%
                                                #     - 0|100% must be specified
                                                #     - the timing is defined by the others animation-*
                                                #  - each time a keyframe is reached, its rules { ... } are applied
                                                #     - transitions are applied between keyframes
                                                #     - properties mentioned in some keyframes but not others are interpolated
                                                #     - animatable properties are same as transitionnable properties
                                                #  - cannot contain animation-*, except animation-timing-function which can be
                                                #    in KEYFRAMES (valid only for this one) or outside (for any)
animation-name: KEYFRAMES...                    #Fires an animation.
                                                #Can be several animation, like transitions.

animation-duration: TIME...                     #
animation-timing-function: FUNC...              #
animation-delay: TIME...                        #Like transitions, but for the whole animation.

animation-iteration-count: UINT|infinite...     #Number of iterations (def: 1)
animation-direction: STR...                     #Where to start each new iteration:
                                                #  - normal (def): always 0% to 100%
                                                #  - alternate: 0% to 100%, then 100% to 0%
animation-fill-mode: STR...                     #Style to apply when animation is applied, but not playing yet|anymore:
                                                #  - 'yet', during delay:
                                                #     - none|forwards (def): no keyframe
                                                #     - backwards|both: first keyframe
                                                #  - 'anymore', after last keyframe:
                                                #     - none|backwards (def): no keyframe
                                                #     - forwards|both: last keyframe
animation-play-state: STR...                    #When paused (def: running), stops current animation.
                                                #To manipulate:
                                                #  - having animation-name + animation-play-state: paused on general selector
                                                #    and animation-play-state: running on specific selector, so the 
                                                #    animation keeps state
                                                #  - through JavaScript
animation: NAME DURATION FUNC DELAY UINT DIR    #
  FILL STATE                                    #Shorthand

AnimationEvent                                  #Readonly.
                                               ##Ext: Webkit
ANIMATIONEVENT.propertyName
ANIMATIONEVENT.elapsedTime                      #Does not take animation-delay into account
ALL.onanimationstart|end = FUNC(ANIMATIONEVENT) #Quand CSS animation starts/ends.
ALL.onanimationiteration = FUNC(ANIMATIONEVENT) #Quand CSS animation ends an interation (except the last one).
                                               ##Ext: webkitAnimationStart|End|Iteration


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:          PAGED MEDIA          :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


PAGED MEDIA ==>                                 #For application that divides in pages, e.g. when printing.

page-break-after|before: STR                    #Insert page break:
                                                #  - auto (def): if at end|beginning of page
                                                #  - always
                                                #Display BLOCK, and not Absolute
page-break-inside: STR                          #Can insert page break inside the element: 
                                                #  - auto (def)
                                                #  - avoid

@page { ... }                                   #Only applies on paged media.
                                                #Can only change: margin, orphans|widows, page-break*
@page:first { ... }                             #Only first page
@page:left|right { ... }                        #Only left|right


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            CONTENT            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


content: VAL[ VAL2]...                          #Add inline box before|after SELECTOR. 
                                                #Selector must be SELECTOR::after|before.
                                                #Fill inline box with with content VAL[ VAL2]...:
                                                #  - none|normal (def)
                                                #  - STR
                                                #  - IMAGE
                                                #  - attr(VAR[, STR]): value of HTML attribute VAR, or STR if absent (def: "")
                                                #  - open|close-quote: 
                                                #     - opening|closing quotes
                                                #     - value depends on quote depth level, i.e. if a parent is preceded by
                                                #       an opening quote
                                                #     - their value can be determined by 'quotes' (cf below)
                                                #  - no-open|close-quote: don't insert quotes, put increment quote depth level
                                                #  - counter(COUNTER_VAR[, STR]): replaced by bullet value:
                                                #     - number is COUNTER_VAR value
                                                #        - COUNTER_VAR is initialized|incremented by counter-reset|increment
                                                #          (cf below)
                                                #        - it is done per siblings, i.e. independently for each DOM depth level,
                                                #          introducing counter depth level
                                                #     - STR is list-style-type (def: 'decimal')
                                                #  - counters(VAR, STR2[, STR]): same but:
                                                #     - preceded by counter value of each parent counter depth level, each followed
                                                #       by STR2 (e.g. ".")
quotes: VAL                                     #open|close-quote's value (def: auto):
                                                #  - none
                                                #  - [STR STR2]...: one for each quote depth level
counter-reset|increment: COUNTER_VAR[ NUM]...   #Set|increments COUNTER_VAR (def NUM: 0|1)
                                                #Other increment is done in each SELECTOR::after|before, and reset is done before
                                                #any (e.g. on <body> or <ul|ol>).


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            CURSOR             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


cursor: VAL...                                  #Image du cursor. 
                                                #Can be multiple so if first fails, second is used, except if first fails 
                                                #because of URI NUM NUM2 syntax not supported (IE). In last case, put 
                                                #"cursor: VAL" fallback before another "cursor: URI NUM NUM2".
                                                #VAL possible :
                                                #  - STR parmi (see MDN for pictures) :
                                                #    - auto, default (def), none
                                                #    - context-menu, help, pointer, progress, wait
                                                #    - cell, crosshair, [vertical-]text
                                                #    - alias, copy, move, no-drop, not-allowed
                                                #    - all-scroll, col|row-resize, n|e|s|w|ne|nw|se|sw|ew|ns|nesw|nwse-resize
                                                #  - URI: can provide several URI as fallbacks
                                                #Mobile browsers do not support

pointer-events: VAR                             #When mouse events can be triggered.
                                                #Note that child events might still trigger it, then bubble it to the parent.
                                                #VAR:
                                                #  - auto (def, i.e. always for non-SVG, visiblePainted for SVG)
                                                #  - none: never
                                                #  (SVG only)
                                                #  - fill: mouse over fill
                                                #  - stroke: mouse over stroke
                                                #  - all: mouse over fill|stroke
                                                #  - painted: same as 'all' + fill|stroke SVG property not 'none'
                                                #  - visible, visiblePainted|Fill|Stoke: same as 'all|painter|fill|stroke' +
                                                #    visibility SVG property is 'visible'
                                                ##Opera mini


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         NOT SUPPORTED         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


                                                #Safari 8:
                                                #  - ANGLEturn
                                                #  - background-repeat: round|space
                                                #  - Grid (display: [inline-]grid)
                                                #  - Flex (align-*, flex*, justify-content, order, display: [inline-]flex)
                                                #  - @media (min|max-resolution, dppx, dpcm), 
                                                #  - Paged media (page-break-after|before (except auto|always), @page :first|left|right, marks, bleed)
                                                #  - Fragmentation (box-decoration-break, break-*)
                                                #  - animation-direction: [alternate-]reverse
                                                #  - CSS3 Text (text-align-last, word-break: keep-all)
                                                #  - CSS3 fonts (font-feature-settings, font-stretch, @font-feature-values, font-kerning, font-language-override, font-size-adjust, font-synthesis, 
                                                #    font-variant[*])
                                                #  - Masking (mask*, clip-path)
                                                #  - @viewport, [max|min-]zoom
                                                #  - touch-action
                                                #  - ime-mode
                                                #  - orphans|widows
                                                #  - @media [min|max-]resolution

                                                #Firefox 40:
                                                #  - @font-face: unicode-range
                                                #  - column-span
                                                #  - line-break

                                                #Chrome 45:
                                                #  - Display module (display: contents|run-in),
                                                #  - hyphens
                                                #  - visibility: collapse (different behavior)

                                                #Android browser 4.3:
                                                #  - fullscreen (:fullscreen, ::backdrop)
                                                #  - calc()

                                                #Safari mobile 9:
                                                #  - ::selection

                                                #IE11:
                                                #  - attr() (extended syntax)
                                                #  - background-image: image-rect()
                                                #  - Logical properties (caption-side: block|inline-*, clear|float: inline-start|end, block|inline-size, border-inline|block-*, 
                                                #    margin|padding|offset|max|min-block|inline-*)
                                                #  - cursor: grab[bing], zoom-in|out
                                                #  - Ruby layout (display: ruby*, ruby*)
                                                #  - @font-face WOFF2
                                                #  - Counter styles (list-style-type (extended values))
                                                #  - Intrisic sizing (min|max-height|width: fill|fit-content|min-content|max-content, 
                                                #    width: fit-content|min-content|max-content, [fill-]available, border|content-box)
                                                #  - CSS4 Media queries (@media scripting|pointer|hover|light-level|inverted-colors|update-frequency|overflow-block|overflow-inline)
                                                #  - nested @media
                                                #  - position: sticky
                                                #  - CSS3 Text (tab-size, text-align: justify-all|start|end|match-parent, text-indent: hanging|each-line, text-transform (full-width, full-size-kana))
                                                #  - outline-color: invert
                                                #  - text-overflow (two-value of STR)
                                                #  - CSS3 writing module (unicode-bidi: isolate*|plaintext)
                                                #  - Counter styles (@counter-style, symbols)
                                                #  - Blending (background|mix-blend-mode, isolation)
                                                #  - Replaced content (element(), image-rendering, image-orientation, object-fit|position)
                                                #  - Shapes (BASIC-SHAPE (i.e. inset|polygon|circle|ellipse()), shape-*)
                                                #  - Text decoration (text-decoration-*, text-underline-position)
                                                #  - CSS3 writing module (writing-mode, text-orientation, text-combine-upright)
                                                #  - transform-style, transform-box
                                                #  - all
                                                #  - :default
                                                #  - :dir(DIR)
                                                #  - @document
                                                #  - element
                                                #  - initial
                                                #  - :in|out-of-range, :read-only|write 
                                                #  - LENvmax
                                                #  - outline-offset
                                                #  - overflow-wrap
                                                #  - resize
                                                #  - unset
                                                #  - will-change
                                                #  - filter()
                                                #  - :scope
                                                #  - scroll-behavior
                                                #  - scroll-snap-*
                                                #  - @supports
                                                #  - text-rendering
                                                #  - transition and animation on 'content'
                                                #  - Selector [ATTR ... i]
                                                #  - TRANSITIONEVENT.pseudoElement
                                                #  - SVG fonts
