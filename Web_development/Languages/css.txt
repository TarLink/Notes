
         
   CSS   
         


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            GENERAL            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SYNTAX  ==>                                     #Case sensitive. 
                                                #Skips whitespaces.
                                                #CSS3 on-going, divided in modules.

INCLUDING IN HTML ==>                           #

<link rel="stylesheet" href="URL.css">          #From external file. Must be served with Content-Type [S] "text/css"
  media="MEDIA_QUERY"                           #MEDIA_QUERY is usually "all" (auquel cas inutile)

<style>...</style>                              #Inline

<div style="NAME: VAL;[NAME: VAL;]..."></div>   #In tags

INTEROPERABILITY ==>                            #Non-supported are skipped, last line wins. So put fallback first.
                                                #Extensions fallbacks used when experimental:
                                                #   -moz- (Firefox), -webkit- (Chrome+Safari), -o- (Opera), -ms- (IE)
                                                ##Ext: signifie extensions nécessaires.
                                                ##Opera Mini: means works on all supported browser but Opera Mini


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SYNTAX             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


/* COMMENT */

@STR VAL                                        #At-rules

SELECTOR... {                                   #RULE
  VAR: VAL;...
}

STR                                             
"STR"
'STR'                                           #Unicode : \XXXX.
VAR                                             #VAR names, used by CSS counters

NUM                                             #INT|FLOAT, can use scientific notation.
LEN                                             #Relative to font-size:
                                                #  - NUMrem: 1em is <html> font-size
                                                #  - NUMem: 1em is current font-size
                                                #     - when inherited, uses parent (that uses NUMem) font-size
                                                #     - to use current font-size even when inherited, use NUM instead 
                                                #       (only with line-height)
                                                #  - NUMex: lowercase height in current font-size (often 1/2 em)
                                                #  - NUMch: '0' width in current font-size (often 1/2em)
                                                #Relative to viewport size (i.e. only visible part):
                                                #  - NUMvh|vw: 1% of viewport height|width
                                                #  - NUMvmin: 1% of viewport min(height, width)
                                                #Absolute (avoid):
                                                #  - NUMpx|pc|pt|cm|mm|in: 
                                                #     - physical measure
                                                #     - Prefer px
                                                #     - always 96ppi, i.e.:
                                                #        - 1in = 96px = 72pt = 6pc = 25.4mm 
                                                #     - but this is virtual resolution and virtual pixels ("CSS pixels").
                                                #       Ratio between number of hardware pixels and CSS pixels is "pixel ratio",
                                                #       usually from 1 to 4
                                                #Relative:
                                                #  - LENvh, LENvw, LENvmin
                                               ##    Opera mini
PERC                                            #Percentage. Depends on property.
LENP                                            #LEN|PERC

POSITION                                        #[VAL [VAL2]] where VAL|VAL2 is [DIRECTION] [LENP]
                                                #Def VAL VAL2: top left
                                                #Def VAL|VAL2: center 0
                                                #Def DIRECTION: center
                                                #Def LENP: 0
ANGLE                                           #NUMdeg, NUMrad, NUMgrad. Can be negative.

TIME                                            #TIMEms|TIMEs
COLOR                                           #Can be:
                                                #  - STR, dont blue, red, etc. (SVG color keywords)
                                                #  - #NNN[NNN]
                                                #  - rgb[a](255|100%,255|100%,255|100%[,1])
                                                #  - hsl[a](360,100%,100%[,1])
                                                #  - transparent: like rgba(1,1,1,0)
                                                #  - currentColor: current font "color"

URI                                             #url("URL")|none
GRADIENT                                        #[repeating-]linear-gradient(ANGLE|STR, COLOR[ LENP]...)
                                                #  - STR: to [left|right] [top|bottom] (def: to bottom)
                                                #  - LENP: def: 0|100% for begin|end, interpolation for others.
                                                #    Cannot be negative.
                                                #[repeating-]radial-gradient([STR][ VAL][at POSITION], COLOR[ PERC]...)
                                                #  - STR: circle or ellipse (déf)
                                                #  - VAL is radius (def: farthest-corner):
                                                #    - STR: closest|farthest-corner|side
                                                #    - LEN for circle, LENP LENP2 for ellipse
                                                #  - POSITION is center (def: center)
                                               ##Opera mini
IMAGE                                           #URI|GRADIENT

FUNC                                            #FUNC(ARG)


VALUE CALCULATION ==>                           #  - initial: default
                                                #  - specified: after inheritance
                                                #  - computed: after calculation without layout (e.g. converting %, em)
                                                #  - used: after calculation with layout (e.g. converting %, em)
                                                #  - actual: after browser correction (e.g. border-width FLOAT->INT)

INHERITANCE ==>                                 #Some properties are inherited by elements children:
                                                #  - paragraph-related: text-align, white-space, visibility, etc.
                                                #  - font-related: color, font-*, etc.
                                                #  - table-related: border-collapse, etc.
                                                #  - list-related: list-*
                                                #  - quotes

inherit                                         #Used as a VAL, means parent VAL:
                                                #  - for inherited properties, allows restoring values, e.g.:
                                                #      SELECTOR { VAR: VAL; }                   // Override parent VAL
                                                #      MORE_SPECIFIC_SELECTOR { VAR: inherit; } // Restore parent VAL
                                                #  - for non-inherited properties, make them inherited, e.g.:
                                                #      PARENT { border: VAL }
                                                #      CHILD { border: inherit }

SHORTHAND PROPERTY ==>                          #Allow defining several properties in one, e.g. border, outline,
                                                #margin, padding, font, etc.
                                                #Note:
                                                #  - ommitted VAL takes default value, even if previously defined
                                                #  - "inherit" only works with 1-value syntax
                                                #  - order usually does not matter, except:
                                                #     - on positional values:
                                                #        - 4: TOP RIGHT BOTTOM LEFT
                                                #        - 3: TOP RIGHT|LEFT BOTTOM
                                                #        - 2: TOP|BOTTOM RIGHT|LEFT
                                                #        - 1: TOP|BOTTOM|RIGHT|LEFT
                                                #     - on corners:
                                                #        - 4: TOP-LEFT TOP-RIGHT BOTTOM-RIGHT BOTTOM-LEFT
                                                #        - 3: TOP-LEFT TOP-RIGHT|BOTTOM-LEFT BOTTOM-RIGHT
                                                #        - 2: TOP-LEFT|BOTTOM-RIGHT TOP-RIGHT|BOTTOM-LEFT
                                                #        - 1: TOP-LEFT|BOTTOM-RIGHT|TOP-RIGHT|BOTTOM-LEFT


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           AT-RULES            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@charset "CHARSET";                             #Should always be at beginning with no newline|whitespace before.
                                                #Ex: "UTF-8"                                            
                                                #Not needed if CSS served with Content-Type with correct charset

@media MEDIAQUERY... { RULE }                   #Fire RULE if MEDIAQUERY is met:
                                                #  - MEDIAQUERY: [only|not] MEDIAFEATURES_ARR
                                                #     - 'only' does not change test, but will make IE<8 ignore whole
                                                #       CSS file
                                                #  - MEDIAFEATURES_ARR: MEDIAFEATURES[,...]
                                                #  - MEDIAFEATURES: 
                                                #     - MEDIA|(FEATURE), 'and'-separated
                                                #     - If present, MEDIA must be first
                                                #  - MEDIA: "all|screen|print|speech" (def: 'all'): device type
                                                #  - (FEATURE) is ([min-|max-]VAR[: VAL]) (def VAL: "not 0")
                                                #     - height|width: viewport size
                                                #     - aspect-ratio NUM/NUM2 (e.g. 16/9)
                                                #     - orientation landscape|portrait
                                                #     - color NUM: bits/channel (0 if no colors)
                                                #     - color-index NUM: number of indexed colors (0 if none)
                                                #     - monochrome NUM: bits/channel. If not monochrome, 0.
                                                #     - scan: progressive|interlace (for tv)
                                                #     - grid NUM: 1 if tty or feature phone old display (0 otherwise)
WINDOW.matchMedia("MEDIAQUERY")->MEDIAQUERYLIST #
MEDIAQUERYLIST.media                            #"MEDIAQUERY". Readonly
MEDIAQUERYLIST.matches                          #BOOL
MEDIAQUERYLIST.add|removeListener
(FUNC("MEDIAQUERY"))                            #When matches changes.
mediaCheck(OBJ)                                ##According to OBJ.media "MEDIAQUERY", fires OBJ.entry|exit|both(MEDIAQUERYLIST)
                                               ##Compatible older IE (with only [min|max-]height|width|aspect-ratio: VALpx|em)
                                               ##Version 0.4.6
mq("MEDIAQUERY")->BOOL                         ##Polyfill of matchMedia("MEDIAQUERY").matches, by Modernizr.

@import URL [MEDIAQUERY]                        #Must be put first, but after @charset


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           SELECTORS           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SPECIFICITY ==>                                 #When several SELECTOR for the same element.
                                                #Priority is 'specificity', checking (from most specific to least):
                                                #  - presence of:
                                                #     - VAR: VAL !important (to avoid)
                                                #  - most specific part's type (e.g. "#ID" in "div#ID")
                                                #    From more to less specific:
                                                #     - HTML-inline
                                                #     - #ID
                                                #     - :PSEUDO, [ATTR ...], .CLASS 
                                                #     - TAG, ::PSEUDO
                                                #     - * 
                                                #  - number of combinators used with the most specific parts, e.g.:
                                                #     - .CLASS.CLASS2 (2) > .CLASS (1)
                                                #     - .CLASS .CLASS2 (2) === .CLASS > .CLASS2 (2)
                                                #     - TAG.CLASS (1, because TAG < .CLASS)
                                                #     - TAG:PSEUDO:PSEUDO2 (2) === .CLASS > .CLASS2 (2)
                                                #  - load order (last has higher priority)

SELECTORSELECTOR2                               #And
SELECTOR, SELECTOR2...                          #Or

SELECTOR SELECTOR2...                           #Descendant
SELECTOR > SELECTOR2...                         #Direct child
SELECTOR + SELECTOR2...                         #Direct next sibling
SELECTOR ~ SELECTOR2...                         #Any following sibling

:not(SELECTOR)                                  #

*                                               #Any. To avoid.

[ATTR]                                          #ATTR exists
[ATTR="STR"]                                    #ATTR value === "STR"
[ATTR!="STR"]                                  ##ATTR value !== "STR" (including nothing) (jQuery)
[ATTR$="STR"]                                   #ATTR value === "...STR"
[ATTR^="STR"]                                   #ATTR value === "STR..."
[ATTR|="STR"]                                   #ATTR value === "STR[-...]"
[ATTR*="STR"]                                   #ATTR value === "...STR..."
[ATTR~="STR"]                                   #ATTR value === "...STR..." and STR is a whole word (space-delimited)
#ID                                             #Same as [id="ID"]. Prefer using .CLASS
.CLASS                                          #Same as [class~="CLASS"]

:enabled|disabled                               #Like [disabled]
:checked                                        #Like [checked|selected]
:selected                                      ##Like [selected] (jQuery)
:data(STR)                                     ##Like [data-STR], but having used JQ.data(STR) (jQuery UI)
:lang(LANG)                                     #Like [lang="LANG"] but case-insensitive, and includes parents
:target                                         #Like #ID, where ID is URL fragment identifier

TAG                                             #<TAG>

:link                                           #Like [href], i.e. <a|area>
                                                #Should follow this order: :link, :visited, :hover, :active
:visited                                        #Same but previously clicked on it. 
                                                #Can apply change color-related properties (and not opacity).
:input                                         ##<input>, <button>, <textarea>, <select>, <optgroup>, <option>, <label>,
                                               ##<fieldset>, etc. (jQuery)
:button|checkbox|file|image|password|radio|reset|submit|text      ##Like [type="button|checkbox|file|image|password|radio|reset|submit|text"] (jQuery)
:header                                        ##<h*> (not <hgroup>) (jQuery)
:root                                          ##<html> (jQuery)

:nth-child([NUMn] + [NUM2])                     #Current element is x-th's child of its parent, where x === NUM*n + NUM2, with n>0
                                                #NUM|NUM2 can be negative.
                                                #Can also be :nth-child(odd|event), i.e. 2n[+1]
:nth-last-child(...)                            #Same but counting children from the end.
:first|last-child                               #Same as :nth-[last-]child(1)
:only-child                                     #Same as :first-child:last-child
:...-of-type                                    #Same as :...-child, but consider children tag by tag.
:odd|even                                      ##Same as :nth-child(odd|even) (jQuery)

:empty                                          #Has no child
:parent                                        ##Has child (jQuery)
:eq(INT)
:lt|gt(INT) 
:first|last                                    ##Of all the matching elements (jQuery)

:hover                                          #On mouseover.
:active                                         #On clickdown.
:focus                                          #On focus.
:focusable|tabbable                            ##(jQuery UI)
:animated                                      ##Currently animated (jQuery)

:hidden|visible                                ##Not taking any space (jQuery), e.g.:
                                               ##  - diplay: none
                                               ##  - width|height === 0
                                               ##  - <input type="hidden">
                                               ##  - hidden ancestor
                                               ##Does not cover invisible but taking space (e.g. 'transparent' or visibility: hidden)

:contains('STR')                               ##A TEXT descendant contains STR (jQuery)
:has(...)                                      ##Like JQ.has(...) (jQuery)

:[in]valid                                      #ELEM.validity.valid

::first-letter                                  #Can only change font, text decoration, background and box model properties
                                                #Display BLOCK
::first-line                                    #Can only change font, text decoration and background properties
                                                #Display BLOCK


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            TO SORT            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/



Display: table-cell: should be put in display INLINE???
::first-letter|line: should be put in display INLINE???


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           BOX MODEL           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


BOX MODEL ==>                                   #Content > Padding > Border > Margin
[min|max-]height|width: LENP|auto               #  - content: 
                                                #     - actual content
                                                #     - Display BLOCK
                                                #     - Def: auto, i.e. according to content
                                                #     - Can use box-sizing: content-box|border-box:
                                                #        - if border-box, specifies border-box height|width, not actual content
                                                #        - for browser compatibility (useless)
                                                #Percentage: 
                                                #  - *width: parent block's width
                                                #  - *height: parent block's height, if specified. Otherwise, not used.
                                                #Display BLOCK
padding[-top|bottom|left|right]: LENP           #  - padding: 
                                                #     - space between content and border
                                                #     - def: 0
                                                #     - Percentage: parent block's padding*
border-top|bottom|left|right-width: LEN|STR     #  - border: 
                                                #     - STR can be thin|medium|thick
                                                #     - def: medium (but def border-style is none)
margin[-top|bottom|left|right]: LENP|auto       #  - margin:
                                                #     - margin-top|bottom: Display BLOCK
                                                #     - can be negative
                                                #     - def: 0
                                                #     - Percentage: parent block's margin*
                                                #     - auto: like 0, except if:
                                                #        - Non-Float or (providing left|right are not 'auto') Absolute
                                                #        - used on both margin-left|right
                                                #        -> horizontally center element
                                                #     - collapsed:
                                                #        - only bigger margin is kept.
                                                #          If negative NUM, sum of smallest negative NUM and biggest positive NUM.
                                                #        - Normal flow
                                                #        - when two margin-top|bottom follow each other with nothing in-between:
                                                #           - margin-bottom and margin-top of an element with content+padding+border 0px
                                                #           - nothing (border|padding, text node, etc.) separating:
                                                #              - first child's margin-top and parent's margin-top
                                                #              - last child's margin-bottom and parent's margin-bottom
                                                #           - two vertical siblings (not necessarily same tag)

line-height: LENP|normal|NUM                    #Height of phrasing content's lines.
                                                #Will also affect, on Display:
                                                #  - INLINE: content's height
                                                #  - BLOCK, content's min-height (together with real 'min-height') unless 'height' specified
                                                #Percentage: like using NUMem
                                                #NUM (prefer) is like NUMem, but always current font-size even when inherited (see above)
                                                #Def: normal (around 1.2)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            DISPLAY            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


REPLACED ELEMENT ==>                            #Element not ruled by CSS, e.g. <img>, <object>, <video>, <input>, <textarea>, <audio>, <canvas>
                                                #and elements inserted with 'content'.
                                                #Behave like inline-block elements, except:
                                                #  - not affected by phrasing content properties like line-height

display: inline|inline-block|block              #Differences:
                                                #  - normal flow: inline elements stacked horizontally, block vertically, 
                                                #    inline-block horizontally unless they span another line
                                                #  - inline not affected by width|height (or related properties) nor margin-top|bottom, [inline-]block is
                                                #  - inline[-*] usually phrasing content, block sectioning or embedded content
display: none                                   #Remove element from layout
Display BLOCK                                   #Means not display: inline
Display INLINE                                  #Means display: inline[-*]

visibility: STR                                 #Affect visibility:
                                                #  - visible (def)
                                                #  - hidden: but does not affect layout


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           POSITION            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


PARENT BLOCK ==>                                #Means: 
                                                #  - Normal flow or floats: closest parent with Display BLOCK
                                                #  - position: absolute: closest absolute parent (if none, parent document)
                                                #  - position: fixed: viewport

NORMAL FLOW ==>                                 #Position:
position: static                                #  - normal (déf)
position: relative                              #  - same, but with shift relative to normal position. 
                                                #    Siblings and parents stay at same position.

FLOATS ==>                                      #Position:
float: left|right|none                          #  - like normal flow, but aligned to left|right, taking space normal flow 
                                                #    cannot occupy anymore.
                                                #  - will stack horizontally with other floats (unless clear: left|right|both)
                                                #  - forces display: block|table
clear: none|left|right|both                     #Shift element down to the lowest left|right|both floating box:
                                                #  - Normal flow: affect next elements
                                                #  - Floats: stack vertically
                                                #  - Absolute: no effect
                                                #"Clearfix":
                                                #  - make float's parent's min-height === float's height
                                                #  - how: set on parent those properties:
                                                #     - overflow: hidden|auto
                                                #     - or content: "" (with :after), display: block|table, clear: both
                                                #  - for IE7, used to require also zoom: 1 or width: 100%

ABSOLUTE ==>                                    #Taken out of normal flow:
position: absolute                              #  - relative to closest Absolute parent (if none, parent document)
position: fixed                                 #  - relative to viewport (i.e. not affected by scrolling)

top|bottom|right|left: LENP|auto                #Specify shift|position with position: relative|absolute|fixed 
                                                #Def: auto, i.e. 'not specified'
                                                #Percentage: parent block's top|bottom|right|left

z-index: NUM|auto                               #Stack: 
                                                #  - Absolute > Floating > Normal flow
                                                #  - Only relevant when there is potentional overlap, i.e.:
                                                #     - Absolute or display: relative
                                                #     - lower opacity
                                                #     - transform
                                                #  - higher is closer. Def is 0. Can be negative.
                                                #  - is done sibling to sibling, i.e.:
                                                #      <a>        // z-index: 1
                                                #        <b></b>  // z-index: 3
                                                #      </a>
                                                #      <c></c>    // z-index: 2, above <b>, because sibling to sibling
                                                #  - def: auto (i.e. same as parent)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:      OVERFLOW / WRAPPING      :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


overflow[-x|y]: STR                             #How overflown content is displayed (does not change siblings|parents layout):
                                                #  - visible (def): overflows
                                                #  - hidden: hidden, no scrollbar
                                                #  - auto: hidden, scrollbar if needed
                                                #  - scroll: hidden, always scrollbar
                                                #Display BLOCK
                                                #Overflow will only happen if block cannot vertically expand, i.e. either:
                                                #  - wrapped:
                                                #     - [max-]height
                                                #  - non-wrapped:
                                                #     - white-space: nowrap|pre  
                                                #     - word as long as width
word-wrap: STR                                  #If break-word (def: normal), breaks non-wrapped overflown content at any letter
                                                #(not only whitespace), making it not overflown anymore.
text-overflow: STR                              #How non-wrapped overflown content is displayed:
                                                #  - clip (def): hidden
                                                #  - ellipsis: same but with "..."
                                                #Display BLOCK
white-space: STR                                #How whitespaces in phrasing content is handled:
                                                #  - wrapped: overflown whitespace -> newline
                                                #  - collapsed: several whitespaces -> one space
                                                #                         +----------+-------------+
                                                #                         | Wrapped  | Not wrapped |
                                                # +-----------------------+----------+-------------+
                                                # |     Any collapsed     | normal   | nowrap      |
                                                # +-----------------------+----------+-------------+
                                                # | Newline not collapsed | pre-line |             |
                                                # +-----------------------+----------+-------------+
                                                # | Nothing collapsed     | pre-wrap | pre         |
                                                # +-----------------------+----------+-------------+


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           PARAGRAPH           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


text-align: STR                                 #Horizontal alignment of phrasing content: left|right|center|justify
                                                #Display BLOCK
vertical-align: VAL                             #Vertical alignment of phrasing content:
                                                #  - baseline (def): baseline to parent's baseline
                                                #  - sub|super: baseline to parent's subscript|superscript's line
                                                #  - text-top|bottom: top|bottom to top|bottom's parent's line
                                                #  - top|bottom: top|bottom to top|bottom's parent's box
                                                #  - middle: middle to parent's baseline + 1ex
                                                #  - LENP: baseline to parent's baseline + LENP
                                                #Display INLINE
                                                #Percentage: current line-height

text-indent: LENP                               #Text indent (first line only)
                                                #Display BLOCK
                                                #Percentage: current width
word-spacing: LENP|normal                       #Space between words.
                                                #Percentage: current font's width
letter-spacing: LEN|normal                      #Space between letters.
                                               ##Opera mini: letter-spacing


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             FONTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@font-face { VAR: VAL... }                      #Loads a font, allowing it to be used as font-family.
                                                #VAR:
                                                #  - font-family: STR, new font-family name
                                                #  - src: local(STR)|URI [format(STR)]...:
                                                #     - must be in same domain (same origin policy)
                                                #     - local(STR) look in user's browser. Use URI as fallback.
                                                #     - formats: 
                                                #        - woff: all
                                                #        - embedded-opentype: only IE
                                                #        - opentype|truetype: not IE
                                                #        - svg: only Safari
                                                #        - woff2: not IE nor Safari
                                                #       Should use fallbacks because of browser support (can use online generators)
                                                #  - font-style|variant|weight|stretch|feature-settings: for selecting font variants.
                                               ##Opera Mini
                                              $$#Not WOFF2, unicode-range

font-size: VAL                                  #VAL:
                                                #  - LENP. 
                                                #    Percentage: parent's font-size
                                                #  - rem-based keywords: [[x]x-]small|medium|large (about 0.55, 0.6, 0.8, 1, 1.125, 1.5, 2rem)
                                                #  - em-based keywords: larger|smaller (about 0.8, 1.2em)
font-family: STR...                             #Font:
                                                #  - "STR": specific font (font name, which can differ from filename)
                                                #  - STR: browser font among sans-serif|serif|fantasy|cursive|monospace
                                                #Can use several for fallbacks:
                                                #  - done glyph by glyph, for a specific variant (font-style|etc.)

color: COLOR                                    #Font color
font-style: STR                                 #Can be:
                                                #  - normal (def)
                                                #  - oblique: slopped but not curvy
                                                #  - italic: slopped and curvy, fallbacks to oblique
font-weight: VAL                                #Choisit face normal ou bold (si disponible). Possible aussi: bolder et 
                                                #lighter (than parent element).
                                                #Aussi NUM: 100 à 900, with 500 being normal.
text-decoration: STR                            #Can be none, underline, overline ou line-through
                                                #Can't be erased by children.
font: FONT-STYLE FONT-VARIANT FONT-WEIGHT       #Most are somewhat optional.
 FONT-SIZE LINE-HEIGHT FONT-FAMILY              #Reset font-stretch, font-kerning and font-size-adjust
text-transform: STR                             #Capitalisation parmi none (déf), lowercase, uppercase, capitalize
                                              $$#Not full-width, full-size-kana
text-shadow: VAL...                             #Comme box-shadow, mais sans le spread LEN4 ni inset.
                                               ##Opera mini

unicode-bidi: STR                               #Utilisation de direction: STR :
                                                #  - normal : direction n'a aucun effet
                                                #  - embed : n'a effet que pour élément
                                                #  - bidi-override : a effet pour éléments suivants également
                                              $$#Not isolate*|plaintext
direction: STR                                  #Direction : auto, rtl or ltr
 

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        BOX DECORATION         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


opacity: NUM                                    #Opacité de l'élément (0 à 1)
background-color: COLOR                         #Couleur de la content box.
background-image: IMAGE...                      #Always go over background-color. Always put a backup background-color in case
                                                #image can't be downloaded.
                                                #Multiple IMAGE : First IMAGE goes on top. Doing successive background-image
                                                #erase previous, not go over it. For all other background-* (except color),
                                                #multiple VAL... affect those different backgrounds.
                                                #SVG images automatically fit to container unless size or ratio is specified 
                                                #in the SVG file. If SVG looks blurry on Firefox, make it smaller then scale 
                                                #it 100 times.
                                              $$#Not image-rect()
background-size: VAL[ VAL2]...                  #Position VAL VAL2 (width height) de la background-image. 
                                                #If only VAL, both width and height. Peut être :
                                                #  - LENP
                                                #  - auto (déf) : keep size
                                                #  - contain : rescaled to "background-origin"-box (déf: padding-box), while 
                                                #    keeping proportion, so that one side of the image == one side of the box,
                                                #    and the other side image < other side box (is contained)
                                                #  - cover : same but the other side image > other side box (dépasse)
                                                #contain and cover remplacent both VAL et VAL2.
                                               ##Polyfills:
                                               ##  - jquery.backgroundSize.js (IE 6-8, deprecated):
                                               ##     - must use JQ.css()
                                               ##     - if JQ size changes, must manually $.refreshBackgroundDimensions(JQ)
                                               ##     - only contain|cover, no VAL2...
                                               ##     - background-position POSITION: no VAL2, only keywords or PERC
                                               ##     - no background-repeat|clip|origin|attachment|scroll
                                               ##     - no position: static
                                               ##  - background-size-polyfill (IE 8): must be done server-side
                                               ##Opera mini
background-attachment: STR...                   #Values :
                                                #  - scrolled (déf) : normal
                                                #  - fixed : position is not according to content box but to whole viewport,
                                                #    so doesn't move while scrolling
                                               ##Opera mini
background-repeat: VAL[ VAL2]...                #Repeating of the x-axis (VAL) and y-axis (VAL2) :
                                                #  - repeat (déf) : repeat et clip last one
                                                #  - no-repeat : don't repeat
                                                #VAL seul means VAL VAL. repeat-x and repeat-y comme VAL seule sont possibles.
                                              $$#Not round|space
background-position: POSITION...                #Position de la background-image au sein de la box (déf: top left)
background-clip: STR...                         #Clip la background-color/image selon : border-box (déf CSS), padding-box
                                                #ou content-box. 
                                                #Si border, est en dessous du border (border can be trasparent)
                                                #Clip, mais ne change pas position de la background-image (background-origin)
background-origin: STR...                       #Origine (coin supérieur gauche) de la première image (ou image de référence
                                                #si repeat est coin supérieur gauche de la border-box, content-box ou
                                                #padding-box (déf).
background: B-COLOR B-IMAGE B-POSITION
B-REPEAT B-ATTACHMENT B-CLIP...                 #

border-left|top|bottom|right-color: COLOR
border-left|top|bottom|right-style: STR         #Parmi :
                                                #  - none (déf)|display : aucun
                                                #  - solid : plain color
                                                #  - dotted
                                                #  - dashed
                                                #  - double : two plain lines
                                                #  - outset/inset : simple embossed/carved
                                                #  - ridge/groove : advanced embossed/carved
border-left|top|bottom|right-width: LEN|STR     #See above
border-bottom|top-left|right-radius:LENP[ LENP2]#Rounded corner : LENP horiz., LENP2 vertical. Si seulement LENP, LENP2 pareil.
                                                #Don't work with border-style: dotted or dashed
border-left|top|bottom|right: B-COLOR B-STYLE 
B-WIDTH                                         #Shorthand properties (following too)
border: B-COLOR B-STYLE B-WIDTH
border-color: COLOR...
border-style: STR...
border-width: VAL...
border-radius: LENP...[ / LENP2...]             #LENP sont les horiz. et LENP2 les vertic.
                                               ##Opera mini

ALL ==>                                        ##Opera mini
outline-color: COLOR                            #Outline are just like borders, except :
outline-style: STR                              #  - they are just outside borders 
outline-width: VAL                              #  - they don't take space (can even go over margin box).
outline: O-COLOR O-STYLE O-WIDTH                #  - they may be non-rectangular if some inline content is bigger than other
                                                #    inline content

box-shadow: VAL...                              #Shadow inside/outside of the margin box. Can be :
                                                #  - none (déf)
                                                #  - [inset] VAL : inside instead of outside
                                                #  - LEN LEN2 [LEN3[ LEN4]][ COLOR] : 
                                                #     - LEN LEN2 are horiz/vertic. shift.
                                                #     - LEN3 is the blur radius (déf: 0). 
                                                #     - LEN4 is size compared to element (déf: 0) (can be negative). 
                                                #If multiple VAL, multiple shadows.
                                               ##Opera mini


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            COLUMNS            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


column-width|count: ...                         #Divides into several columns
                                                #Display BLOCK
                                                #Allow using columns|column-*
                                               ##Ext: -webkit, -moz

column-width: LEN                               #Divides according to length.
column-count: UINT                              #Divides according to number of columns.
columns: WIDTH COUNT                            #Shorthand

column-gap: LEN                                 #(déf: normal, i.e. 1em)
column-rule-color: COLOR                        #
column-rule-style: STR                          #Like for border-color|style|width, but for lines between columns (déf: none
column-rule-width: VAL                          #black and 3px)
column-rule: COLOR STR VAL                      #Shorthand


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            TABLES             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


display: table[-[caption|cell|column|row|footer #Like <table[-*]|...>. 
|header][-group]]                               #All except: 
                                                #  - table: no position: relative
                                                #  - table[-caption]: no margin
                                                #  - table[-caption|cell]: no padding
                                                #  - table[-caption|column*]: no [min|max-]width
                                                #  - table[-caption|row*]: no [min|max-]height
                                                #Table-cell can use vertical-align
                                                #Allow using table-related properties below.
                                                #Display BLOCK
display: inline-table                           #Like display: table, but Display INLINE

table-layout: STR                               #For display:[inline-]table, whether cells adjust automatically to content
                                                #(auto (déf)) or are according to first row cells width or to columns width
                                                #(fixed).
border-collapse: STR                            #For display:[inline-]table, whether cell borders are merged (collapse) or not 
                                                #(separate (déf)).
                                                #Si collapse, border-radius ne marche pas.
border-spacing: LEN [LEN2]                      #For border-collapse: separate, horiz. (LEN) / vertic. (LEN2) space between
                                                #cells (déf: 0)
empty-cells: STR                                #For display: table-cell, whether empty cells have borders and backgrounds 
                                                #(show (déf) or hide)
caption-side: STR                               #Whether a display: table-caption will be on top (déf) or bottom.
                                              $$#Not block|inline-*


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             LISTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


display: list-item                              #Like <li|ul>. Allow using list-style-*

list-style-type: STR                            #Bullet point image, parmi : none, disc (déf), square, decimal[-leading-zero],
                                                #lower|upper-roman|alpha|latin (alpha and latin are same), lower-greek,
                                                #armenian, georgian
                                              $$#Not extended values
list-style-image: IMAGE                         #Bullet point image
list-style-position: STR                        #Position du bullet-point : dans la box courante (inside) ou juste en
                                                #dehors (outside (déf))
list-style : LS-IMAGE LS-POSITION LS-TYPE       

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:   TRANSFORM AND ANIMATIONS    :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


ALL ==>                                        ##Ext: -webkit
                                               ##Opera mini
transform: FUNC...                              #Modifie rendered element (without changing flow/layout) :
                                                #  - translate[X|Y|Z|3d](LENP[, LENP2[, LENP3]]) : 
                                                #      If none of X|Y|Z, only LENP
                                                #  - rotate[X|Y|Z|3d]([3 NUM, ]ANGLE) (déf: Z) : 
                                                #      3d fixe l'axe de rotation en fonction du ratio X/Y/Z de NUM/NUM2/NUM3
                                                #  - skewX|Y(ANGLE[, ANGLE2])
                                                #  - scale[X|Y|Z|3d](NUM[, NUM2[, NUM3]]) :
                                                #      If none of X|Y|Z, duplication de NUM
                                                #      scaleZ semble seulement multiplier translateZ
                                                #  - matrix[3d](6|12 NUM) : matrix like OpenGL
                                                #  - perspective(LEN) : 
                                                #      Doit venir en premier, change perspective lors rotation.
                                                #Devient display: fixed durant transformation.
transform-origin: VAL[ VAL2[ VAL3]]             #Centre de l'opération effectué par transform, hors perspective (déf: center)
                                                #VAL peut être LENP|top|bottom|left|right|center. VAL est X, VAL2 Y, VAL3 Z.
perspective-origin: VAL[ VAL2[ VAL3]]           #Pareil pour transform: perspective. Affecte seulement éléments contenus.
perspective: LEN                                #Comme transform: perspective(LEN), mais pour éléments contenus.
backface-visibility: STR                        #visible or hidden pour la face de derrière (déf: visible)

ALL ==>                                        ##Opera mini
transition-property: STR...                     #Property to transit (déf: all).
                                                #The transition settings are specified on the "normal"/start rule, not the 
                                                #"ending" rule. The transition moves back when "ending" rule doesn't apply
                                                #anymore.
                                                #All properties based on numbers (including RECT, FUNC(NUM...), COLOR,
                                                #but excluding TIME) and plain colors, can be transited. Exceptions :
                                                #   - background-repeat|size|position, font-stretch, text-shadow, grid-*, 
                                                #     border-*color, border-spacing
                                                #Invisible elements can't be transited. Wait for elements to be ready on the
                                                #document before transition.
                                                #Can specify several properties : then each transition-duration|delay|timing
                                                #apply, or repeat if only one.
transition-duration: TIME...                    #Time of transition (déf: 0s)
transition-timing-function: FUNC...             #Evolution of the transition (slow at the end, etc.). Can be :
                                                #  - steps(NUM[, start|end]) : if start (déf: end), first step occurs 
                                                #    immediately
                                                #  - cubic-bezier(4 NUM) : bezier curve, where start handler has position
                                                #    NUM1,NUM2 et end handler NUM3,NUM4 (coordonnées 0 à 1)
                                                #    For jQuery UI Sine, Quad, Cubic, Quart, Circ, Expo, Back and Quint
                                                #    (but not Elastic nor Bounce) to cubic-bezier, see http://easings.net/
                                                #  - ease / ease-in-out : slow begin/end
                                                #  - ease-in|out: slow begin|end
                                                #  - linear
                                                #  - step-start|end : like steps(1, start|end)
transition-delay: TIME...                       #Time for transition to start (déf: 0s)
transition: PRO DURATION FUNC DELAY...          #Shorthand

TransitionEvent                                 #Readonly.
                                               ##Ext: Webkit
TRANSITIONEVENT.propertyName
TRANSITIONEVENT.elapsedTime                     #Does not take transition-delay into account
ALL.ontransitionend = FUNC(TRANSITIONEVENT)     #When a CSS transition ends.
                                               ##Ext: webkitTransitionEnd

ALL ==>                                        ##Ext: -webkit
                                               ##Opera mini
ANIMATIONS ==>                                  #Like transition, but sequence of them. Is launched as soon as the CSS text
                                                #is read (so it should be filtered by a selector).
                                                #Can also pause/itère/reverse.
@keyframes STR {                                #Une animation dont le name est STR.
  PERC... { ... }...                            #Les percentages ("keyframe") vont de 0% (can also be "from") to 100% (can 
}                                               #also be "to").
                                                #For each keyframe, apply the rule { ... }. Properties mentioned in one 
                                                #keyframe but not another are assumed to have the same value as before the
animation-name: STR...                          #Le STR de @keyframes à déclencher. 
                                                #Les propriétés animation-* ne doivent pas être dans la @keyframes, sauf 
                                                #animation-timing-function, qui peut être dehors (ensemble de l'animation) ou
                                                #dedans (une seule keyframe).
                                                #Les priorités à animer sont mêmes que pour transitions.
                                                #Can be several animation, like transitions.
animation-duration: TIME...                     #
animation-timing-function: FUNC...              #
animation-delay: TIME...                        #Like transitions, but for the whole animation.

animation-iteration-count: UINT...              #Nombre d'itérations (déf 1). Can be infinite.
animation-direction: STR...                     #Passage d'une itération à l'autre :
                                                #  - normal (déf): saut direct de 100% à 0%
                                                #  - alternate: reste à 0%/100%, et va dans sens opposé
                                              $$#Not [alternate-]reverse
animation-fill-mode: STR...                     #Par défaut, on saute directement de la position avant animation à la keyframe
                                                #0%/100%. Mais on peut :
                                                #  - none (déf)
                                                #  - forwards: la position reste à dernière keyframe après animation
                                                #  - backwards: position avant animation devient celle de première keyframe
                                                #  - both: forwards+backwards
animation-play-state: STR...                    #Défaut est running, mais on peut mettre paused (via JavaScript).
animation: NAME DURATION FUNC DELAY UINT DIR    #
  FILL STATE                                    #Shorthand

AnimationEvent                                  #Readonly.
                                               ##Ext: Webkit
ANIMATIONEVENT.propertyName
ANIMATIONEVENT.elapsedTime                      #Does not take animation-delay into account
ALL.onanimationstart|end = FUNC(ANIMATIONEVENT) #Quand CSS animation starts/ends.
ALL.onanimationiteration = FUNC(ANIMATIONEVENT) #Quand CSS animation ends an interation (except the last one).
                                               ##Ext: webkitAnimationStart|End|Iteration


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            OTHERS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

cursor: VAL...                                  #Image du cursor. 
                                                #Can be multiple so if first fails, second is used, except if first fails 
                                                #because of URI NUM NUM2 syntax not supported (IE). In last case, put 
                                                #"cursor: VAL" fallback before another "cursor: URI NUM NUM2".
                                                #VAL possible :
                                                #  - STR parmi (see MDN for pictures) :
                                                #    - auto, crosshair, default, move, text, wait, help, pointer
                                                #      n[ew]|s[ew]|w|e-resize, progress, all-scroll, cell, col|row-resize, 
                                                #      copy, no-drop, not-allowed, vertical-text, ew|ns|nesw|nwse-resize,
                                                #      alias
                                                #    - not FF/Chrome (Windows) : context-menu
                                                #    - not Opera : none
                                                #  - URI [NUM NUM2]: NUM NUM2 est le hotspot du cursor en pixel (coord. local)
                                                #    Not supported by Opera. .cur for all. Keep size 32x32px or 16x16
                                              $$#Not grab[bing], zoom-in|out, none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed, nesw|nwse|col|row-resize, all-scroll

content: VAL[ VAL2]...                          #Ajoute du contenu. Le selector doit être SELECTOR:sbefore|after, et ajoute
                                                #avant/après cet élément ce qui est déclaré :
                                                #  - none
                                                #  - STR
                                                #  - IMAGE
                                                #  - attr(VAR[, STR]) : renvoie VAL d'attribut VAR, ou STR si absent (déf: "")
                                                #  - counter[s](...) : cf counter-*
                                                #  - open|close-quote : cf quotes
                                                #  - no-open|close-quote : don't insert quaotes, put increment quote level
                                                #Le SELECTOR::before|after peut être suivi de n'importe quel autre property.
quotes: VAL                                     #Set values of open-quote et close-quote selon :
                                                #  - none (déf)
                                                #  - [STR STR2]... : si plusieurs définit root level quotes, first child
                                                #    level quotes, etc.
                                                #Not for Safari.
counter-reset: VAR[ NUM]...                     #Counters are NUM variables, utilisées pour numéro de chapitre via
counter-increment: VAR[ NUM]...                 #content: counter[s](...).
                                                #Il faut d'abord initialiser à NUM via counter-reset (peut réinitialiser 
                                                #aussi), en général dans un ul/ol
                                                #counter-increment ajoute NUM, en général mis dans un li::before.
                                                #Substitution :
                                                #  - counter(VAR[, STR]) : remplacé par nombre. STR est un list-style-type.
                                                #  - counters(VAR, STR2[, STR]) : remplacé par nombre suivi de STR

page-break-after|before: STR                    #When browser/application defines page breaks, controls whether they are
                                                #auto (déf) or always (always page break after this element)
                                                #Display BLOCK + position: static. Media query doit accepter "paged".
page-break-inside: STR                          #Pareil mais inside l'élement : auto (déf) ou avoid (jamais au milieu de cet
                                                #élément)


TO ADD ==>
  - :indeterminate|required|optional
  - @namespace
  - Paged media (@page, page-break-before|after (only auto|always))
     - @page: not :first|left|right
  - transform-style

TO ADD (NOT OPERA MINI) ==>
  - word-break: normal|break-all
  - border-image[-*]
  - pointer-events


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         NOT SUPPORTED         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


                                                #Safari 8:
                                                #  - ANGLEturn
                                                #  - background-repeat: round|space
                                                #  - cursor: none, context-menu, cell, vertical-text, alias, copy, no-drop, not-allowed, nesw|nwse|col|row-resize, all-scroll
                                                #  - Grid (display: [inline-]grid)
                                                #  - Flex (align-*, flex*, justify-content, order, display: [inline-]flex)
                                                #  - @media (min|max-resolution, dppx, dpcm), 
                                                #  - Paged media (page-break-after|before (except auto|always), @page :first|left|right, marks, bleed)
                                                #  - animation-direction: [alternate-]reverse
                                                #  - CSS3 Text (text-align-last, word-break: keep-all)
                                                #  - Fragmentation (box-decoration-break, break-*)
                                                #  - CSS3 fonts (font-feature-settings, font-stretch, @font-feature-values, font-kerning, font-language-override, font-size-adjust, font-synthesis, 
                                                #    font-variant[*])
                                                #  - Masking (mask*, clip-path)
                                                #  - @viewport, [max|min-]zoom
                                                #  - touch-action
                                                #  - ime-mode
                                                #  - orphans|widows
                                                #  - @media [min|max-]resolution

                                                #Firefox 40:
                                                #  - @font-face: unicode-range
                                                #  - column-span
                                                #  - line-break

                                                #Chrome 45:
                                                #  - Display module (display: contents|run-in),
                                                #  - hyphens
                                                #  - visibility: collapse (different behavior)

                                                #Android browser 4.3:
                                                #  - fullscreen (:fullscreen, ::backdrop)
                                                #  - calc()

                                                #Safari mobile 9:
                                                #  - ::selection

                                                #IE11:
                                                #  - attr() (extended syntax)
                                                #  - background-image: image-rect()
                                                #  - Logical properties (caption-side: block|inline-*, clear|float: inline-start|end, block|inline-size, border-inline|block-*, 
                                                #    margin|padding|offset|max|min-block|inline-*)
                                                #  - cursor: grab[bing], zoom-in|out
                                                #  - Ruby layout (display: ruby*, ruby*)
                                                #  - @font-face WOFF2
                                                #  - Counter styles (list-style-type (extended values))
                                                #  - Intrisic sizing (min|max-height|width: fill|fit-content|min-content|max-content, 
                                                #    width: fit-content|min-content|max-content, [fill-]available, border|content-box)
                                                #  - CSS4 Media queries (@media scripting|pointer|hover|light-level|inverted-colors|update-frequency|overflow-block|overflow-inline)
                                                #  - nested @media
                                                #  - position: sticky
                                                #  - CSS3 Text (tab-size, text-align: justify-all|start|end|match-parent, text-indent: hanging|each-line, text-transform (full-width, full-size-kana))
                                                #  - text-overflow (two-value of STR)
                                                #  - CSS3 writing module (unicode-bidi: isolate*|plaintext)
                                                #  - Counter styles (@counter-style, symbols)
                                                #  - Blending (background|mix-blend-mode, isolation)
                                                #  - Replaced content (element(), image-rendering, image-orientation, object-fit|position)
                                                #  - Shapes (BASIC-SHAPE (i.e. inset|polygon|circle|ellipse()), shape-*)
                                                #  - Text decoration (text-decoration-*, text-underline-position)
                                                #  - CSS3 writing module (writing-mode, text-orientation, text-combine-upright)
                                                #  - all
                                                #  - :default
                                                #  - :dir(DIR)
                                                #  - @document
                                                #  - element
                                                #  - initial
                                                #  - :in|out-of-range, :read-only|write 
                                                #  - LENvmax
                                                #  - outline-offset
                                                #  - overflow-wrap
                                                #  - resize
                                                #  - unset
                                                #  - will-change
                                                #  - filter()
                                                #  - :scope
                                                #  - scroll-behavior
                                                #  - scroll-snap-*
                                                #  - @supports
                                                #  - text-rendering
                                                #  - transform-box
                                                #  - transition and animation on 'content'
                                                #  - Selector [ATTR ... i]
                                                #  - TRANSITIONEVENT.pseudoElement
                                                #  - SVG fonts
