
                
   MODULARITY   
                



MODULARITY ==>                    #Pros:
                                  #  - improves separation of concerns, i.e. maintainability by providing granularity and orthogonality
                                  #  - improves code reuse
                                  #Cons:
                                  #  - higher abtraction can lead to higher complexity

MODULAR PROGRAMMING ==>           #Dividing code into different loosely coupled pieces (modules|packages|components|units):
                                  #  - separate object|functions in separate files|folders
                                  #  - namespacing
                                  #  - encapsulating, abstracting implementation
                                  #Opposite is monolithic design.

OBJECT-ORIENTED PROGRAMMING ==>   #See OOP doc

