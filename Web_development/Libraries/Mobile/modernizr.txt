
               
   MODERNIZR   
               


PRINCIPE ==>                                    #  - Shim  add an unsupported API feature with plugin
                                                #  - Polyfill: JavaScript shim. e.g. add unsupported property by IE
                                                #  - Fallback: 
                                                #     - instead of polyfill, add a simplified version of the feature
                                                #     - e.g. several CSS properties after another (ones not understood do not
                                                #       crash the engine)
                                                #     - only polyfill if important: best UX, but slower

MODERNIZR ==>                                   #Version just before 3.0.0
                                                #Can download custom builds.
                                                #At loadtime:
                                                #  - tests each FEATURE, by checking properties/methods, and not userAgent
                                                #    (unreliable)
                                                #  - adds the following:
<html class="[no-]FEATURE">                     #For CSS selectors.
                                                #For FEATURE "js", it needs to be added in <html> : <html class="no-js">???
Modernize.FEATURE[.SUBFEATURE]                  #BOOL. For JavaScript
 
Modernizr.load(OBJ[_ARR])                       #OBJ:
                                                #  - test BOOL (usually MODERNIZR.FEATURE[.SUBFEATURE])
                                                #  - yep|nope|both|load "FILE"[_ARR]:
                                                #     - according to BOOL (both === load)
                                                #     - "FILE" is JavaScript|CSS
                                                #  - complete()|callback("FILE", BOOL): when done (files are loaded async)
                                                #OBJ can also be "FILE" ==> { both "FILE" }

Modernizr.addTest("feature", FUNC()->BOOL)      #Create own FEATURE
                                                #Possible FUNC() tests:
                                                #  - !!OBJ
                                                #  - OBJ && ( VAR in OBJ )
                                                #  - Modernizr.test[All]Props("cssProp")->BOOL: if only prefixed version
                                                #    exists, returns true if "AllProps"
                                                #  - Modernizr.hasEvent("EVENT", OBJ)->BOOL: can OBJ.addEventListener("EVENT")
                  
Modernizr.prefixed("jsOrCssProp"[, OBJ[, VAL]]) #Returns [PREFIX]STR for current browser (can be no PREFIX) (e.g. MozSTR), or
                                                #false if cannot find it.
                                                #If OBJ, look as OBJ property.
                                                #If VAL:
                                                #  - true: returns OBJ.jsOrCssProp, not "jsOrCssProp"
                                                #  - VAL: returns OBJ.jsOrCssProp.bind(VAL)
