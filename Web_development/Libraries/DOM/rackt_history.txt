
                   
   RACKT_HISTORY   
                   


RACKT-HISTORY ==>                              ##Version 1.17.0
                                               ##Abstracts WINDOW.location|history:
                                               ##  - for legacy browsers
                                               ##  - for environment without DOM (e.g. unit testing)


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             BASE              :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


RACKTHISTORY.createHistory([CONF])->RHISTORY   ##Base function. CONF must provide:
                                               ##  - go(INT)
                                               ##  - getCurrentLocation()->RLOCATION
ENHANCER(RACKTHISTORY.createHistory )          ##Returns createHistory but with some extra features

RACKTHISTORY.createDOMHistory([CONF])->RHISTORY##Child of RACKTHISTORY.createHistory, that uses WINDOW.location|history and WINDOW.onpopstate
RACKTHISTORY.createHashHistory([CONF])         ##Child of RACKTHISTORY.createHistory, that uses WINDOW.location.hash and WINDOW.onhashchange
                                               ##For legacy browsers.
RACKTHISTORY.createMemoryHistory([CONF])       ##Child of RACKTHISTORY.createHistory, that keep state in memory. 
                                               ##Works without DOM (e.g. unit testing)
                                               ##CONF:
                                               ##  - entries 'PATH'[_ARR]: initial history


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            HISTORY            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


RHISTORY.listen(FUNC(RLOCATION))->unlisten()   ##Fired on location change
RHISTORY.listenBefore(FUNC(RLCTON))->unlisten()##Fired before location change
                                               ##Return false to prevent change
                                               ##Return STR to fire CONF.getUserConfirmation(STR, FUNC(BOOL)) 
                                               ##(def for DOMHistory: FUNC(WINDOW.confirm(STR)))
RHISTORY.listenBeforeUnload                    ##Wrapper around WINDOW.onbeforeunload
(FUNC()->STR)->unlisten()                      ##Must use ENHANCER RACKTHISTORY.useBeforeUnload

RHISTORY.push|replace(RLOCATION|'URL')         ##Adds history entry
                                               ##Do not do anything if same location
RHISTORY.go(INT)                               ##
RHISTORY.goBack|Forward()                      ##


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           LOCATION            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


RHISTORY.createPath|Href(RLOCATION)->URL       ##
RHISTORY.createLocation
('URL'[, STATE])->RLOCATION                    ##
RLOCATION.key                                  ##ID
RLOCATION.pathname                             ##'PATH'
RLOCATION.search                               ##'?...'
RLOCATION.query                                ##Like RLOCATION.search but as OBJ
                                               ##Must use ENHANCER RACKTHISTORY.useQueries
                                               ##Can specify CONF:
                                               ##  - parseQueryString(STR)->OBJ
                                               ##  - stringifyQuery(OBJ)->STR
                                               ##Def use QUERY-STRING module, which is simple (no nesting)
RLOCATION.hash                                 ##'#...'
RLOCATION.action                               ##'PUSH|REPLACE|POP'
RLOCATION.state                                ##VAL (JSON serializable)

CONF.basename                                  ##Specify a base URL (def: <base href>)
                                               ##Must use ENHANCER RACKTHISTORY.useBasename
RLOCATION.basename                             ##RLOCATION.pathname does not include it

