
          
   JSON   
          



STANDARDS ==>                                   #RFC 7159 and ECMA-404

GOAL ==>                                        ##Serialization format based on JavaScript.
                                                #Extension: .json
                                                #MIME type: application/json

JSON ==>                                        
                                                #Subset of literal JavaScript OBJ:
                                                #  - VAR: VAL -> "VAR": VAL, no SYM key
                                                #  - only STR|NUM|BOOL|null|OBJ|ARR:
                                                #     - no undefined, FUNC or native objects (besides OBJ|ARR)
                                                #     - Can however support others:
                                                #        - if toJSON() defined:
                                                #           - DATE.toJSON()->DATE.toISOString()
                                                #        - by calling toString() prior.
                                                #        - via JSON.stringify|parse FUNC
                                                #  - no ES6 syntax like { [STR]: VAL }, { VAR }, etc.
                                                #  - no trailing comma
                                                #  - NUM: no leading zeros, no Infinity|NaN
                                                #  - only available backslash sequence: \", \\, \b, \f, \n, \r, \t, \uXXXX
                                                #  - U+2028|2029 (line separators) allowed in JSON and ES5 but not in ES3
                                                #Can also be a VAL by itself (i.e. STR|NUM|BOOL|null|OBJ|ARR)

JSON.parse('JSON'[, FUNC(KEY, VAL)[->VAL]])     #From 'JSON' to JavaScript.
                                                #FUNC():
                                                #  - postprocessing
                                                #  - from children to parent
                                                #     - ends with root object: key '', this {'': OBJ}
                                                #  - this is current [sub-]object
                                                #  - returning undefined omits property
                                                #Can throw SyntaxError.
JSON.stringify(VAL[, VAL2[, STR|NUM]])          #From JavaScript to 'JSON'
                                                #Non-supported vals are omitted.
                                                #If VAL.toJSON() exist, will use VAL.toJSON() instead of VAL.
                                                #VAL2 can be:
                                                #  - FUNC(KEY, VAL)[->STR]: same as JSON.parse() but:
                                                #      - preprocessing
                                                #      - goes from parent to children
                                                #  - KEY_ARR: only includes those properties.
                                                #    To e.g. include subproperties 'a.b', must specify [ 'a', 'b' ]
                                                #STR|NUM adds newlines and indents with STR or NUM spaces.

