
             
   POSTCSS   
             


VERSION ==>                       #5.0.19

CONFIG ==>                        #Can be:  
                                  #  - postcss --config CONF_FILE
                                  #  - postcss --PLUGIN.option PLUGIN_OPTS
CONF_FILE                         #JSON or Node module exporting CONF_OBJ 
CONF_OBJ.PLUGIN                   #PLUGIN_OPTS
CONF_OBJ.OPT                      #Like postcss --OPT


postcss [FILE|DIR...]             #Def: stdin
                                  #Version 2.5.1
--output FILE                     #Def: stdout
--dir DIR                         #
--replace                         #Replace input file

--use PLUGIN ...                  #
--local-plugins                   #Require PLUGIN from $PWD, as opposed to DIR where PostCSS is installed

--watch                           #

--syntax SYNTAX ???
--parser PARSER ???
--stringifier FORMATTER ??

--[no-]map [FILE]                 #Sourcemaps (def: inline)
--[no-]map.inline                 #Inline sourcemaps (def: true)
--[no-]map.annotation 'FILE'      #Sourcemap output
--[no-]map.prev 'FILE'            #Sourcemaps from a previous compilation step, e.g. Sess/Less
                                  #Def: automatically detects it
--[no-]map.sourcesContent         #Sets sourcemap origin (def: true)


POSTCSS(PLUGIN_ARR)->POSTCSS
POSTCSS.use(PLUGIN())->POSTCSS ???

POSTCSS.parse('CSS', OBJ)->ROOT   #OBJ:
                                  #  - from 'FILE'
                                  #  - map: inline BOOL, annotation 'FILE'|BOOL, prev 'FILE'|BOOL, sourcesContent BOOL

NODE                              #
NODE.type                         #'root|atrule|rule|decl|comment'
NODE.parent                       #NODE|null
NODE.source                       #Location from input file (for sourcemaps) as OBJ:
                                  #  - input INPUT
                                  #  - start|end: line|column NUM
                                  #Will be null when creating new NODE from scratch. Should then take a NODE with source and
                                  #either copy its NODE.source or clone it.
NODE.toString([FUNC(NODE)->'CSS'])
->'CSS'                           #

CONTAINER                         #Child of NODE

ROOT                              #CSS file. Child of CONTAINER
ROOT.toResult(OBJ)->RESULT        #OBJ: same as POSTCSS.parse()

RULE                              #Child of CONTAINER

ATRULE                            #Child of CONTAINER

INPUT                             #

POSTCSS.process('CSS', CONF_OBJ)  #CONF_OBJ also has:
->PROMISE(OBJ)                    #  - from 'FILE'
                                  #  - to 'FILE'


POSTCSS-JS.sync(PLUGIN_ARR)->FUNC(CSS_OBJ)->CSS_OBJ
