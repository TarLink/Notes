
              
   ISTANBUL   
              


istanbul		                    #Command line Node module (0.3.0) generating reports of Javascript test coverage.
istanbul cover|test [OPTS]      #Produces in ./coverage/ (or --dir DIR):
_mocha FILE -- [MOCHAOPTIONS]   #  - coverage.json: non-human-readable (used by other tools)
                                #  - output selected by --report FORMAT among:
                                #     - html, lcovonly, lcov (html+lcov, déf)
                                #     - text[-summary] (stdout)
                                #     - cobertura (XML), teamcity, clover (XML)
                                #For hard to test/cover lines (UMD wrapper, etc.), can skip with:
                                #  /* istanbul ignore WORD|next [COMMENT] */  
                                #next is skipping next block|part of the statement. Examples of WORD: if, else, etc.
                                #If "test", same but don't do anything if ENVVAR npm_config_coverage is not set:
                                #  - so npm SCRIPT --coverage will set it, otherwise not.
--print summary|detail|both|none#What to print on terminal
--root DIR                      #Root DIR of files to cover (déf: ".")
-x FILE...                      #Excludes files to cover
--[no-]default-excludes         #Default excluded files to cover (déf: "**/node_modules|test[s]/**")
-v                              #Verbose


istanbul check-coverage
--statements|functions|         #Look at coverage.json FILE... (déf: **/coverage*.json), and throw exception if coverage is
branches|lines PERCENT [FILE...]#below PERCENT, with exit code != 0


istanbul instrument FILE|DIR... #Creates a coverage.json
                                #istanbul cover is doing istanbul instrument then istanbul report, so usually useless.
                                #With DIR, must use --output DIR2
--save-baseline                 #Save to --baseline-file FILE (déf: "coverage/coverage-baseline.json") instead of only stdout
-x FILE...                      #Exclude files
--embed-source                  #Embed source code in coverage.json (déf: false)
--complete-copy                 #Embed non Javascript files in coverage.json (déf: false)
--no-compact                    #Don't minimize output

istanbul report [OPTS]          #Turn coverage.json FILE... (déf: **/coverage*.json) into other forms of output according to
[FORMAT [FILE...]]              #FORMAT (see above)
--root DIR                      #Where to find FILE...
--dir DIR                       #Output DIR (déf: ./coverage/)


./.istanbul.yml                 #Config file (can also be JSON or OBJ_MODULE):
                                #  - can be chosen with istanbul ... --config FILE
                                #Variables:
                                #  - verbose BOOL
                                #  - instrumentation:
                                #     - root DIR
                                #     - default-excludes BOOL
                                #     - excludes STR_ARR
                                #     - embed-source BOOL
                                #     - compact BOOL
                                #     - complete-copy BOOL
                                #     - save-baseline BOOL
                                #     - baseline-file FILE
                                #  - reporting:
                                #     - print FORMAT
                                #     - reports OBJ
                                #     - dir DIR
                                #     - watermarks:
                                #        - statements|lines|functions|branches [PERCENT, PERCENT2] (red|yellow|green colors)


OTHER THAN MOCHA ==>            #Can be used with Jasmine|QUnit too, but I prefer using "_mocha" (not mocha)

CLIENT-SIDE TESTING ==>         #This was for server-side test. For client-side:
                                #  - can use mocha-istanbul
                                #  - or (easier) with karma-coverage:
                                #     - preprocessors { SOURCE_FILE_GEXP: ["coverage"] ... }   //Instrument source code
                                #     - reporter "coverage"                                    //Produce reports
                                #     - CONFIGVAR coverageReporter:
                                #        - OBJ: type FORMAT, dir DIR, file FILE, etc.
                                #          Use DIR/BROWSER_VERSION_OS/FILE
                                #        - or OBJ2: reporters OBJ_ARR for several different formats
                                #  - and karma-threshold-reporter:
                                #     - reporter "threshold" (after reporter "coverage" from karma-coverage)
                                #     - CONFIGVAR thresholdReporter:
                                #        - statements|branches|functions|lines NUM (e.g. 90)

gulp.src(SOURCE_FILES)
  .pipe(GULP-ISTANBUL([OBJ2]))  
  .pipe                         
  (GULP-ISTANBUL.hookRequire()) #Several actions (version 0.6.0):
  .on("finish", function() {    #  - GULP-ISTANBUL() instrument the source files
    gulp.src(TEST_FILES)        #  - summarizeCoverage() produce an IOSTREAM of OBJ with members 
      .pipe(GULP-MOCHA())       #    lines|statements|functions|branches OBJ2: total|covered|skipped|pct NUM
      .pipe(GULP-ISTANBUL.      #  - writeReports() produce reports with OBJ: 
        summarizeCoverage()|    #     - dir DIR (def: "./coverage/") 
        writeReports(OBJ))      #     - reporters ARR (def: ["lcov"])
      .on("end", FUNC())        #OBJ2:
  });                           #  - includeUntested BOOL: if true (def: false), include non-required modules

GULP-COFFEE-ISTANBUL            #Like GULP-ISTANBUL, but for CoffeeScript
                                #Version 0.7.0

GULP-ISTANBUL-ENFORCER(OBJ)     #Do mocha check-coverage. OBJ:
                                #  - thresholds OBJ: statements|branches|lines|functions NUM: --statements|etc.
                                #  - coverageDirectory DIR: --dir
                                #  - rootDirectory DIR: --rot
