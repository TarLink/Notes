
                  
   REQUIREMENTS   
                  


FUNCTIONAL (design)

Non-functional:
  - execution qualities: runtime
  - evolution qualities: development-time

NON-FUNCTIONAL (architecture) / quality attributes
Maintainability-related
  (maintainability)
  (extensibility)
    (abstraction)
      (functional programming)
    (modularity)
      (object oriented)
      (reusability)
      (orthogonality)
  (scalability)
Robustness/stability
  (compatibility)
  (quality): preventing fault
    (testability)
    (reporting)
    (configuration management)
  (availability)
    (resilience)
  (recoverability): minimizing fault's damage
    (backups)
  (fault tolerance)
  (reliability)
  (safety)
  (durability)
Performance
  (speed): latency, throughput
  (efficiency): resource consumption
Flexibility
  (interactivity): different kind of inputs
  (adaptability): different contexts
  (modifiability/customizability): user adding new features
  (evolvability): over time
Usability
  (accessibility)
  (simplicity)
  (easiness)
  (learnability)
  (debuggability)
  (UX)
  (interoperability/portability)
  (interchangeability / switching cost)
  (seamlessness/integratibility)
  (deployability/installability)
  (design)
  (administratibility)
Supportability
  (escrow)
Security
Legality
  (compliance)
  (licensing)
Marketability
  (certification)
Cost/price
Environmental|human sustainability
Privacy
Transparency/accountability/inspectability/traceability
