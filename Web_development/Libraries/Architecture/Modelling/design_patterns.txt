
                     
   DESIGN_PATTERNS   
                     



DESIGN PATTERNS ==>               #Usual|recommeded way of solving architectural problems:
                                  #  - creational: initializing objects
                                  #  - structural: object structure: inheritance, composition, wrapper, etc.
                                  #  - behavioral: communication between objects
                                  #"Gang of four" list (see it their respective docs):
                                  #  - creational: factory method, abstract factory, prototype, builder, object pool, singleton
                                  #  - structural: composite, wrapper, adapter, facade, bridge, proxy, flyweight, private class data
                                  #  - behavioral: chain of responsibility, command, interpreter, iterator, mediator, memento, null object, observer, state, strategy, template method, visitor
