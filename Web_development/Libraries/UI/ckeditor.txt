
              
   CKEDITOR   
              


VERSION ==>                       #4.5.4

INSTALLATION ==>                  #Bower: ckeditor
                                  #No RequireJS
                                  #When concatenated, must define install path with ENVVAR CKEDITOR_BASEPATH

MODE ==>                          #Can be:
                                  #  - on textarea: 
                                  #     - normal mode (with toolbars, etc., in an <iframe>)
                                  #     - automatically updates textarea value with HTML content
                                  #  - on any[contenteditable="BOOL"]: inline mode, read-write or read-only

CKEDITOR.replace('ID'[, CONF])    #Using global variable CKEDITOR and $("#ID"). Returns EDITOR
JQ.ckeditor([CONF])               #Using jQuery adapter

EDITOR.on('instanceReady', FUNC())#
EDITOR.on('change', FUNC(CEVENT)) #

CEVENT
CEVENT.editor                     #EDITOR
CEVENT.sender                     #EDITOR

CKEDITOR.config                   #CONF
CKEDITOR.editorConfig(CONF)       #Function which, when called, can modify CONF
                                  #If defines a CONF.customConfig, recursively loads it.
CONF.customConfig                 #FILE which usually define CKEDITOR.editorConfig
                                  #Def: package config.js

PLUGINS ==>                       #Can add|remove:
                                  #  - using online builder
                                  #  - use strict builder at dev/builder/build.sh
                                  #  - or download, then set with:
                                  #     - CONF.plugins "PLUGIN,..."
                                  #     - CONF.extraPlugins "PLUGIN,...": same without override def. CONF.plugins

SKINs ==>                         #Can add|remove:
                                  #  - using online builder
                                  #  - use strict builder at dev/builder/build.sh
                                  #  - or download, then set with:
                                  #     - CONF.skin or CKEDITOR.skinName STR

WIDGETS ==>                       #Can add|remove:
                                  #  - using online builder
                                  #  - use strict builder at dev/builder/build.sh

CKEDITOR.editor                   #EDITOR_FUNC
CKEDITOR.instances.ID             #EDITOR

EDITOR.getData([BOOL])            #Returns HTML content.
                                  #If true, only returns cached data, and does not fire [before]getData() events.

FILTER                            #Filters input
new CKEDITOR.filter(RULES|EDITOR) #Returns current FILTER, setup at load.
CKEDITOR.filter.instances[ID]     #FILTER, according to FILTER.id NUM
FILTER.allowedContent             #RULES:
                                  #  - true: everything
                                  #  - OBJ:
                                  #     - KEY "TAG ..."
                                  #        - can use $1 to mean anything, then using elements CKEDITOR.dtd
                                  #     - styles (CSS prop), attributes (HTML ATTR), classes (HTML class):
                                  #        - true: anything
                                  #        - "[!]STR ..."
                                  #          - ! means required (if not there, erase), otherwise optional (others are erased)
                                  #          - can use * meaning "anything", or e.g. attributes "data-*"
                                  #        - OBJ:
                                  #          - match(ELEM)->BOOL
                                  #          - propertiesOnly BOOL: if true, works only if another RULE allows this TAG
                                  #  - "RULE;...", where "RULE" can be "OBJ.KEY{OBJ.styles}[OBJ.attributes](OBJ.classes)"
                                  #  - STYLE[_ARR]
                                  #Read-only. Can be written with:
                                  #  - CONF.allowedContent RULES
                                  #    When not set, is in "automatic mode", i.e. defined by plugins.
                                  #  - CONF.extraAllowedContent: same but does not overwrite plugins definitions.
FILTER.disallowedContent          #RULES, applied before allowedContent.
                                  #Read-only. Can be written with:
                                  #  - CONF.disallowedContent
FILTER.customConfig               #True if CONF.extraAllowedContent used.
FILTER.disabled                   #
FILTER.editor                     #EDITOR_FUNC. null if standalone
