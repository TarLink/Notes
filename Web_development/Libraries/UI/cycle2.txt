
            
   CYCLE2   
            


VERSION ==>                       #2.1.6
                                 ##There are some builtin plugin, marked like this

JQ.cycle([OBJ])                   #Creates slideshow, where JQ is any ELEM with children CHILD (usually IMG).
                                  #Done automatically at DOMContentLoaded on $(SELECTOR):
                                  #  - SELECTOR is by def ".cycle-slideshow", unless HTML attribute 
                                  #    data-cycle-auto-init="false"
                                  #  - can change with $.fn.cycle.defaults.autoSelector "SELECTOR"
                                  #Options can also be:
                                  #  - HTML attribute (dasherized) data-cycle-VAR="VAL"
                                  #  - $.fn.cycle.defaults OBJ

                                  #Transitions, using OBJ:
                                  #  - fx "fade[out]|scrollHorz|scrollVert|none" (def: "fade"): for transition
                                  #    Can add new one "FUNC" with $.fn.cycle.transitions.FUNC = OBJ2 (see online doc)
                                  #  - speed NUM (def: 500): for transition
                                  #  - easing STR (def: null): for transition
                                  #  - sync BOOL: if true (def), starts out-transition in same time as in-transition
                                  #  - manual-fx "...", manual-speed: like fx, but when transition happened without autorun
                                  #    (def: same)
                                  #  - manual-trumper BOOL: if true (def), can interrupt transition by starting new one
                                  #  - swipe BOOL (def: false): if true, enables swipes
                                  #  - swipe-fx "...": like fx, but for swipe gesture

                                  #Looping, using OBJ:
                                  #  - allow-wrap BOOL: if true (def), last slide linked to first
                                  #  - disabled STR (def: "disabled"): CSS class of after-last|before-first slide when
                                  #    allow-wrap false
                                  #  - loop NUM: autoruns with NUM loops, 0 (def) for unlim
                                  #  - timeout NUM (def: 4000, 0 for no autorun): how long to automatically go on next slide 
                                  #    with autorun
                                  #  - pause-on-hover BOOL|SELECTOR (def: false): stops autorun if true and hovering, or if 
                                  #    hovering SELECTOR
                                  #  - paused BOOL (def: false): if true, starts in paused state
                                  #  - continueAuto BOOL[()]: if true (def: false), autorunning.???
                                  #    Cannot be HTML attribute
                                  #  - delay NUM (in ms, def: 0): how long before starting autorun

                                  #Loaded slides, using OBJ:
                                  #  - hide-non-active BOOL: if true (def), hides inactive slides
                                  #  - starting-slide NUM (def: 0)
                                  #  - random|reverse BOOL (def: false): if true, random|reverse order initially
                                  #  - loader VAL (def: false):
                                  #     - if "wait", waits for all CHILD IMG to be loaded before adding them
                                  #     - if true, same but for each CHILD, which is more efficient but might change CHILD
                                  #       order
                                  #  - progressive "SELECTOR": waits for each CHILD to be displayed to show it.
                                  #    CHILD must be $("SELECTOR") instead, holding them as HTML[_JSON]

                                  #Others options, using OBJ:
                                  #  - auto-height NUM|STR: controls JQ height:
                                  #     - -1|false: no control
                                  #     - NUM (def: 0): same as NUMth slide
                                  #     - "calc": same as highest slide
                                  #     - "NUM:NUM2": make it so that it maintains this ratio
                                 ##  - centerHorz|Vert BOOL (def: false): if true, centers
                                  #  - log BOOL: if true (def), do console.debug()
                                  
                                  #HTML structure ("if >, within JQ"), using OBJ:
                                  #  - slides "SELECTOR" (def: "> img"): within JQ, CHILD
                                  #  - slide[-active]-class STR (def: "cycle-slide[-active]"): CSS class
                                  #  - slide-css OBJ: added to each slide
                                  #  - prev|next "SELECTOR" (def: "> .cycle-next"): within JQ, to go prev|next slide
                                  #  - pager "SELECTOR" (def: "> .cycle-pager"): within JQ, to change slide
                                  #  - pager-template STR (def: "<span>&bull;</span>"): Mustach template on COBJ
                                  #  - pager-active-class STR (def: "cycle-pager-active"): CSS class on pager link, when slide 
                                  #    active
                                  #  - prev|next|pager-event "JQEVENT" (def: clicks): how to go prev|next|change slide
                                  #  - pager-event-bubble BOOL: if true (def: false), bubbles "JQEVENT" in DOM
                                  #  - caption "SELECTOR" (def: "> .cycle-caption"): within JQ, showing current slide counter
                                  #  - caption-template STR (def: "{{slideNum}}/{{slideCount}}"): Mustach template on COBJ
                                  #  - overlay "SELECTOR" (def: "> .cycle-overlay"): within JQ, showing slide info
                                  #  - overlay-template STR (def: "<div>{{title}}</div><div>{{desc}}</div>"): Mustach template
                                  #    on COBJ
                                  #  - tmpl-regex STR (def: "{{(.)?.*?}}"): regexp (def is Mustach template)

                                  #COBJ: like OBJ but with extra properties:
                                  #  - currSlide|nextSlide NUM
                                  #  - slideNum NUM: like currSlide, but starts at 1
                                  #  - slideCount NUM
                                  #  - busy BOOL: true when changing slides
                                  #  - paused BOOL: can also check for existence of CSS class ".cycle-paused"
                                  #  - any CHILD HTML attribute (camelcased, without data-)

JQ.cycle("destroy|reinit")        #
JQ.cycle("prev|next")             #
JQ.cycle("goto", NUM)             #
JQ.cycle("pause|resume")          #
JQ.cycle("stop")                  #When autorunning
JQ.cycle("add", "HTML"|JQ2)       #
JQ.cycle("remove", NUM)           #
JQ.cycle("updateView")            #

<any>
  data-cycle-cmd="FUNC"           
  data-cycle-arg="VAL"            
  data-cycle-context="SELECTOR"   #Calls $("SELECTOR").on("click", FUNC(VAL)) (def SELECTOR: ".cycle-slideshow" like above)
<CHILD>                           #Change URL hash to "#STR" when CHILD active.
  data-cycle-hash="STR"           #Also, when new page loads, 

JQ.on
("cycle-bootstrap|pre-initialize|
initialized|post-initialize",
FUNC(JQEVENT, COBJ))              #Before|after construction. Before: can modify COBJ.
JQ.on("cycle-destroyed",
FUNC(JQEVENT, COBJ))              #
JQ.on("cycle-prev|next",
FUNC(JQEVENT, COBJ))              #
JQ.on("cycle-before|after",
FUNC(JQEVENT, COBJ, OLD_ELEM, 
NEW_ELEM, BOOL))                  #Before|after changing slide (BOOL true if forward)
JQ.on("cycle-pager-activated",
FUNC(JQEVENT, COBJ))              #Changing slides because of paging links
JQ.on("cycle-finished"
FUNC(JQEVENT, COBJ))              #Ends of slideshow with OBJ.loop
JQ.on("cycle-stopped",
FUNC(JQEVENT, COBJ))              #When autorunning
JQ.on("cycle-transition-stopped",
FUNC(JQEVENT, COBJ))              #
JQ.on("cycle-paused|resumed",
FUNC(JQEVENT, COBJ))              #
JQ.on("cycle-slide-added",
FUNC(JQEVENT, JQ2))               #
JQ.on("cycle-slide-removed",
FUNC(JQEVENT, NUM, JQ2))          #
JQ.on("cycle-update-view",        #After initialization, slide change|add|remove
FUNC(JQEVENT, COBJ, OBJ2, ELEM))  #For slide change, is fired according to OBJ.update-view NUM:
                                  #  - -1: before transition
                                  #  - 0 (def): during transition
                                  #  - 1: before and after transition
