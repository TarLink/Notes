
                  
   TYPEAHEAD.JS   
                  


VERSION ==>                       #0.11.1 (Node/AMD/global)
                                  #Can also load only Bloodhound, or only Typeahead

new Bloodhound(BOBJ)              #Returns BLOODHOUND
                                  #BOBJ:
                                  #  - initialize BOOL: if true (def), calls BLOODHOUND.initialize([BOOL])->PROMISE, which
                                  #    inits everything (can do it only once unless BOOL true)
                                  #Data:
                                  #  - are SOBJ, i.e. any OBJ
                                  #  - can be:
                                  #     - remote:
                                  #        - fetched from BOBJ.remote[.url] URL
                                  #        - called when local data number of SOBJ is less than BOBJ.sufficient NUM (def: 5)
                                  #        - BOBJ.remote OBJ:
                                  #           - rateLimitWait NUM (def: 300), rateLimitBy "debounce" (def) or "throttle"
                                  #     - local: 
                                  #        - prefetched:
                                  #           - using BOBJ.prefetch[.url] URL
                                  #           - if BOBJ.prefetch.cache true (def), stored on localStorage, according to
                                  #             BOBJ.prefetch:
                                  #              - ttl NUM (in ms, def: 1 day)
                                  #              - cacheKey STR (def: URL)
                                  #              - thumbprint STR: added to cacheKey, so that cache is invalidated if different
                                  #        - manually added by BOBJ.local SOBJ_ARR or BLOODHOUND.add(SOBJ_ARR)|clear()
                                  #        - sorted if BOBJ.sorter(SOBJ, SOBJ2)->-1|0|1
BLOODHOUND.noConflict()           #
BLOODHOUND.get(VAL_ARR)           #Returns SOBJ_ARR when BOBJ.identify(SOBJ)->VAL === VAL (null for each that cannot be found)
BLOODHOUND.get(Q_OBJ,            
FUNC(SOBJ_ARR), FUNC2(SOBJ_ARR))  #Queries SOBJ_ARR: fire FUNC() for local data, FUNC2 for remote data.
                                  #Request:
                                  #  - request modified by BOBJ.local|remote.prepare(Q_OBJ, BOBJ)->BOBJ
                                  #     - if BOBJ.remote.wildcard STR, replace(URL, STR, encodeURIComponent(Q_OBJ)) instead
                                  #  - response modified by BOBJ.remote.transform(SOBJ_ARR)->SOBJ_ARR
                                  #Tokenization:
                                  #  - request|response tokenized by BOBJ.query|datumTokenizer(Q_OBJ|SOBJ)->STR_ARR
                                  #     - available default:
                                  #        - Bloodhound.tokenizers.whitespace|nonword(VAL)->STR_ARR 
                                  #          (according to /\s+/ or /\W+/)
                                  #        - Bloodhound.tokenizers.obj.whitespace|nonword("KEY"[_ARR]...)(VAL)->STR_ARR:
                                  #          same but only use OBJ.KEY
