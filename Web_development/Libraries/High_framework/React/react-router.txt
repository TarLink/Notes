
                  
   REACT-ROUTER   
                  


VERSION ==>                       #1.0.1

<Router>                          #Parent of all other tags.
                                  #Instantiate matching components, and returns as RCOMP.
  history={HISTORY}               #???
  stringifyQuery|parseQueryString=
    {FUNC}                        #See RACKT-HISTORY
  createElement=
    {FUNC(RCOMP, PROPS)->RCOMP}   #Triggered when a RCOMP is created
  onError={FUNC(ERROR)}           #???
  onUpdate={FUNC}                 #???

<Route>
  path="PATH"

  component={RTYPE}               #Instantiate RTYPE if path matches
  components={{ VAR: TYPE ... }}  #PATH can contain:
                                  #  - :VAR, passed as:
                                  #     - PROPS.params.VAR: all ROUTE's RCOMP
                                  #     - PROPS.routeParams.VAR: current ROUTE's RCOMP
  getComponent[s]=                #  - *
    {FUNC(RLOCATION,              #Same as component[s]={RTYPE} but using an async function
    FUNC(ERROR, RTYPE|OBJ))}      #PATH cannot start with '/'

  childRoutes={ROUTE_ARR}         #Children <Route>:
                                  #  - inherits current path, unless PATH starts with '/'
                                  #  - are passed to parent as PROPS.children ('component')
  getChildRoutes={FUNC(RLOCATION, #    or PROPS.VAR ('components')
    FUNC(ERROR, ROUTE_ARR))}      #Can also just use PROPS.children

  indexRoute={ROUTE}              #
  getIndexRoute={FUNC(RLOCATION,  #Default route.
    FUNC(ERROR, ROUTE))}          #Can also use an <IndexRoute> instead of <Route>

  onEnter=                        #BOOL is true if replaceState
    {FUNC(STATE, BOOL[, FUNC()])} #If FUNC, will be async, i.e. does not enter until called.
                                  #`this` in FUNC is ROUTE
  onLeave={FUNC()}                #

<Redirect>
  from="PATH"
  to="PATH"
  query={OBJ}                     #
<IndexRedirect>                   #Same as <Redirect> but for <IndexRoute>

ROOT COMPONENTS ==>               #The following members are only for the components specified in <Route>:
RCOMP.history                     #RHISTORY
RCOMP.location                    #RLOCATION
RCOMP.route                       #ROUTE

ANY COMPONENT ==>                 #
RCOMP.routeWillLeave(RLOCATION)   #Same as RHISTORY.listenBefore() + RHISTORY.beforeUnload()
                                  #Must use MIXIN REACTROUTER.Lifecycle
RCOMP.*(...)                      #Does RHISTORY.*(...)
                                  #Must use MIXIN REACTROUTER.History
RCOMP.isActive                    #Is true if exact match (if BOOL true) or parent match too (BOOL false, def)
('PATH', QUERY_OBJ[, BOOL])       #Must use MIXIN REACTROUTER.History
RCOMP.context.route               #Must use MIXIN REACTROUTER.RouteContext

<Link>                            #Creates a <a> to change current path
                                  #Pass other props to <a>
  to="PATH"                       #
  query={OBJ}                     #
  hash="#..."                     #
  state={VAL}                     #JSON-serializable
  activeClassName="CLASS"         #
  activeStyle={OBJ}               #When is current route
  onClick={FUNC(EVENT)}           #

<IndexLink>                       #Same as <Link>, but use <IndexRoute>

<RoutingContext>                  #???
