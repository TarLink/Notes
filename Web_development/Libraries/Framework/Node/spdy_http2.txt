
                
   SPDY_HTTP2   
                


SPDY                          #Node module (1.28.1)
                              #Like HTTPS, but using SPDY. Fallback to SPDY if client does not support it.
                              #HTTPS.createServer() OBJ has extra members:
                              #  - windowSize UINT (def: 1MB)
                              #As client must use AGENT returned by SPDY.createAgent(OBJ)
                              #  - host, port
                              #  - spdy:
                              #     - plain BOOL: if true (def: false), ignore ALPN/NPN, and chooses SPDY by looking at first
                              #       request instead
                              #     - ssl BOOL: if false and plain true, uses HTTP instead of HTTPS
                              #     - version NUM (def: auto)
                              #     - maxStreams NUM: max. parallel streams
                              #     - maxChunk (def: 8192)

SERVER PUSH ==>               #Server RES has extra members:
                              #  - push(FILE_URL, HEADERS_OBJ[, UINT][, FUNC(ERROR, SOCKET)])->SOCKET:
                              #     - UINT is priority
                              #     - SOCKET.on("acknowledge|error", FUNC())
                              #     - SOCKET.end(FILE_CONTENT_STR)
                              #Client AGENT:
                              #  - AGENT.on("push", FUNC(SOCKET))
                              #     - SOCKET.on("error", FUNC())

TRAILING HEADERS ==>          #REQ|RES.addTrailers(HEADERS_OBJ)
                              #REQ|RES.on("trailers", FUNC(HEADERS_OBJ)) (can be REQ returned by HTTPS.request())


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:             HTTP2             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


HTTP2                         #Like HTTPS, but using HTTP2. Too early to use.
