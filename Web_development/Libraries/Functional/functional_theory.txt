
                       
   FUNCTIONAL_THEORY   
                       



CLOSURE ==>                       #Function holding state accross executions thanks to lexical scope binding

COROUTINE ==>                     #Function that holds state accross executions, including where it left off:
                                  #  - run until explicit yield 
                                  #  - jump to any function (instead of returning to caller)
                                  #  - when called again, restart at yield point

GENERATOR|SEMICOROUTINE ==>       #Coroutine that only jumps back to caller when yielding, usually returning value
                                  #Usually meant for iterators or streams

