
         
   URI   
         


RFCs:
  - data URI: 2397 (including max size)
  - CSV: 7111
  - OID: 3061
  - IPv6: 6874
  - examples: 6963
  - tel://: 3966
  - FPI: 3151
  - tag://: 4151
  - about://: 6694
  - go back to HTTP doc
  - reorganize Koi to group things by theme then by technology, instead of the inverse

SUMMARY ==>                       #URI (Uniform Resource Identifier):
                                  #  - syntax: 
                                  #     - SCHEME, AUTHORITY, ORIGIN, USERINFO, HOSTNAME, PORT, PATH, QUERY, HASH
                                  #     - percent-encoding
                                  #     - case-insensitive: SCHEME, HOSTNAME. Rest depends
                                  #     - max length 255
                                  #     - relative references (to base URI): '', 'URI', '/URI', '//URI'
                                  #     - should try not to restrict syntax
                                  #  - IRIs: like URIs but only percent-encode not permitted ASCII chars
                                  #  - can describe: identity, location, content, metadata
                                  #  - cardinality:
                                  #     - RESOURCE == RESOURCE2 depends on SCHEME|AUTHORITY
                                  #     - URI == URI2 is helped by normalization
                                  #     - sameness (URI always returns same resource, anywhere in global namespace)
                                  #     - no ambiguity (URI returns only one resource)
                                  #     - uniqueness:
                                  #        - only 1 URI for 1 resource 
                                  #        - optional: can use canonical URI, short URI
                                  #  - clean URI: accessible, separation of concern by not infering implementation
                                  #  - data URIs
                                  #  - URI templates: e.g. /.../{VAR}/.../
                                  #  - well-known URIs: at /.well-known/
                                   

																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:            SYNTAX             :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


PARTS ==>                         #[SCHEME:][//[USERINFO@]HOSTNAME[:[PORT]]][PATH][?[QUERY]][#[HASH]]:
                                  #  - SCHEME
																	#  - AUTHORITY: //[USERINFO@]HOSTNAME[:[PORT]]
																	#  - ORIGIN: 
																	#     - SCHEME://HOSTNAME[:[PORT]]
																	#     - can be null, e.g. initial HTTP request
																	#     - ORIGIN null !== ORIGIN null
																	#  - USERINFO:
																	#     - should avoid plaintext like USER:PASSWORD
																	#  - HOSTNAME: 
																	#     - can be other things too, e.g. IP address (for IP protocols)
																	#     - max length 255 bytes
																	#  - PORT:
																	#     - socket number
																	#  - PATH:
																	#     - / imply hierarchy
																	#     - when AUTHORITY and PATH both present, must be separated by /
																	#     - can use . or .. 
                                  #        - must be resolved as fast as possible
																	#  - QUERY: 
																	#     - can be any syntax 
                                  #        - but usually ?VAR=VAL&...
                                  #        - sometimes also ;VAR=VAL;...
																	#  - HASH:
																	#     - can be:
																	#        - part of RESOURCE
																	#        - RESOURCE2 referenced by RESOURCE
																	#        - RESOURCE variant
																	#     - semantics depends on MIME type
																	#     - processed by client not server

CHARSET ==>                       #Not permitted characters: 
                                  #  - percent-encoding UTF-8 byte value
                                  #  - case-insensitive, prefer uppercase
                                  #  - also known as "URL encoding"
																	#Permitted characters (beyond general URI delimiters):
																	#                             PORT                    [:digit:]
																	#    SCHEME USERINFO HOSTNAME      PATH QUERY HASH    [:alnum:] - . +
																	#           USERINFO HOSTNAME      PATH QUERY HASH    _ ~ ! $ & ' ( ) * , ; =
																	#           USERINFO               PATH QUERY HASH.   :
																	#                                  PATH QUERY HASH    @
																	#                                       QUERY HASH    / ?
                                  #Escaping:
                                  #  - JavaScript: encode|decodeURI[Component]()

CASE ==>                          #  - SCHEME, HOSTNAME: case-insensitive, lowercase recommended
																	#  - rest: depends on SCHEME and AUTHORITY

MAX LENGTH ==>                    #Depends on URI scheme, but recommmends 255 bytes

RELATIVE REFERENCE ==>            #  - when SCHEME: is ommitted
																	#  - relative to another URI2 ("base URI"), which can be (in priority order):
																	#     - defined in RESOURCE (e.g. <base> in HTML)
																	#     - defined in parent RESOURCE2
																	#     - top-level resource's URI2
																	#     - application-specific default URI2
																	#  - if URI:
																	#     - empty or only QUERY|HASH: 
                                  #        - "same document reference"
																	#        - same as URI2
																	#           - including QUERY2 unless QUERY specified
																	#           - excluding HASH2. HASH is also used.
																	#     - URI: 
                                  #        - "relative path reference"
																	#        - relative to SCHEME2://AUTHORITY2/PATH2/
																	#           - /PATH2/ excludes filename
																	#     - /URI: 
                                  #        - "absolute path reference"
                                  #        - relative to SCHEME2://AUTHORITY2/
																	#     - //URI: 
                                  #        - "network path reference"
                                  #        - relative to SCHEME2: 
																	#  - "URI reference": URI or relative reference

SYNTAX RESTRICTIONS ==>           #  - URI syntax can be restricted by specific SCHEME
																	#  - should not be restricted by specific AUTHORITY
																	#     - except for PORT
																	#     - otherwise it can:
																	#        - conflict with other technologies also restricting URI syntax
																	#        - make URI more dependant on implementation
																	#        - make it less flexible
																	#  - HASH syntax|semantics are defined by MIME type, not SCHEME nor AUTHORITY


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:              IRI              :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


I18N ==>                          #IRI (Internationalized Resource Identifier) are like URI but i18n'd:
																	#  - do not need percent-encoding:
																	#     - most Unicode chars
																	#     - encoding is unspecified but usually UTF-8
																	#        - if embedded inside a document with a specific encoding, should use that one
																	#  - still need percent-encoding:
																	#     - ASCII chars not permitted in URIs
																	#     - private use or non chars Unicode chars 
                                  #        - i.e. U+E000 to U+F8FF, U+FDD0 to U+FDEF, U+F|10XXXX
                                  #        - except in QUERY
                                  #  - bidirectionality:
																	#     - must use ltr for logical representation (i.e. digital format) 
                                  #     - but can use any for visual representation (i.e. what people see/input)

RELATIONSHIP WITH URIS ==>        #  - URIs and IRIs are siblings, not subsets
																	#  - can convert from each other
																	#     - specific SCHEME or protocol might add steps to conversion, e.g. Punycode for IDNA (DNS)
																	#  - scheme, protocol or format need to explicitly allow IRIs to be able to use them


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           SEMANTICS           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


PURPOSE ==>                       #URIs can describe (not exclusive to each other):
																	#  - identity:
																	#     - resource ID, regardless of location
																	#     - long-term persistent
																	#     - resolution:
																	#        - translating into location/metadata
																	#        - example: Handle System
																	#     - example: URN, DOI
																	#  - location:
																	#     - address where a resource might be located
																	#     - called URL (Uniform Resource Locator)
																	#     - must use one|several network protocols|algorithm:
																	#        - URI scheme does not always equate protocol, e.g. data: or file:
																	#     - transient
																	#        - if persistent: permalink or PURL (permanent URL)
																	#           - redirect to transient URL
																	#        - rotten|dead|broken link:
																	#           - when location does not reference to the resource anymore
																	#  - content:
																	#     - including hash
                                  #     - transient
																	#     - example: data URI
																	#  - metadata:
																	#     - e.g.: URLs, owner, access restrictions, encoding
																	#     - transient
																	#     - example: URC (never implemented), RDF

OPAQUE VS REFLECTIVE ==>          #Can be opaque/unreflective or transparent/reflective, i.e. whether URL describes content|metadata


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:          CARDINALITY          :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


RESOURCE IDENTITY ==>             #Whether RESOURCE == RESOURCE2:
                                  #  - depends on SCHEME and AUTHORITY
                                  #  - example of amibiguous points:
																	#     - non-semantic changes (formats, encoding, etc.)
																	#     - different versions of same resource

SAMENESS ==>                      #Different requests to same URI cannot return different resources 
																	#  - at different places (global namespace) or times
																	#Global namespace:
																	#  - points to same resource in any network 
                                  #     - but resource might be available or not depending on network
																	#  - sometimes the context is part of the resource itself, e.g.:
																	#     - file:
																	#     - http://localhost
																	#     - time-based protocols
																	#  - implies central authorities:
																	#     - URN NAMESPACE are registered to IANA
																	#     - URL:
																	#        - HOST IP and domain names are delegated to providers registered to IANA
																	#        - PATH is responsibility of server

NO AMBIGUITY ==>                  #One request to 1 URI cannot return many resources at once

UNIQUENESS ==>                    #Cannot bind duplicate URIs to 1 resource:
																	#  - this requirement is optional
																	#  - if not enforces, can use:
																	#     - canonical URI: 
																	#        - the URI which has priority
																	#        - others might redirect to canonical URI (URLs only)
																	#     - short URI: smaller size than others
																	#  - depends on URI identity:
																	#     - whether URI == URI2
																	#     - normalization:
																	#        - safe:
																	#           - lowercase SCHEME, HOST
																	#           - uppercase %-encoded chars
																	#           - %-decode chars that do not need to be
																	#           - resolving . and ..
																	#           - resolving relative references
                                  #        - safe (IRIs only):
																	#           - converting to same encoding (e.g. UTF-16 -> UTF-8)
																	#           - Unicode characters normalization (e.g. STR.normalize() in JavaScript)
																	#           - case-sensitivity should be for ASCII only
																	#        - SCHEME-specific (unsafe):
																	#           - removing parts that equal default value (e.g. PORT, PATH, filename)
																	#           - replace with equivalent SCHEME (e.g. http -> https)
																	#           - remove empty parts, e.g. ? or # alone
																	#           - lowercase|uppercase of case-insensitive parts (other than SCHEME, HOST)
																	#           - remove duplicate /
																	#           - IP:
																	#              - IP -> hostname
																	#           - HTTP:
																	#              - prepend www. to HOST
																	#        - AUTHORITY-specific (unsafe):
																	#           - add trailing /
																	#           - sorting QUERY
																	#           - removing unused parts (e.g. undefined query variables)
																	#           - remove #HASH


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           CLEAN URI           :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


GOAL ==>                          #Semantic/clean/RESTful URI
                                  #  - accessibility
																	#  - separation of concerns, e.g. does not need to change URL when implementation changes

HOW ==>                           #Resource name should be abstract and not infer implementation:
																	#  - resource names instead of file|script name
																	#     - using slugs, i.e. short [[:alpha:][:lower:]-]
																	#  - instead of query variables:
																	#     - PATH parts
																	#     - file extension (for resource format)
																	#  - often only use several /RESOURCE and /ID
                                  #Technologies that can help keep URI clean:
																	#  - HTTP headers
																	#  - URI templates
																	#  - Link [S]
																	#  - well known URIs


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:           DATA URI            :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


GOAL ==>                          #URI scheme describing content, i.e. containing full resource

HOW ==>                           #data:[MIMETYPE];CHARS,CODE
                                  #  - MIMETYPE:
                                  #     - def: text/plain
                                  #  - CHARS:
                                  #     - charset=CHARSET (e.g. utf-8)
                                  #     - or base64
                                  #  - CODE: data

LIMITS ==>                        #Max length:
                                  #  - IE11<: 32KB
                                  #Content:
                                  #  - in HTML:
                                  #     - IE11<: images, CSS, JavaScript. Not HTML subfiles (e.g. <a href>). iframe???
                                  object??? video poster??? media src???



																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:         URI TEMPLATES         :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


GOAL ==>                          #Using variables in URI

HOW ==>                           #{[PREFIX]VAR[SUFFIX][,...]} -> VAL,...
																	#  - no nesting
																	#  - VAR: 
																	#     - name: [[:alnum:]._] or percent-encoding
																	#     - undefined|null -> completely ignored
																	#     - keep duplicate VAR
																	#  - PREFIX (exclusive): 
																	#       | before all | between each | before each | use case
																	#    ---+------------+--------------+-------------+------------
																	#     + |            |              |             | injection
																	#     # | #          |              |             | injection
																	#     . | .          | .            |             | HOST
																	#     / | /          | /            |             | PATH
																	#     ; | ;          | ;            | VAR[=]      | QUERY ('=' only if VAL !== '')
																	#     & | &          | &            | VAR=        | QUERY
																	#     ? | ?          | &            | VAR=        | QUERY
																	#  - SUFFIX (exclusive):
																	#     - :NUM -> truncates at NUM chars
																	#     (if not SUFFIX *)
																	#     - ARR -> VAL,...     (right-side)
																	#     - OBJ -> VAR,VAL,... (right-side)
																	#     (if SUFFIX *)
																	#     - ARR -> VAR,...     (left-side)
																	#     - OBJ -> VAR=VAL,... (left-side)
																	#  - percent-encoding:
																	#     - not on [:alnum:] - . _ ~
																	#     - (if PREFIX + or #) not on any valid URI char, including delimiters or %HEX


																						 /=+===============================+=\ 
																						/  :                               :  \  
							 														  )==:        WELL-KNOWN URIS        :==(   
																						\  :_______________________________:  /    
																						 \=+===============================+=/


WELL-KNOWN URIS ==>               #URIs:
																	#  - that need to be accessed before any other resource (e.g. resource access policy)
                                  #  - whose PATH is common among different authorities:
																	#     - registered with IANA
																	#     - PATH starts with /.well-known/
