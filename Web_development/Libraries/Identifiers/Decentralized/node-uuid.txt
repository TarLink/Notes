
               
   NODE-UUID   
               


UUID                          #Web script or Node module
                              #Version 1.4.7
                              #Should use BUFFER in Node.js, NUM_ARR in Webkit.
UUID.v1                       #Generates UUID v1 (time-based)
([OBJ[,BUFER|NUM_ARR[,NUM2]]])#OBJ:
                              #  - node 6_NUM_ARR: fifth part, stable for current process (def: random)
                              #  - clockseq NUM (0-0x3fff): fourth part, stable for current process (def: internal)
                              #    (third part is always "11e4")
                              #  - msecs NUM|DATE (def: now)
                              #  - nsecs NUM (0-9999) (def: internal counter, not now)
                              #Returns either:
                              #  - STR
                              #  - if specified, BUFFER|NUM_ARR, written on it starting at position NUM2

UUID.v4                       #Similar for UUIDv4 (hardware randomness, 122 bits of randomness)
([OBJ[,BUFER|NUM_ARR[,NUM2]]])#OBJ:
                              #  - random 16_NUM_ARR (def: auto)
                              #  - or rng FUNC()->16_NUM_ARR. Def depends on platform:
                              #     - node.js: uses CRYPTO.randomBytes()
                              #     - Webkit: uses crypto.getRandomValues()
                              #     - others: uses Math.random()

UUID.parse(STR)
UUID.unparse(BUFFER)          #Convert STR <-> BUFFER

UUID.noConflict()             #Erases global variable UUID
