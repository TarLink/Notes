
                
   VERSIONING   
                



V.X[.Y]][+opt][-Z][word]          #  - V: major release number, i.e. backward-incompatible changes
                                  #  - X: minor release number, i.e. backward-compatible new features
                                  #  - Y: revision|bugfix number, i.e. backward-compatible bugfixes
                                  #  - opt: build metadata|options
                                  #  - Z: build number: usually not advertised
                                  #  - word: target plateform
                                  #Starts at 0 (except build number)
V:X.Y...                          #Alternative writing
0.V.X.Y...                        #Means unstable. 

SEMVER ==>                        #Semantic versioning:
                                  #  - using V.X.Y with exactly meaning above
                                  #     - e.g. guarentee that only major release can break API
                                  #  - should be advertised

ALTERNATIVES ==>                  #  - timestamp: 
                                  #     - e.g. 20120302, or Ubuntu 11.10
                                  #     - easier to create but communicate less information to users
                                  #  - words: more marketing, but less information to technical users

beta                              #Un logiciel bêta doit être < 1.0
BUILDS ==>                        #Autre définition de beta :
                                  #  - une pre-alpha est avant la production du code (recherche)
                                  #  - un premier build est une alpha (developer testing)
                                  #  - puis bêta (community testing),
                                  #  - puis plusieurs release candidates (rc)
                                  #  - jusqu'à l'incrémentation du revision number (r)
                                  #Auquel cas -Z est parfois remplacé par a1, b2, (b3...) rc3, rc4, etc.

PLUSIEURS TIMELINES ==>           #Il est possible de maintenir plusieurs versions plus ou moins stable :
                                  #  - par exemple une très stable n'étant modifiée que lors d'une release considérée très stable ; une
                                  #    moins stable s'incrémentant toujours ; etc.

BACKPORT ==>                      #Par opposition aux ajouts de fonctionnalité, les bugfixes peuvent/doivent faire l'objet de backports :
                                  #proposer un patch appliquables aux versions antérieures également, et à appliquer à toutes les
                                  #"timelines" maintenues officiellement.
