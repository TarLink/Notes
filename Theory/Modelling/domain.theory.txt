
            
   DOMAIN   
            



                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:     DOMAIN-DRIVEN DESIGN      :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


DOMAIN ==>                        #Sphere of knowledge

MODEL ==>                         #Set of related concepts inside a given domain
                                  #Often there are several for a given domain:
                                  #  - e.g. different groups of users, legacy, etc.
                                  #  - should keep models separate from each other as much as possible ("bounded context"):
                                  #     - from any viewpoint: different UIs, APIs, databases, codebases, etc.
                                  #  - should be explicited using the "ubiquitous language"

VIEWPOINT ==>                     #Can be:
                                  #  - business: users, e.g. UI
                                  #  - specification: interface, e.g. API
                                  #  - implementation: e.g. variable names
                                  #Must make sure implementation conforms to spec, and spec to business
                                  #  - should use continuous integration to ensure it
                                  #  - should use agile process to get constant feedback from users
                                  #     - should have domain experts available
                                  #When communicating (including commenting), must explicit which viewpoint is used (to avoid "ambiguous viewport")

UBIQUITOUS LANGUAGE ==>           #Making all viewpoints share some wordings
                                  #Should be explicited

CONTEXT MAP ==>                   #Expliciting domain, models, bounded contexts
