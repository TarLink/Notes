
             
   NODEMON   
             



nodemon [SCRIPT] [-- ...]     #Command line Node module (1.2.1)
                              #Like node SCRIPT [...] except it redoes node SCRIPT (even if first has exit) if any 
                              #./*.EXTENSION files are changed, or if using command line "rs" (on same terminal as nodemon).
                              #To use in development/testing/debugging an app, not in production.
                              #Def SCRIPT: use package.json main file.
                              #Command-line options can be specified using a config file nodemon.json in $PWD or $HOME, with
                              #camelcase instead of dash-style.
                              #To do graceful exit, intercept SIGUSR2 signal: 
                              #  process.once("SIGUSR2", function(){ ... process.kill(process.pid, "SIGUSR2"); })
--exec "COMMAND_WITH_OPTIONS" #Uses COMMAND (e.g. python) instead of node --harmony (def)
                              #Can also use execMap: { EXTENSION: COMMAND_WITH_OPTIONS } in config file, which will use 
                              #COMMAND if SCRIPT has EXTENSION. Def: { py: "python", rb: "ruby" }
--watch DIR|FILE              #DIR to watch recursively (can specify several times for several DIR) (def: $PWD)
                              #FILE can use globbing if quoted.
--ignore DIR|FILE             #Inverse. Def: .git/, node_modules/, bower_components/, .sass-cache/
--ext EXTENSION...            #Extensions to watch
--delay DOUBLE                #Restarts SCRIPT only after DOUBLE seconds. If new file changes, reset the delay.
                              #Goal is when changing several files in a batch, to avoid restarting several times.
--quiet|verbose               #
--exitcrash                   #Necessary when using forever too (but forever should be used in production, not nodemon)
                              #Should do forever start -c "nodemon --exitcrash" SCRIPT

NODEMON(OBJ|STR)              #Runs nodeman as Node module.
                              #STR is command line arguments to nodemon. OBJ: 
                              #  - script STR 
                              #  - nodeArgs STR_ARR (e.g. "--debug")
                              #  - any options (e.g. ext STR). List are space-separated STR
                              #  - stdout false: no output on console
                              #Returns NODEMONOBJ, an EVENTEMITTER with events:
                              #  - start FUNC() 
                              #  - quit FUNC() 
                              #  - restart FUNC(FILE_STR_ARR)
                              #  - crash FUNC()
                              #  - config:update FUNC(OBJ2): OBJ2:
                              #     - options OBJ
                              #     - command.string STR: e.g. "node FILE"
                              #     - run BOOL
                              #     - dirs DIR_ARR
                              #  - log(OBJ): OBJ has members type, message, colour
                              #  - stdout|err
                              #  - readable FUNC(): data is ready to read using NODEMONOBJ.stdout|err OSTREAM
                              
GULP-NODEMON(...)             #Fires NODEMON(...). Version 1.0.4
                              #Returns NODEMONOBJ, not GULP object, with members:
                              #  - on(NODEMONEVENT, FUNC(...)|TASKS[_ARR])
                              #Adds NODEMONEVENT "change" (a file changed)
                              #Can be combined with GULP.watch():
                              #  - GULP.watch() watches most things and rebuild parts when changed
                              #  - GULP-NODEMON should only watch server file (use watch: FILE, not only script: FILE): it will
                              #    relaunch it when changed
