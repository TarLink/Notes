
         
   JSDOC  
         


jsdoc [-d DIR2] FILE|DIR...   #Generates HTML documentation in DIR2 according to JavaScript FILE... comments, that must
                              #use the format /** ... */
                              #It can be e.g.:
                              #  /** COMMENT */
                              #Or:
                              #  /**
                              #   * COMMENT
                              #   * @TAG VALUE
                              #   */
                              #With DIR, use -r
                              #Also:
                              #  - link to source code
                              #  - only documented members are shown
                              #  - If a FILE is README.md, it will be included and parsed to HTML.
                              #Version 3.3.0
-l                            #Don't exit on errors
-X                            #Output in JSON to stdout instead

LINTINT ==>                   #ESLint has a rule for that.

CONFFILE                      #Need to use -c CONFFILE (ex: conf.json)
                              #OBJ:
                              #  - tags: allowUnknownTags BOOL (def: true): if false, error if @unknown_tag
                              #  - source (source files to document):
                              #     - include|exclude PATH_ARR
                              #     - include|excludePattern REGEXP_STR (def: include *.js[doc] and exclude _* (also for DIR))
                              #  - plugins MODULE|PATH_STR_ARR: plugins are Node.js modules (see online doc)
                              #  - opts (from CLI): template STR, destination STR, recurse BOOL, tutorials STR, private BOOL,
                              #    lenient BOOL, explain BOOL

TEMPLATES ==>                 #Def: ./templates/default. Can change with -t DIR, which will look for DIR/publish.js
                              #Are Node.js modules.
                             ##docstrap (version 0.4.12) is a template:
                             ##  - has extra CONFOBJ:
                             ##     - systemName STR: main name
                             ##     - footer HTML_STR
                             ##     - copyright STR
                             ##     - navType "inline": use horizontal submenu instead of vertical
                             ##     - theme "amelia|cerulean|cosmo|cyborg|flatly|journal|readable|simplex|slate|spacelab|spruce
                             ##       superhero|united"
                             ##     - syntaxTheme "default|dark": theme for code blocks
                             ##     - linenums BOOL (def: false): on source code
                             ##     - collapseSymbols BOOL (def: false): if large number of variables, create collapsable list
                             ##     - analytics: ua "UA-XXXXX-XXX", domain "XXX": add Google Analytics snippet
                             ##     - inverseNav BOOL (def: false): if true, higher contrast
                             ##     - outputSourceFiles BOOL (def: false)
                             ##     - outputSourcePath BOOL (def: false)
                             ##     - dateFormat STR: use moment.js syntax
                             ##     - highlightTutorialCode BOOL (def: false): treat code blocks in tutorials
                             ##  - adds @example {@lang LANG} (JavaScript) or {@tag LANG} (in Markdown) for code blocks not in
                             ##    JavaScript

MARKDOWN PLUGIN ==>           #Must use plugins "plugins/markdown" in CONFFILE
                              #Can configure with CONFOBJ.markdown:
                              #  - parser "gfm" (must be done)
                              #  - tags STR_ARR: additional tags to parse Markdown->HTML, beyond "description", "classdesc",
                              #    "param", "property" and "returns"
                              #  - hardwrap BOOL (def: false)

GULP ==>                      #No plugin, must launch command line from Gulp


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TAGS              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


@file COMMENT                 #Broad description of current file, on top of it
                              #List of files with their comments shown on index.
@module [MODULE]              #On top of file, declare a module. Def: use path used in Jsdoc command line, without extension.
                              #With @link, must use module:MODULE~VAR (local variable non-FUNC) or module:MODULE.VAR
                              #(local variable FUNC, this.* variable or assigned to module.exports).
@requires [module:]MODULE     #Requires another MODULE
@exports MODULE               #Before the module.exports exported. Guessed in CommonJS or Node.js, or in AMD unless
                              #exporting an OBJ non literal and non constructor (in which case should use @exports).
@external VAR                 #VAR not declared in current project, e.g. taken from dependencies.
                              #Used on top of file and usually with @see.
                              #Goal is to make referencable with external:VAR

@example ...                  #Use ... in a code block (up to next @ or end of comment block).
@description COMMENT          #Same as /** COMMENT */ but can be put anywhere in the comment block
@summary COMMENT              #Same but intended as a shorter version of @description, shown just before longer one.
@classdesc COMMENT            #Description of class, to put in a constructor function, and to distinguish from the main
                              #COMMENT about the constructor function itself.

@constructor                  #Show as "new FUNC()" and put in Classes instead of Global
                              #Also show related variables:
                              #  - local variables (prepends "inner")
                              #  - this.* variables
                              #  - prototype variables
                              #Shown in "Members" (non-FUNC) or "Methods" (FUNC)
                              #If wrong detection, can override with @inner, @instance or @static respectively
                              #When being refered by @link, must use TYPE~VAR, TYPE#VAR or TYPE.VAR respectively.
@abstract                     #For abstract methods. Show as "(abstract) FUNC()"
@augments TYPE                #For child types. Show "extends TYPE" and parent methods with "inherited from TYPE#FUNC"
@lends TYPE                   #Declare a constructor in two parts:
                              #  - one variable name with @class
                              #  - one variable content with @lends TYPE
                              #Useful when using factory methods:
                              #  /** @class */
                              #  var TYPE = FUNC(
                              #    //** @lends TYPE
                              #    OBJ
                              #  )
                              #OBJ members are @static by default, but can be @instance by using @lends TYPE.prototype
                              #If OBJ contains constructor method, use @constructs TYPE on it and remove @class.
@this VAR                     #Indicates that this is of type VAR

@mixin                        #Type that need to be mixed with other ones.
@mixes TYPE                   #Type using a mixin

@private|protected|public     #@private are only shown if --private (and prepends "(private)")
                              #@protected are shown but prepends "(protected)"
                              #If constructor, members don't inherit this tag.
                              #Def: @public

@global                       #Specify it is a global variable, when Jsdoc didn't autodetect it, e.g. when it is assigned
                              #dynamically to the global scope.
@memberof NAMESPACE|MODUL|TYPE#Declare as member of a namespace, module or constructor (implicit for the last one).
                              #If jsdoc complains it seems not to be the parent, can force with @memberof!

[[STR]]{@link VAR|URL}        #Creates a <a> link showing STR and pointing to VAR or URL.
                              #Can render link in monospace font by:
                              #  - using @linkcode (opposed to @linkplain) instead
                              #  - using CONFVAR templates.cleverLinks true (def: false): for links pointing to VAR
                              #  - using CONFVAR templates.monospaceLinks true (def: false): for links pointing to VAR or URL
                              #Can use @see {@link VAR|URL}:
                              #  - @see VAR|URL is short form
@tutorial TUTORIAL            #Creates link pointing to a HTML page at DIR/TUTORIAL.html|md, where DIR is specified by
{@tutorial TUTORIAL}          #jsdoc -u DIR (def: $PWD)
                              #Form with {} is inline.
                              #Can use DIR/TUTORIAL.json to specify two properties:
                              #  - title STR: display name (def: TUTORIAL)
                              #  - children TUTORIAL2_ARR: sub-tutorials
                              #Can use {@link} and {@tutorial} inside TUTORIAL.html|md
                              #Tutorials are also shown on the top navigation of the documentation.

@alias|name VAR               #Changes the autodetected variable name.
                              #@name also removes autodetection of type, so must specify manually with another tag, but is the
                              #only way to go in some cases where Jsdoc doesn't recognize the variable.
@borrows VAR as VAR2          #Make comments for VAR apply to current VAR2 too (e.g. references)
@variation NUM                #When two VAR with same name, put @variation NUM, then reference each with VAR(NUM)

@event [TYPE#]VAR             #Declares an event, i.e. if fires FUNC(VAL), that VAL.
                              #Referenced as [TYPE#]VAR or [TYPE#]event:VAR
@fires [TYPE#]VAR             #Declares next function fires event VAR

@since VERSION                #
@version VERSION              #
@deprecated [COMMENT]         #COMMENT is e.g. "since version VERSION"
@todo COMMENT                 #

@author AUTHOR [<EMAIL>]      #
@copyright AUTHOR DATE        #
@license TEXT                 #

@type {TYPE_EXPR}             #Indicates type before a variable declaration. TYPE_EXPR can be:
                              #  - TYPE
                              #  - VAR
                              #  - (TYPE_EXPR|TYPE_EXPR2|...): multiple possibilities
                              #  - TYPE_EXPR[] (ARR)
                              #  - {VAR: TYPE_EXPR,...} (OBJ)
                              #  - ...TYPE_EXPR: variadic
                              #  - !TYPE_EXPR: non-null
                              #  - ?TYPE_EXPR: can be null
@typedef {TYPE_EXPR} TYPE     #Before a type declaration. Can then use TYPE in any TYPE_EXPR.
                              #Its comment can be associated only with the TYPE2 using it as a TYPE_EXPR if:
                              #  - it is in the same comment
                              #  - or TYPE is "TYPE2~TYPE"
@callback TYPE                #Same as @typedef but for a callback type.
                              #Must use @param, etc. like @function
@param {TYPE_EXPR}            #
ARG - COMMENT                 #Use [ARG] to indicate optional, [ARG=VAL] for default value.
@returns {TYPE_EXPR} [COMMENT]#

@namespace [{TYPE_EXPR}]      #Indicates the declaration of a namespace, i.e. an OBJ used as namespace.
[NAMESPACE]                   #With @link, must use NAMESPACE.VAR
@enum {TYPE_EXPR}             #Declare an OBJ used as ENUM
@property {TYPE_EXPR} VAR     #Member of an OBJ, whether @namespace, @typedef or @constructor
@member [{TYPE_EXPR}] [VAR]   #Member of an OBJ, but can be used just before the declaration of that member.

@constant [{TYPE_EXPR}]       #For non-FUNC definition.
@read-only                    #For non-FUNC definition.
@default [TYPE]               #For non-FUNC definition, comment the assigned value (def: deduce from assignment).
