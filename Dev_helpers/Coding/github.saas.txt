
            
   GITHUB   
            



git instaweb                  #Bundled in Git, but I prefer command line

USER PROFILE ==>              #  - must be same as git user.name|email
                              #  - private email: use USER@users.noreply.github.com
                              #  - can block users
                              #  - 2-factor authentication: mobile app, SMS
                              #  - SSH keys

ORGANIZATION ==>              #Team-based ACL:
                              #  - owners 
                              #  - admin: create|delete repos 
                              #  - write: like collaborators (see below) for given repos 
                              #  - read: like everyone (see below) for given repos

PERMISSIONS ==>               #  - owner: can edit, manage collaborators, changing visibility to private
                              #  - collaborators: push, manage comments|issues|pull requests, create wiki, lock conversations
                              #  - everyone: pull|fork, comments|issues|pull requests, edit wiki

REPOSITORY ==>                #  - Creating: can initialize repo (LICENSE, .gitignore, README.md)
                              #  - GIT_URL: HTTPS, SSH (must use git@github.com), Git
                              #  - Private repo: paid
                              #  - Can transfer repos to other users|organizations or rename: will redirect automatically from 
                              #    former URLs

FORKING ==>                   #  - when editing a file from another repo, automatically do it
                              #  - should add upstream repo with git remote

GIT FUNCTIONS ==>             #  - git log [-- FILE]: history
                              #  - git show COMMIT:FILE: <>
                              #  - git show COMMIT -p --stat (with also rich editing diff): commit
                              #  - git blame: blame
                              #  - git checkout, branch --list: branches
                              #  - git tag, git checkout, git archive: tags
                              #  - git diff (can also use REPO:COMMIT and {@DATE}COMMIT): REPO/compare 

ISSUES AND PULL REQUESTS ==>  #  - assigning to people
                              #  - applying labels (help searching)
                              #  - applying milestones (user stories or releases, with date due, last update, percentage 
                              #    issues|pull requests done)
                              #  - can be closed:
                              #     - with commit message "Closes|Fixes|Resolves [USER/REPO]#NUM"
                              #     - when pull request is (if associated with pull request)
                              #     - with pull request description "Closed #NUM"
                              #  - can setup default templates with ROOT/.github/PULL_REQUEST_TEMPLATE|ISSUE_TEMPLATE.md
                              #  - can show contributing link on issues/pull requests with ROOT/.github/CONTRIBUTING.md

PULL REQUESTS ==>             #  - Should add tests and update documentation
                              #  - Compare&review: pull request from same repo
                              #  - merged with --no-ff
                              #  - can revert too
                              #  - use LRBRANCH pull/ID/head:LBRANCH
                              #  - CONTRIBUTING.md: automatically shown
                              #  - Syntax guidelines (can use .jshintrc)

RENDERING ==>                 #Markdown can be used in source code previewed, issues|comments|pull requests, Gists:
                              #  - Live preview editor
                              #  - Additional syntax:
                              #     - links to commit ID, issue ID, @NAME mentions (notifies user)
                              #     - tables, strikethrough
                              #     - code blocks, with auto syntax highlighting
                              #     - URLs autolinking
                              #     - Emoji
                              #Other: diff of images, GeoJSON, STL (3D file), CSV|TSV
                              #Limits: 1GB/repo, 100MB/file

OTHER FUNCTIONS ==>           #  - commits comments
                              #  - Releases: like tags but also has deployment archives (different from source code) and
                              #    release comments
                              #  - badges:
                              #     - https://img.shields.io/github/downloads/USER/REPO/[latest|RELEASE/]total|FILE.svg
                              #     - https://img.shields.io/github/tag/USER/REPO/TAG.svg
                              #     - https://img.shields.io/github/release/USER/REPO.svg
                              #     - https://img.shields.io/github/commits-since/USER/REPO/TAG.svg
                              #     - https://img.shields.io/github/forks|starts|watchers|followers/REPO/USER.svg?style=social&label=Fork|Star|Watch|Follow
                              #     - https://img.shields.io/github/issues[-pr][-closed][-raw]/USER/REPO.svg
                              #     - https://img.shields.io/github/contributors/USER/REPO.svg
                              #     - https://img.shields.io/github/license/USER/REPO.svg
                              #  - Advanced search: 
                              #     - repos, issues, users, code
                              #     - Explore: discover new repos, starring
                              #  - Stats:
                              #     - commits graphs over time 
                              #     - contributors
                              #     - traffic (git clone, pageviews)

NOTIFICATIONS ==>             #  - commits pushed on own repos
                              #  - watching repos: releases, issues, pull requests, commits comments, create|remove branches
                              #  - use @NAME, assigning to issue|pull request, suscribe to conversation
                              #  - following people: starring, following, creates repo, gets new fork
                              #  - can email, RSS

WIKI ==>                      #  - REPO with name REPO.wiki, filename is file title, many *.md files
                              #  - Special files: Home, _Footer, _Sidebar

GITHUB PAGES ==>              #  - free Hosting
                              #  - no HTTPS
                              #  - can use custom domain name (create a CNAME root file)
                              #  - can be:
                              #     - user|organization page: 
                              #        - REPO name is USER|ORG.github.io. 
                              #        - Served at http://USER|ORG.github.io
                              #        - Uses master branch. 
                              #     - project page: 
                              #        - served at http://USER|ORG.github.io/PROJECT. 
                              #        - Uses gh-pages orphan branch (git checkout --orphan)
                              #        - Can use ready-made HTML/CSS templates

GIST ==>                      #  - like REPO but single file
                              #  - can be secret (not shown on Explore, but URL still public)

API ==>                       #  - Domain: https://api.github.com/
                              #  - Response headers:
                              #     - X-RateLimit-Limit|Remaining (def: 5000/hour for authenticated, 1200/hour for Search API)
                              #     - X-RateLimit-Reset TIMESTAMP
                              #  - Authentication:
                              #     - limitation if not (60/hour)
                              #     - HTTP Basic with GitHub credentials
                              #     - OAuth: 
                              #        - can generate new personal token
                              #        - requests use Authorization: token TOKEN [C]
                              #        - can register App which gives APP_URL, etc.
                              #  - Pagination: 
                              #     - Link: <URL>; rel="first|prev|next|last",... [S]
                              #     - query parameter: page NUM, per_page NUM
                              #  - Others:
                              #     - Collections have less fields that individual retrieval
                              #     - GET endpoint -> all endpoints from there
                              #     - proper status codes
                              #     - Must include User-Agent [C]
                              #  - Resources:
                              #     - authorizations (HTTP Basic auth, 201|401 according to success)
                              #        + scopes SCOPE_ARR
                              #        + note STR
                              #        - scopes SCOPE_ARR
                              #        - token TOKEN
                              #        - url URL
                              #        - created_at DATE_STR
                              #        - id ID
                              #        - note STR
                              #     - most things found on GitHub, including Search
                              #  - Webhooks: triggered when receiving push. Can use for CI, backups, external bug tracker
                              #  - Libraries: GitHub (Node.js)
