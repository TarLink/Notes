
         
   CSS   
         


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            GENERAL            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SYNTAXE ==>                                     #Case sensitive. Ignore whitespaces.
                                                #Version 3, en cours d'achèvement. Version 4 commencée en parallèle.
                                                #This document does not include CSS4, almost completely not implemented at 
                                                #the time.

IMPLEMENTATION ==>                              #CSS link to external file works as #include
                                                #La priorité est donnée de haut en bas. 
                                                #En général <link> sont mis avant inline CSS in <head>.
                                                #En conséquence priorité est :
                                                #  - link < head-inline < tag-inline
                                                #Préférer include from external file. Everything except in tag attributes 
                                                #should be in <head>

<link rel="stylesheet" href="URL.css">          #From external file.
                                                #Utiliser @import éventuels dans les feuilles css. 
  media="MEDIA_QUERY"                           #MEDIA_QUERY is usually "all" (auquel cas inutile)

<head>
  <style>
    ...CSS...
  </style>
</head>                                         #Inline

<div style="NAME: VAL;[NAME: VAL;]..."></div>   #In tags

INTEROPERABILITE ==>                            #See HTML files for supported browsers.
                                                #Une VAR: VAL non supportée sera ignorée : mettre donc fallback avant.
                                                #Extensions sont mises quand encore expérimental : -moz- (Firefox), -webkit-
                                                #(Chrome+Safari), -o- (Opera), -ms- (IE). Solutions :
                                                #  - mettre l'une après l'autre, et terminer sans l'extension.
                                                ##Ext: signifie extensions nécessaires.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SYNTAXE            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


/* COMMENT */

@STR VAL                                        #At-rules

SELECTOR... {                                   #RULE
  VAR: VAL;...
}

STR                                             #Unicode : \XXXX. Sans guillemets si marqué sans. Sinon marqué "STR" 
                                                #('STR' est alors aussi possible)
VAR                                             #VAR names, used by CSS counters
URANGE                                          #U+[XX]XX[-U+[XX]XX]

NUM                                             #Nombre. != LEN
LEN                                             #Peut être :
                                                #  - relative (préférer) :
                                                #    - LENem : font-based measure, facteur de la taille de police de l'élément
                                                #      parent (2 deux fois plus grand, etc.). Peut être utilisé pour autre que
                                                #      police, pour que le layout s'adapte à taille de police.
                                                #    - LENex : environ 1/2 em
                                                #    - LENrem : <html> root element em
                                                #  - absolute :
                                                #    - LENpx|pc|cm|mm|in: physical measure (always in 96dpi). Préférer px.
                                                #      1in = 96px = 72pt = 6pc = 25.4mm 
LENP                                            #LEN ou PERC (en général percentage de la longueur/largeur de l'élément)
                                                #Si possible, utiliser em et percentages.
PERC                                            #Percentage

POSITION                                        #[VAL [VAL2]], où VAL/VAL2 est :
                                                #  - top|bottom|center|left|right (déf: top and left) suivi de LENP (déf: 0px)
                                                #    décrivant un shift. Chaque élément est optionnel.
                                                #Par exemple top 10px left est coin supérieur gauche, avec un shift de 10px
                                                #vers le bas.
SHAPE                                           #Rectangle : rect(LEN, LEN2, LEN3, LEN4) (top right bottom left)
ANGLE                                           #NUMdeg, NUMrad, NUMgrad. Can be negative.
                                                #NUMturn : 360deg (not sure if supported by Safari)

TIME                                            #Peut être : TIMEms or TIMEs
COLOR                                           #Peut être :
                                                #  - STR, dont blue, red, etc. (SVG color keywords)
                                                #  - #NNN[NNN]
                                                #  - rgb[a](255|100%,255|100%,255|100%[,1])
                                                #  - hsl[a](300,100%,100%[,1])
                                                #  - currentColor : same as inherit for children that don't inherit color
                                                #  - transparent : comme rgba(1,1,1,0)

URI                                             #URL of an external resource (image, font, cursor) : url("URL")
                                                #Can be none.
IMAGE                                           #URI or GRADIENT
GRADIENT                                        #Can be :
                                                #[repeating-]linear-gradient(ANGLE|STR, COLOR[|LENP]...)     
                                                #  - STR : to [left|right][top|bottom] (déf: to bottom)
                                                #  - LENP : déf: 0% et 100% pour begin et end, et interpolation pour autres.
                                                #    Négatif possible.
                                               ##  Ext: -webkit-, and pas de "to" in STR
                                                #[repeating-]radial-gradient([STR][ VAL][at POSITION], COLOR[|PERC]...)
                                                #  - STR : circle ou ellipse (déf)
                                                #  - VAL (déf: farthest-corner) est rayon :
                                                #    - STR : closest|farthest-corner|side
                                                #    - LEN pour circle, LENP LENP2 pour ellipse
                                                #  - POSITION est centre (déf: center), et n'accepte pas STR LENP, seulement
                                                #    STR ou LENP.
                                               ##  Ext: -webkit- et [POSITION, ][STR ][VAL], COLOR[|PERC]..., et VAL peut 
                                               ##  seulement être STR

FUNC                                            #FUNC(ARG)

VALUE CALCULATION ==>                           #  - initial : valeur par déf.
                                                #  - computed : valeur après CSS (dont inheritance)
                                                #  - used : valeur après application sur layout (e.g. convertion des %)
                                                #  - actual : valeur après correction du browser

INHERITANCE ==>                                 #Some properties are inherited by elements children :
                                                #  - paragraph-related : text-align, white-space, visibility, etc.
                                                #  - font-related : color, font-*, etc.
                                                #  - table-related (border-collapse, etc.)
                                                #  - list-related : list-*
                                                #  - quotes
inherit                                         #Used as a VAL, signifie pour une inherited property de suivre normal 
                                                #inheritance, afin d'override une précédente redéfinition :
                                                #  SELECTOR1 { VAR: VAL; }
                                                #  SELECTOR_PLUS_SPECIFIQUE { VAR: inherit; } //Override previous

SHORTHAND PROPERTY ==>                          #Permet de définir plusieurs properties en une seule : 
                                                #  - border-style, margin, padding, font
                                                #Attention :
                                                #  - VAL non précisées est remise à défaut si previously defined
                                                #  - "inherit" doesn't work
                                                #  - when defining borders, always TOP RIGHT BOTTOM LEFT, but if only 
                                                #    2 values TOP/BOTTM LEFT/RIGHT, and 1 value TOP/BOTTOM/LEFT/RIGHT
                                                #  - when corners, 1 value possible for all corners
                        
                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           AT-RULES            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@charset "UTF-8";                               #Always commence par cela, sans indentation.

@media MEDIAQUERY... { RULE }                   #Exécute RULE en fonction de MEDIAQUERY (en général type de l'appareil, 
                                                #par exemple mobile)
                                                #MEDIAQUERY est : MEDIA|REQUIREMENT[and REQUIREMENT]...
                                                #MEDIA est : [only|not] STR, parmi "all" ou : "screen" (normal) ; "print" 
                                                #(when printing) ; "tv" ; "speech" devices, "braille" ou "visual" (déf); 
                                                #"bitmap" (comme "visual" sans "tty") ; "tty". 
                                                #Pour autres, cf MDN @media article.
                                                #REQUIREMENT est : ( [min-|max-]VAR[: VAL] ), parmi :
                                                #  - color: number of bits/channel
                                                #  - color-index : number of indexed colors
                                                #  - monochrome : si VAL, number of bits/channel, sinon écran monochrome ou
                                                #    non
                                                #  - [device-]aspect-ratio: NUM/NUM2 : par ex. 16/9
                                                #  - [device-]height|width : taille de l'écran de l'appareil ou de
                                                #    l'application
                                                #  - resolution : NUMdpi|dpcm|dppx
                                                #  - orientation: landscape|portrait
                                                #  - scan: progressive|interlace (pour tv)
                                                #  - grid : tty ou feature phone old display
WINDOW.matchMedia("MEDIAQUERY")->MEDIAQUERYLIST #
MEDIAQUERYLIST.media                            #"MEDIAQUERY". Readonly
MEDIAQUERYLIST.matches                          #BOOL
MEDIAQUERYLIST.add|removeListener
(FUNC("MEDIAQUERY"))                            #When matches changes.
mediaCheck(OBJ)                                ##According to OBJ.media "MEDIAQUERY", fires OBJ.entry|exit|both(MEDIAQUERYLIST)
                                               ##Compatible older IE (with only [min|max-]height|width|aspect-ratio: VALpx|em)
                                               ##Version 0.4.6

@import URL [STR]                               #Importe une autre feuille CSS. Mettre au début.
                                                #STR est une media queries spécifique.

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           SELECTORS           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/



COMBINATOR ==>                                  #
SELECTORSELECTOR2                               #And
SELECTOR, SELECTOR2...                          #Or
SELECTOR SELECTOR2...                           #Descendant
SELECTOR > SELECTOR2...                         #Direct child
SELECTOR + SELECTOR2...                         #Direct next sibling
SELECTOR ~ SELECTOR2...                         #Following sibling (indirect)

PRECEDENCE ==>                                  #List follow precedence.
                                                #HTML-inline always have higher precedence.
VAR: VAL !important;                            #Signifie que rule aura priorité sur autres rules, même si plus spécifiques 
                                                #(sauf si !important elles-mêmes). To avoid !

*                                               #All tags
#ID                                             #All tags with ID
.CLASS                                          #All tags with CLASS 
[ATTR]                                          #All tags ayant ATTR (use square brackets)
[ATTR="STR"]                                    #Tags dont ATTR value exactement égal à STR
[ATTR!="STR"]                         jQuery UI##Tags dont ATTR value inégal à STR, ou absent
[ATTR^="STR"]                                   #
[ATTR$="STR"]                                   #Tags dont ATTR value commence/finit par STR
[ATTR~="STR"]                                   #
[ATTR*="STR"]                                   #Tags dont ATTR value contient STR : whole word (delimited by spaces) ou non
[ATTR|="STR"]                                   #Tags dont ATTR value exactement égal à STR, ou commence par STR suivi par "-"
:PSEUDOCLASS                                    #Pseudo-class.
                                                #Devraient être dans cet ordre pour respecter ordre logique :
                                                #  - link : any link
                                                #  - visited : visited link (can only change color)
                                                #  - hover : mouseover. Impossible on mobile devices, so prevoir même action
                                                #            avec clic. 
                                                #            Souvent utilisé pour menu dynamique : <ul> avec :
                                                #              - li li { display: none } //Submenu are hidden
                                                #              - li:hover > ul { display: block } //But displayed by mouseover
                                                #  - active : focus de l'élément, ou si impossible clickdown de l'élément
                                                #Autres possibles :   
                                                #  - focus
                                      jQuery UI##  - focusable|tabbable
                                                #  - target : unique element (if any) dont ID match ID de URL#ID
                                                #  - enabled/disabled : for forms
                                                #  - checked : for radio, checkbox and option
                                      jQuery UI##  - selected : same but only for <option>
                                      jQuery UI##  - input : any form control (not only <input>)
                                      jQuery UI##  - header : <h*> (not <hgroup>)
                                                #  - [in]valid : selon ELEMENT.validity.valid
                                                #  - first|last|only-child : ne désigne pas le parent, mais l'enfant
                                                #    directement (i.e. s'il est lui-même un premier enfant, etc.).
                                                #    Utiliser SELECTOR combinators pour descendance.
                                                #  - first|last|only-of-type : pareil, mais tag par tag. Ex: first-on-type
                                                #    takes if first child of its tag.
                                                #  - nth[-last]-child|of-type(NUM + NUM2) : s'il est le NUMx + NUM2 enfant de 
                                                #    son parent. Ex: 2n+1 prend les impairs. "odd" et "even" sont possibles
                                                #    sinon. Ex2: -n+3 prend si parmi trois premiers children.
                                                #  - root : <html>
                                                #  - empty : elements without child
                                      jQuery UI##  - parent : inverse
                                      jQuery UI##  - contains('STR') : un des TEXT descendants contient STR
                                      jQuery UI##  - animated : currently being animated
                                      jQuery UI##  - hidden|visible : 
                                                #      - hidden can be because of :
                                                #        - diplay: none
                                                #        - width/height == 0
                                                #        - <input type="hidden">
                                                #        - ancestor is hidden
                                                #      - during showing/hiding animation, only considered hidden when 
                                                #        starts/ends
                                      jQuery UI##  - data(STR) : has used JQ.data(STR)
                                                #  - lang(LANG) (case-insensitive)
::PSEUDOELEMENT                                 #Pseudo-élément : comme pseudo-classe, mais sélectionne partie du tag slt :
                                                #  - first-letter : can only change font, background and box model properties
                                                #  - first-line : can only change font and background properties
:not(SELECTOR)                                  #
::not(SELECTOR)                                 #


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            POSITION           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


BOX MODEL ==>                                   #Content > Padding > Border > Margin
[max-|min-|][height|width]|line-height: LENP    #  - content : actual content.
                                                #    min and max : not on table contents (max-* can be none)
padding[-top|bottom|left|right]                 #  - padding : space between content and border
border[-top|bottom|left|right]                  #  - border
margin[-top|bottom|left|right]                  #  - margin : space between border and other 
                                                #      margin are sometimes collapsed (only one margin is kept) when :
                                                #        - empty element (border+padding+border = 0) 
                                                #        - no space between top margin and top margin du parent (first child) 
                                                #          or same for bottom (last child)
                                                #        - two siblings (ex: two <p> following)
                                                #Déf for all: auto
                                                #Not on phrasing content.

box-sizing: STR                                 #Change box model, for browser compatibility (useless), e.g. what's implied
                                                #by height/width : content-box (déf), padding box or border-box.
                                                ##Ext: -moz-

INLINE VS BLOCK ==>                             #Inline-level vs Block-level :
                                                #  - inline-level position horizontally after previous content ; block-level 
                                                #    vertically
                                                #  - inline-level content pas affecté par width/height
                                                #    - content overflow possible only for block-level donc. Overflow content
                                                #      ne change pas siblings ou parents (considéré non-existant).
                                                #  - inline is by déf for phrasing content, block-level for sectionning, 
                                                #    embedded content, etc.
                                                #Types :
                                                #  - inline-level :
display: inline                                 #    - normal
display: inline-block                           #    - affecté par content width/height (comme block), mais positionned 
                                                #      horizontally (comme inline)
display: inline-table                           #    - like table, but positionned horizontally
                                                #  - block-level :
display: block                                  #    - normal
display: list-item                              #    - same, but with bullet points (for <ul>, etc.)
display: table[-[caption|cell|column|footer     #    - for <table>, etc. En dehors de table et table-caption, pas de padding 
|header][-group]]                               #      ni de margin, seulement width/height.
column-width|count: ...                         #    - like block, but divided into several columns
display: none                                   #  - removed from layout

visibility: STR                                 #Affect visibility, but not layout : visible (déf), hidden.
                                                #visibility: collapse does affect layout : same as display:none, but for table
                                                #elements, but without changing table width/height (faster)

FLOW ==>                                        #Inline : part of the normal flow. Either inline-level or block-level.
position: static                                #  - normal (déf)
position: relative                              #  - same, but with shift relative to normal position. 
                                                #    Siblings and parents stay at same position.
float: left|right                               #Floating : part of normal flow, but shifted to left/right. 
                                                #  Any following inline boxes aside the floating boxes is horizontally 
                                                #  affected up until the bottom side of the floating box.
                                                #  Always block-level.
clear: none                                     #  - non-cleared : several floating boxes are stacked horizontally.
clear: left|right|both                          #  - cleared : several floating boxes are stacked vertically. 
                                                #    - Can be stacked vertically according to opposite floats direction
                                                #    - non-float peuvent utiliser clear pour ne commencer verticalement
                                                #      qu'après les floats.
                                                #Absolute : taken out of normal flow. Often block-level.
position: absolute                              #  - relative to parent document
position: fixed                                 #  - relative to screen
                                                #"Positionned element" : relative + absolute. 
top|bottom|right|left: NUM                      #(déf: auto) Specify shift/position on positionned elements.

z-index: NUM                                    #Profondeur : Positionned > float > inline
                                                #Pour positionned :
                                                #  - comparaison z-index : -∞ (deeper) to ∞ (closer). Déf is 0.
                                                #  - comparaison est fait de sibling à sibling. Ex:
                                                #    - A, parent de B, frère de C, all absolute position.
                                                #    - z-index de A est 1, B 3, C 2
                                                #    - B sera dessous de C, grâce parent A est en-dessous de C


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        POSITION (NEW)         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


MULTI-COLUMN LAYOUT ==>                         #Can only be applied to display: *block* or *table*
                                                #column-width|count divides the content block into several columns
                                               ##Ext: -moz- et -webkit-                                        
column-width: LEN                               #Divides according to length.
column-count: UINT                              #Divides according to number of columns.
columns: WIDTH COUNT                            #Shorthand

column-gap: LEN                                 #(déf: normal, i.e. 1em)
column-rule-color: COLOR                        #
column-rule-style: STR                          #Like for border-color|style|width, but for lines between columns (déf: none
column-rule-width: VAL                          #black and 3px)
column-rule: COLOR STR VAL                      #Shorthand


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           PARAGRAPH           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


overflow[-x|y]: STR                             #Comment l'overflow content est affiché (ne change pas layout des siblings et
                                                #parents :
                                                #  - visible (déf) : dépasse
                                                #  - hidden : caché
                                                #  - auto : caché, avec scrollbar si besoin
                                                #  - scroll : caché, avec scrollbar toujours
                                                #For display: [inline-]block
word-wrap: STR                                  #Si break-word (déf: normal),fait qu'overflow est break à la lettre près.
                                                #Suprime effet d'overflow.
                                                #Renommé overflow-wrap : mettre les deux noms.
text-overflow: STR                              #Comment la troncature de l'overflow content apparaît :
                                                #  - clip : coupé au caractère prêt
                                                #  - ellipsis : pareil, mais avec "..."
                                                #For display: [inline-]block
white-space: STR                                #                        | Wrapping | No-wrapping |
                                                # -----------------------+----------+-------------+
                                                #  Whitespace collapsing |  normal  |   nowrap    |
                                                # -----------------------+----------+-------------+
                                                #       No WS collapsing | pre-wrap |     pre     |
                                                # -----------------------+----------+-------------+
                                                #pre-line : comme normal, sauf que real newline (in HTML code) are preserved.
text-align: STR                                 #Alignement horizontal du texte, parmi left, right, center and justify
                                                #For display: [inline-]block
vertical-align: VAL                             #For display: inline*, alignement par rapport à la ligne courante :
                                                #  - baseline (déf)
                                                #  - sub|super
                                                #  - middle|text-top|bottom : align top|bottom line with parent element 
                                                #    middle|top|bottom (bottom != baseline)
                                                #  - top|bottom : comme text-top|bottom, mais par rapport à ligne courante, non
                                                #    à l'élément parent
                                                #  - LENP : align at LENP above baseline du parent element
                                                #For display: table-cells :
                                                #  - baseline|top|middle|bottom : move whole cell padding box par rapport à son
                                                #    row courant
text-indent: LENP                               #Indentation du texte (first-line only)
line-height: LENP                               #Hauteur de ligne de texte. Préférer LENP à LENPem (fait même chose, mais
                                                #semble plus correcte)
letter|word-spacing: VAL                        #Espace entre lettres ou mots : normal ou LEN (can be negative)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             FONTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


@font-face { VAR:VAL... }                       #Charge une police et permet de l'utiliser comme font-family name.
                                                #VAR possibles :
                                                #  - font-family : STR qui pourra être utilisé par les font-family pour référer
                                                #    à cette police
                                                #  - src: local(STR)|URI [format(STR)]... (doit être dans même domaine)
                                                #         commencer par local(STR) pour voir si user a la police, sinon faire
                                                #         URL pour l'utiliser
                                                #         IE, et autres supportent différents formats. Faire :
                                                #         src: url("...eot") format("eot"), url("...woff") format("woff"),
                                                #         url("...ttf") format("truetype"). 
                                                #         Des sites proposent de générer cela.
                                                #         Same origin policy.
                                                #  - font-* : all of them except font-size, for selecting font variants.
                                                #  - unicode-range: URANGE.... Si police n'a pas cet URANGE, pas utilisée.
                                                #    Ne semble pas marcher.

font-size: VAL                                  #VAL possibles :
                                                #  - absolute values : medium ou [[x]x-]small|large
                                                #  - relative au parent element : larger|smaller
                                                #  - LENP
font-family: STR...                             #Police. Si plusieurs, utilise la première étant trouvée pour l'user.
                                                #STR peut être "STR" (specific police) ou generic police STR : 
                                                #sans-serif, serif, fantasy, cursive, monospace
                                                #Specific police names peut être différent de nom de fichier (le nom est
                                                #inscrit dans le fichier).

color: COLOR                                    #Text color (can't be gradient)
font-style: STR                                 #Choisit face normal ou italic (si disponible)
font-variant: STR                               #Choisit face normal ou small-caps (si disponible)
font-weight: VAL                                #Choisit face normal ou bold (si disponible). Possible aussi: bolder et 
                                                #lighter (than parent element).
                                                #Aussi NUM: 100 à 900, with 500 being normal.
text-decoration: STR                            #Can be none, underline, overline ou line-through
                                                #Can't be erased by children.
font: FONT-STYLE FONT-VARIANT FONT-WEIGHT       #Most are somewhat optional.
 FONT-SIZE LINE-HEIGHT FONT-FAMILY              #Reset font-stretch, font-kerning and font-size-adjust
text-transform: STR                             #Capitalisation parmi none (déf), lowercase, uppercase, capitalize
text-shadow: VAL...                             #Comme box-shadow, mais sans le spread LEN4 ni inset.

unicode-bidi: STR                               #Utilisation de direction: STR :
                                                #  - normal : direction n'a aucun effet
                                                #  - embed : n'a effet que pour élément
                                                #  - bidi-override : a effet pour éléments suivants également
direction: STR                                  #Direction : auto, rtl or ltr
 

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        BOX DECORATION         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


opacity: NUM                                    #Opacité de l'élément (0 à 1)
background-color: COLOR                         #Couleur de la content box.
background-image: IMAGE...                      #Always go over background-color. Always put a backup background-color in case
                                                #image can't be downloaded.
                                                #Multiple IMAGE : First IMAGE goes on top. Doing successive background-image
                                                #erase previous, not go over it. For all other background-* (except color),
                                                #multiple VAL... affect those different backgrounds.
                                                #SVG images automatically fit to container unless size or ratio is specified 
                                                #in the SVG file. If SVG looks blurry on Firefox, make it smaller then scale 
                                                #it 100 times.
background-size: VAL[ VAL2]...                  #Position VAL VAL2 (width height) de la background-image. 
                                                #If only VAL, both width and height. Peut être :
                                                #  - LENP
                                                #  - auto (déf) : keep size
                                                #  - contain : rescaled to "background-origin"-box (déf: padding-box), while 
                                                #    keeping proportion, so that one side of the image == one side of the box,
                                                #    and the other side image < other side box (is contained)
                                                #  - cover : same but the other side image > other side box (dépasse)
                                                #contain and cover remplacent both VAL et VAL2.
                                               ##Polyfills:
                                               ##  - jquery.backgroundSize.js (IE 6-8, deprecated):
                                               ##     - must use JQ.css()
                                               ##     - if JQ size changes, must manually $.refreshBackgroundDimensions(JQ)
                                               ##     - only contain|cover, no VAL2...
                                               ##     - background-position POSITION: no VAL2, only keywords or PERC
                                               ##     - no background-repeat|clip|origin|attachment|scroll
                                               ##     - no position: static
                                               ##  - background-size-polyfill (IE 8): must be done server-side
background-attachment: STR...                   #Values :
                                                #  - scrolled (déf) : normal
                                                #  - fixed : position is not according to content box but to whole viewport,
                                                #    so doesn't move while scrolling
background-repeat: VAL[ VAL2]...                #Repeating of the x-axis (VAL) and y-axis (VAL2) :
                                                #  - repeat (déf) : repeat et clip last one
                                                #  - no-repeat : don't repeat
                                                #VAL seul means VAL VAL. repeat-x and repeat-y comme VAL seule sont possibles.
background-position: POSITION...                #Position de la background-image au sein de la box (déf: top left)
background-clip: STR...                         #Clip la background-color/image selon : border-box (déf CSS), padding-box
                                                #ou content-box. 
                                                #Si border, est en dessous du border (border can be trasparent)
                                                #Clip, mais ne change pas position de la background-image (background-origin)
background-origin: STR...                       #Origine (coin supérieur gauche) de la première image (ou image de référence
                                                #si repeat est coin supérieur gauche de la border-box, content-box ou
                                                #padding-box (déf).
background: B-COLOR B-IMAGE B-POSITION
B-REPEAT B-ATTACHMENT B-CLIP...

border-left|top|bottom|right-color: COLOR
border-left|top|bottom|right-style: STR         #Parmi :
                                                #  - none (déf)|display : aucun
                                                #  - solid : plain color
                                                #  - dotted
                                                #  - dashed
                                                #  - double : two plain lines
                                                #  - outset/inset : simple embossed/carved
                                                #  - ridge/groove : advanced embossed/carved
border-left|top|bottom|right-width: VAL         #Can be LEN or STR : thin, medium (déf) or thick
border-bottom|top-left|right-radius:LENP[ LENP2]#Rounded corner : LENP horiz., LENP2 vertical. Si seulement LENP, LENP2 pareil.
                                                #Don't work with border-style: dotted or dashed
border-left|top|bottom|right: B-COLOR B-STYLE 
B-WIDTH                                         #Shorthand properties (following too)
border: B-COLOR B-STYLE B-WIDTH
border-color: COLOR...
border-style: STR...
border-width: VAL...
border-radius: LENP...[ / LENP2...]             #LENP sont les horiz. et LENP2 les vertic.

outline-color: COLOR                            #Outline are just like borders, except :
outline-style: STR                              #  - they are just outside borders 
outline-width: VAL                              #  - they don't take space (can even go over margin box).
outline: O-COLOR O-STYLE O-WIDTH                #  - they may be non-rectangular if some inline content is bigger than other
                                                #    inline content

box-shadow: VAL...                              #Shadow inside/outside of the margin box. Can be :
                                                #  - none (déf)
                                                #  - [inset] VAL : inside instead of outside
                                                #  - LEN LEN2 [LEN3[ LEN4]][ COLOR] : 
                                                #     - LEN LEN2 are horiz/vertic. shift.
                                                #     - LEN3 is the blur radius (déf: 0). 
                                                #     - LEN4 is size compared to element (déf: 0) (can be negative). 
                                                #If multiple VAL, multiple shadows.

clip: SHAPE                                     #Clip an absolute positionned element (dont borders)
                                                #Coordonnées sont local à l'élément.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            TABLES             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


table-layout: STR                               #For display:[inline-]table, whether cells adjust automatically to content
                                                #(auto (déf)) or are according to first row cells width or to columns width
                                                #(fixed).
border-collapse: STR                            #For display:[inline-]table, whether cell borders are merged (collapse) or not 
                                                #(separate (déf)).
                                                #Si collapse, border-radius ne marche pas.
border-spacing: LEN [LEN2]                      #For border-collapse: separate, horiz. (LEN) / vertic. (LEN2) space between
                                                #cells (déf: 0)
empty-cells: STR                                #For display: table-cell, whether empty cells have borders and backgrounds 
                                                #(show (déf) or hide)
caption-side: STR                               #Whether a display: table-caption will be on top (déf) or bottom.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             LISTS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


                                                #Following are for display: list-item
list-style-type: STR                            #Bullet point image, parmi : none, disc (déf), square, decimal[-leading-zero],
                                                #lower|upper-roman|alpha|latin (alpha and latin are same), lower-greek,
                                                #armenian, georgian
list-style-image: IMAGE                         #Bullet point image
list-style-position: STR                        #Position du bullet-point : dans la box courante (inside) ou juste en
                                                #dehors (outside (déf))
list-style : LS-IMAGE LS-POSITION LS-TYPE       

                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:   TRANSFORM AND ANIMATIONS    :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


EXTENSION ==>                                  ##-webkit- for all transform-related. Chrome works bad for 3D : 
                                                #  - only orthogonal perspective (perspective* doesn't work)
                                                #  - translateZ : l'axe Z est toujours le même, qu'importe la rotation
transform: FUNC...                              #Modifie rendered element (without changing flow/layout) :
                                                #  - translate[X|Y|Z|3d](LENP[, LENP2[, LENP3]]) : 
                                                #      If none of X|Y|Z, only LENP
                                                #  - rotate[X|Y|Z|3d]([3 NUM, ]ANGLE) (déf: Z) : 
                                                #      3d fixe l'axe de rotation en fonction du ratio X/Y/Z de NUM/NUM2/NUM3
                                                #  - skewX|Y(ANGLE[, ANGLE2])
                                                #  - scale[X|Y|Z|3d](NUM[, NUM2[, NUM3]]) :
                                                #      If none of X|Y|Z, duplication de NUM
                                                #      scaleZ semble seulement multiplier translateZ
                                                #  - matrix[3d](6|12 NUM) : matrix like OpenGL
                                                #  - perspective(LEN) : 
                                                #      Doit venir en premier, change perspective lors rotation.
                                                #Devient display: fixed durant transformation.
transform-origin: VAL[ VAL2[ VAL3]]             #Centre de l'opération effectué par transform, hors perspective (déf: center)
                                                #VAL peut être LENP|top|bottom|left|right|center. VAL est X, VAL2 Y, VAL3 Z.
perspective-origin: VAL[ VAL2[ VAL3]]           #Pareil pour transform: perspective. Affecte seulement éléments contenus.
perspective: LEN                                #Comme transform: perspective(LEN), mais pour éléments contenus.
backface-visibility: STR                        #visible or hidden pour la face de derrière (déf: visible)

EXTENSION ==>                                  ##-webkit- for all transition-related (including webkitTransitionEnd)
transition-property: STR...                     #Property to transit (déf: all).
                                                #The transition settings are specified on the "normal"/start rule, not the 
                                                #"ending" rule. The transition moves back when "ending" rule doesn't apply
                                                #anymore.
                                                #All properties based on numbers (including SHAPE/RECT, FUNC(NUM...), COLOR,
                                                #but excluding TIME) and plain colors, can be transited. Exceptions :
                                                #   - background-repeat|size|position, font-stretch, text-shadow, grid-*, 
                                                #     border-*color, border-spacing
                                                #Invisible elements can't be transited. Wait for elements to be ready on the
                                                #document before transition.
                                                #Can specify several properties : then each transition-duration|delay|timing
                                                #apply, or repeat if only one.
transition-duration: TIME...                    #Time of transition (déf: 0s)
transition-timing-function: FUNC...             #Evolution of the transition (slow at the end, etc.). Can be :
                                                #  - steps(NUM[, start|end]) : if start (déf: end), first step occurs 
                                                #    immediately
                                                #  - cubic-bezier(4 NUM) : bezier curve, where start handler has position
                                                #    NUM1,NUM2 et end handler NUM3,NUM4 (coordonnées 0 à 1)
                                                #    For jQuery UI Sine, Quad, Cubic, Quart, Circ, Expo, Back and Quint
                                                #    (but not Elastic nor Bounce) to cubic-bezier, see http://easings.net/
                                                #  - ease / ease-in-out : slow begin/end
                                                #  - ease-in|out: slow begin|end
                                                #  - linear
                                                #  - step-start|end : like steps(1, start|end)
transition-delay: TIME...                       #Time for transition to start (déf: 0s)
transition: PRO DURATION FUNC DELAY...          #Shorthand

TransitionEvent                                 #Readonly.
                                               ##Ext: Webkit
TRANSITIONEVENT.propertyName
TRANSITIONEVENT.elapsedTime                     #Does not take transition-delay into account
ALL.ontransitionend = FUNC(TRANSITIONEVENT)     #When a CSS transition ends.
                                               ##Ext: webkitTransitionEnd

EXTENSION ==>                                  ##-webkit- for all animation-related (including @-webkit-keyframes and 
                                               ##webkitTransitionEnd|*)
ANIMATIONS ==>                                  #Like transition, but sequence of them. Is launched as soon as the CSS text
                                                #is read (so it should be filtered by a selector).
                                                #Can also pause/itère/reverse.
@keyframes STR {                                #Une animation dont le name est STR.
  PERC... { ... }...                            #Les percentages ("keyframe") vont de 0% (can also be "from") to 100% (can 
}                                               #also be "to").
                                                #For each keyframe, apply the rule { ... }. Properties mentioned in one 
                                                #keyframe but not another are assumed to have the same value as before the
animation-name: STR...                          #Le STR de @keyframes à déclencher. 
                                                #Les propriétés animation-* ne doivent pas être dans la @keyframes, sauf 
                                                #animation-timing-function, qui peut être dehors (ensemble de l'animation) ou
                                                #dedans (une seule keyframe).
                                                #Les priorités à animer sont mêmes que pour transitions.
                                                #Can be several animation, like transitions.
animation-duration: TIME...                     #
animation-timing-function: FUNC...              #
animation-delay: TIME...                        #Like transitions, but for the whole animation.

animation-iteration-count: UINT...              #Nombre d'itérations (déf 1). Can be infinite.
animation-direction: STR...                     #Passage d'une itération à l'autre :
                                                #  - normal (déf): saut direct de 100% à 0%
                                                #  - alternate: reste à 0%/100%, et va dans sens opposé
animation-fill-mode: STR...                     #Par défaut, on saute directement de la position avant animation à la keyframe
                                                #0%/100%. Mais on peut :
                                                #  - none (déf)
                                                #  - forwards: la position reste à dernière keyframe après animation
                                                #  - backwards: position avant animation devient celle de première keyframe
                                                #  - both: forwards+backwards
animation-play-state: STR...                    #Défaut est running, mais on peut mettre paused (via Javascript).
animation: NAME DURATION FUNC DELAY UINT DIR    #
  FILL STATE                                    #Shorthand

AnimationEvent                                  #Readonly.
                                               ##Ext: Webkit
ANIMATIONEVENT.propertyName
ANIMATIONEVENT.elapsedTime                      #Does not take animation-delay into account
ALL.onanimationstart|end = FUNC(ANIMATIONEVENT) #Quand CSS animation starts/ends.
ALL.onanimationiteration = FUNC(ANIMATIONEVENT) #Quand CSS animation ends an interation (except the last one).
                                               ##Ext: webkitAnimationStart|End|Iteration


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            OTHERS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/

cursor: VAL...                                  #Image du cursor. 
                                                #Can be multiple so if first fails, second is used, except if first fails 
                                                #because of URI NUM NUM2 syntax not supported (IE). In last case, put 
                                                #"cursor: VAL" fallback before another "cursor: URI NUM NUM2".
                                                #VAL possible :
                                                #  - STR parmi (see MDN for pictures) :
                                                #    - auto, crosshair, default, move, text, wait, help, pointer
                                                #      n[ew]|s[ew]|w|e-resize, progress, all-scroll, cell, col|row-resize, 
                                                #      copy, no-drop, not-allowed, vertical-text, ew|ns|nesw|nwse-resize,
                                                #      alias
                                                #    - not FF/Chrome (Windows) : context-menu
                                                #    - not Opera : none
                                                #  - URI [NUM NUM2]: NUM NUM2 est le hotspot du cursor en pixel (coord. local)
                                                #    Not supported by Opera. .cur for all. Keep size 32x32px or 16x16

content: VAL[ VAL2]...                          #Ajoute du contenu. Le selector doit être SELECTOR::before|after, et ajoute
                                                #avant/après cet élément ce qui est déclaré :
                                                #  - none
                                                #  - STR
                                                #  - IMAGE
                                                #  - attr(VAR[, STR]) : renvoie VAL d'attribut VAR, ou STR si absent (déf: "")
                                                #  - counter[s](...) : cf counter-*
                                                #  - open|close-quote : cf quotes
                                                #  - no-open|close-quote : don't insert quaotes, put increment quote level
                                                #Le SELECTOR:before|after peut être suivi de n'importe quel autre property.
quotes: VAL                                     #Set values of open-quote et close-quote selon :
                                                #  - none (déf)
                                                #  - [STR STR2]... : si plusieurs définit root level quotes, first child
                                                #    level quotes, etc.
                                                #Not for Safari.
counter-reset: VAR[ NUM]...                     #Counters are NUM variables, utilisées pour numéro de chapitre via
counter-increment: VAR[ NUM]...                 #content: counter[s](...).
                                                #Il faut d'abord initialiser à NUM via counter-reset (peut réinitialiser 
                                                #aussi), en général dans un ul/ol
                                                #counter-increment ajoute NUM, en général mis dans un li:before.
                                                #Substitution :
                                                #  - counter(VAR[, STR]) : remplacé par nombre. STR est un list-style-type.
                                                #  - counters(VAR, STR2[, STR]) : remplacé par nombre suivi de STR

page-break-after|before: STR                    #When browser/application defines page breaks, controls whether they are
                                                #auto (déf) or always (always page break after this element)
                                                #For display: [inline-]block. Media query doit accepter "paged".
page-break-inside: STR                          #Pareil mais inside l'élement : auto (déf) ou avoid (jamais au milieu de cet
                                                #élément)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         NOT SUPPORTED         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


SUPPORTED BY IE10 BUT NOT OTHERS ==>            #Opera 12 :
                                                #  - transition & animation of text-shadow, grid-*, border-*color, 
                                                #    background-position
                                                #Opera 15 :
                                                #  - hyphens, hyphenate* : break word at end of line, according to languages
                                                #  - calc()
                                                #Safari 6 :
                                                #  - outline-color: invert
                                                #  - orphans widows
                                                #  - font-feature-settings
                                                #  - animation-direction: [alternate-]reverse
                                                #  - flexbox layout
                                                #  - font-stretch
                                                #Safari 7 :
                                                #  - grid layout
                                                #  - LENvh, LENvw, LENvmin, LENvmax
                                                #  - extension+different syntax on gradients
                                                #Firefox 22 :
                                                #  - transition & animation of border-spacing
                                                #  - CSS regions :
                                                #    - @region, flow-into, flow-from, region-overflow, wrap* shape*
                                                #  - background-attachment: local
                                                #  - background-repeat: round/space
                                                #  - display: run-in
                                                #  - CSS device adapt :
                                                #    - @viewport, [min|max-]width/height (mobile phones), *zoom, orientation,
                                                #      resolution
                                                #  - @page, @page:first|left|right, marks, box-decoration-break, 
                                                #    page-break-before|after: avoid|left|right
                                                #  - column-span, break-after|before|inside
                                                #Chrome 28 :
                                                #  - perspective is buggy (cf doc). Might depend on GPU.
                                                #  - text-shadow : LEN4 (spread)
                                                #  - touch events : touch-action
                                                #  - column-fill
                                                #  - table selector CSS4 : 
                                                #     - :nth-[last-]column, :column, || selector
                                                #  - word-break
                                                #  - writing-mode 
                                                #  - text-justify
                                                #  - text-underline-position

NOT SUPPORTED AT LEAST BY IE10 ==>              #  - transition & animation : 
                                                #    - properties based on gradients
                                                #    - animation/transition of background-size, font-stretch
                                                #  - transition : 
                                                #    - TRANSITIONEVENT.pseudoElement
                                                #  - transform :
                                                #    - transform-style: preserve-3d
                                                #  - resize : let users resize elements
                                                #  - intrisic/extrinsic sizing :
                                                #    - max|min-height|width : fill-available
                                                #    - max|min-height|width + width : fit-content, min|max-content. 
                                                #      Works on <table>
                                                #  - filter() : Photoshop-like filters for pictures
                                                #  - mask*, clip* : SVG masks
                                                #  - :scope : apply CSS to specific element and children
                                                #  - @supports : feature support testing selector
                                                #  - object-fit|contain
                                                #  - SVG fonts
                                                #  - :in|out-of-range, :default, :read-only|write 
                                                #  - SELECTOR! > SELECTOR2 
                                                #  - :local-link, :any-link
                                                #  - :matches, :nth[-last]-match
                                                #  - icon
                                                #  - image-orientation, image-*
                                                #  - cursor: zoom-in|out
                                                #  - text-overflow: STR ou VAL VAL2
                                                #  - nav-down|up|left|right|index
                                                #  - attr()
                                                #  - toggle(VAL...)
                                                #  - hanging-punctuation
                                                #  - ::value, ::choices
                                                #  - ::repeatitem|index
                                                #  - border-image*
                                                #  - font-size-adjust
                                                #  - text-align-last
                                                #  - size
                                                #  - outline-offset, outline-radius
                                                #  - appearance
                                                #  - speech CSS : cue*, mark*, pause*, rest*, voice*, speak, phonemes, 
                                                #    interpret-as, volume, play-during, azimuth, elevation, 
                                                #    @phonetic-alphabet, etc.
                                                #  - initial
                                                #  - text-orientation
                                                #  - text-align: start|end, match-parent, STR
                                                #  - width: available, border|content-box
                                                #  - text-indent: hanging, each-line
                                                #  - SELECTOR /.../ SELECTOR2
                                                #  - :placeholder-shown, :user-error
                                                #  - :blank
                                                #  - ::marker
                                                #  - :dir(DIR)
                                                #  - :past, :future, :current
                                                #  - max-lines
                                                #  - tab-size
                                                #  - text-combine
                                                #  - mix-blend-mode, isolation, background-blend-mode
                                                #  - font-language-override, font-variant-*, font-kerning
                                                #    text-rendering, font-synthesis,
                                                #    unicode-range, text-emphasis*
                                                #  - @counter-style
                                                #  - @top-left (et autres)
                                                #  - @document
                                                #  - text-decoration-*
                                                #  - var()
                                                #  - cross-fade()
                                                #  - image-rect()
                                                #  - element()
