
                        
   GARBAGE_COLLECTION   
                        


Virtual memory:
  - the memory addresses shown to a program are not the hardware one, but an abstraction of it
  - abstraction allows:
     - using several hardware sources, "paging":
        - i.e. main memory (e.g. RAM) first, auxiliary (e.g. disk) then
           - paging|swapping: moving page between main memory to|from auxiliary
        - [memory|virtual] page: block of virtual memory
        - page frame: block of physical memory
        - page table: map between pages and their corresponding page frames
           - page table entry: entry in page table for a given page
           - multi-level paging: paging the page table
           - TLB ("Translation Lookaside Buffer"): cache of the page table
        - fragmentation:
           - pages not fully used, i.e. bigger than their content
        - page size:
           - usually 4KB
           - bigger page size:
              - allow page table faster lookup because: smaller page table, and more TLB hits
              - increase fragmentation
              - work best with bigger memory objects, least with small memory objects
           - "huge page size": special mode with very big page size, e.g. when working with huge files
     - sharing same hardware addresses to several programs
  - handled by OS, helped by MMU (Memory Management Unit)

Memory management:
  - [de]allocating memory for variables values
  - can be:
     - manual: more verbose and error-prone, but more resource-efficient
     - automatic (garbage collection): higher-level and simpler, but costs resources

Garbage:
  - semantic: variable that cannot be used, e.g. out of scope
  - syntactic: variable that will not be used, e.g. program do not refer to it anymore

Root object: top-level variable that can be still referenced (e.g. local scope + global scope)

Tracing garbage collection:
  - remove any variable not "reacheable", i.e. not a root object or one of its descendant
