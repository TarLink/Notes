
                
   KUBERNETES   
                



To do:
  - fix each option: fit in columns wide, no =, identation, value

See???:
  - http://kubernetes.io/docs/user-guide/kubectl-conventions/
  - http://kubernetes.io/docs/user-guide/docker-cli-to-kubectl/
  - Kubernetes Components at http://kubernetes.io/docs/reference/

BOOL: not specified???


VERSION ==>                                       #1.4.4

ALPHA ==>                                         #The following is not documented because only in alpha: PetSet, StorageClass, PodSecurityContext


kubeadm                                           #Easily bootstrap a secure Kubernetes cluster

kubeadm init                                      #Run this in order to set up the Kubernetes master
--api-advertise-addresses IP                      #The IP addresses to advertise, in case autodetection fails
--api-external-dns-names NAME,...                 #The DNS names to advertise, in case you have configured them yourself
--api-port NUM                                    #Port for API to bind to (default 6443)
--cloud-provider STR                              #Enable cloud provider features (external load-balancers, storage, etc), e.g. "gce"
--config FILE                                     #Path to kubeadm config file
--discovery-port NUM                              #Port for JWS discovery service to bind to (default 9898)
--pod-network-cidr CIDR                           #Specify range of IP addresses for the pod network; if set, the control plane will automatically allocate CIDRs for every node
--service-cidr CIDR                               #Use alternative range of IP address for service VIPs (default "10.96.0.0/12")
--service-dns-domain NAME                         #Use alternative domain for services, e.g. "myorg.internal" (default "cluster.local")
--token STR                                       #Shared secret used to secure cluster bootstrap; if none is provided, one will be generated for you
--use-kubernetes-version STR                      #Choose a specific Kubernetes version for the control plane (default "v1.4.4")

kubeadm join                                      #Run this on any machine you wish to join an existing cluster
--config FILE                     
--api-port NUM                    
--discovery-port NUM              
--token STR                                       #See kubeadm init

kubeadm reset                                     #Run this to revert any changes made to this host by 'kubeadm init' or 'kubeadm join'.

kubeadm init|join|reset
--skip-preflight-checks                           #Skip preflight checks normally run before modifying the system

kubeadm version                                   #Print the version of kubeadm





kubelet|kubectl
--kubeconfig FILE                                 #Path to a kubeconfig file, specifying how to connect to the API server. 
                                                  #--api-servers will be used for the location unless --require-kubeconfig is set. (default "/var/lib/kubelet/kubeconfig")
--alsologtostderr BOOL                            #Log to standard error as well as files
--log-backtrace-at NUM                            #When logging hits line file:N, emit a stack trace (default :0)
--log-dir DIR                                     #If non-empty, write log files in this directory
--log-flush-frequency DUR                         #Maximum number of seconds between log flushes (default 5s)
--logtostderr BOOL                                #Log to standard error instead of files (default true)
--stderrthreshold NUM                             #Logs at or above this threshold go to stderr (default 2)
--v value                                         #Log level for V logs
--vmodule STR                                     #Comma-separated list of pattern=N settings for file-filtered logging

kubelet                                           #Server
                                                  #The kubelet is the primary “node agent” that runs on each node. 
                                                  #The kubelet works in terms of a PodSpec. 
                                                  #A PodSpec is a YAML or JSON object that describes a pod. 
                                                  #The kubelet takes a set of PodSpecs that are provided through various mechanisms (primarily through the apiserver)
                                                  #and ensures that the containers described in those PodSpecs are running and healthy. 
                                                  #The kubelet doesn’t manage containers which were not created by Kubernetes.
                                                  #Other than from an PodSpec from the apiserver, there are three ways that a container manifest can be provided to the Kubelet.
                                                  #File: Path passed as a flag on the command line. This file is rechecked every 20 seconds (configurable with a flag).
                                                  #HTTP endpoint: HTTP endpoint passed as a parameter on the command line. This endpoint is checked every 20 seconds (also configurable with a flag).
                                                  #HTTP server: The kubelet can also listen for HTTP and respond to a simple API (underspec’d currently) to submit a new manifest.
--address IP                                      #The IP address for the Kubelet to serve on (set to 0.0.0.0 for all interfaces) (default 0.0.0.0)
--allow-privileged                                #If true, allow containers to request privileged mode. [default=false]
--application-metrics-count-limit NUM             #Max number of application metrics to store (per container) (default 100)
--boot-id-file FILE                               #Comma-separated list of files to check for boot-id. Use the first one that exists. (default "/proc/sys/kernel/random/boot_id")
--cadvisor-port NUM                               #The port of the localhost cAdvisor endpoint (default 4194)
--cert-dir DIR                                    #The directory where the TLS certs are located (by default /var/run/kubernetes). 
                                                  #If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored. (default "/var/run/kubernetes")
--cgroup-root STR                                 #Optional root cgroup to use for pods. 
                                                  #This is handled by the container runtime on a best effort basis. Default: '', which means use the container runtime default.
--chaos-chance NUM                                #If > 0.0, introduce random client errors and latency. Intended for testing. [default=0.0]
--cloud-config FILE                               #The path to the cloud provider configuration file.  Empty string for no configuration file.
--cloud-provider STR                              #The provider for cloud services. By default, kubelet will attempt to auto-detect the cloud provider. 
                                                  #Specify empty string for running with no cloud provider. [default=auto-detect] (default "auto-detect")
--cluster-dns IP                                  #IP address for a cluster DNS server.  This value is used for containers' DNS server in case of Pods with "dnsPolicy=ClusterFirst"
--cluster-domain NAME                             #Domain for this cluster.  If set, kubelet will configure all containers to search this domain in addition to the host's search domains
--cni-bin-dir DIR                                 #<Warning: alpha feature> The full path of the directory in which to search for CNI plugin binaries. Default: /opt/cni/bin
--cni-conf-dir DIR                                #<Warning: alpha feature> The full path of the directory in which to search for CNI config files. Default: /etc/cni/net.d
--container-hints FILE                            #Location of the container hints file (default "/etc/cadvisor/container_hints.json")
--container-runtime STR                           #The container runtime to use. Possible values: 'docker', 'rkt'. Default: 'docker'. (default "docker")
--container-runtime-endpoint FILE                 #The unix socket endpoint of remote runtime service. 
                                                  #If not empty, this option will override --container-runtime. This is an experimental feature. Intended for testing only.
--containerized                                   #Experimental support for running kubelet in a container.  Intended for testing. [default=false]
--cpu-cfs-quota                                   #Enable CPU CFS quota enforcement for containers that specify CPU limits (default true)
--docker HOST                                     #Docker endpoint (default "unix:///var/run/docker.sock")
--docker-endpoint HOST                            #Use this for the docker endpoint to communicate with (default "unix:///var/run/docker.sock")
--docker-env-metadata-whitelist ENVVAR,...        #A comma-separated list of environment variable keys that needs to be collected for docker containers
--docker-exec-handler STR                         #Handler to use when executing a command in a container. Valid values are 'native' and 'nsenter'. Defaults to 'native'. (default "native")
--docker-only BOOL                                #Only report docker containers in addition to root stats
--enable-controller-attach-detach                 #Enables the Attach/Detach controller to manage attachment/detachment of volumes scheduled to this node, 
                                                  #and disables kubelet from executing any attach/detach operations (default true)
--enable-custom-metrics                           #Support for gathering custom metrics.
--enable-debugging-handlers                       #Enables server endpoints for log collection and local running of containers and commands (default true)
--enable-load-reader BOOL                         #Whether to enable cpu load reader
--enable-server                                   #Enable the Kubelet's server (default true)
--event-burst NUM                                 #Maximum size of a bursty event records, temporarily allows event records to burst to this number, while still not exceeding event-qps. 
                                                  #Only used if --event-qps > 0 (default 10)
--event-qps NUM                                   #If > 0, limit event creations per second to this value. If 0, unlimited. (default 5)
--event-storage-age-                              #Max length of time for which to store events (per type). 
 limit TYPE=DUR,...                               #Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is a duration. 
                                                  #Default is applied to all non-specified event types (default "default=0")
--event-storage-event-                            #Max number of events to store (per type). 
 limit TYPE=NUM,...                               #Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is an integer. 
                                                  #Default is applied to all non-specified event types (default "default=0")
--eviction-hard STR                               #A set of eviction thresholds (e.g. memory.available<1Gi) that if met would trigger a pod eviction. (default "memory.available<100Mi")
--eviction-max-pod-grace-period NUM               #Maximum allowed grace period (in seconds) to use when terminating pods in response to a soft eviction threshold being met.  
                                                  #If negative, defer to pod specified value.
--eviction-minimum-reclaim STR                    #A set of minimum reclaims (e.g. imagefs.available=2Gi) that describes the minimum amount of resource the kubelet will reclaim 
                                                  #when performing a pod eviction if that resource is under pressure.
--eviction-pressure-transition-period DUR         #Duration for which the kubelet has to wait before transitioning out of an eviction pressure condition. (default 5m0s)
--eviction-soft STR                               #A set of eviction thresholds (e.g. memory.available<1.5Gi) that if met over a corresponding grace period would trigger a pod eviction.
--eviction-soft-grace-period STR                  #A set of eviction grace periods (e.g. memory.available=1m30s) that correspond to how long a soft eviction threshold must hold before triggering a pod eviction.
--exit-on-lock-contention                         #Whether kubelet should exit upon lock-file contention.
--experimental-allowed-unsafe-sysctls STR,...     #Comma-separated whitelist of unsafe sysctls or unsafe sysctl patterns (ending in *). Use these at your own risk. (default [])
--experimental-bootstrap-kubeconfig FILE          #<Warning: Experimental feature> Path to a kubeconfig file that will be used to get client certificate for kubelet. 
                                                  #If the file specified by --kubeconfig does not exist, the bootstrap kubeconfig is used to request a client certificate from the API server. 
                                                  #On success, a kubeconfig file referencing the generated key and obtained certificate is written to the path specified by --kubeconfig. 
                                                  #The certificate and key file will be stored in the directory pointed by --cert-dir.
--experimental-nvidia-gpus 0|1                    #Number of NVIDIA GPU devices on this node. Only 0 (default) and 1 are currently supported.
--feature-gates VAR=VAL,...                       #A set of key=value pairs that describe feature gates for alpha/experimental features. Options are:
                                                  #  - ha=true|false (ALPHA - default=false)
                                                  #  - xtTrafficLocalEndpoints=true|false (ALPHA - default=false)
                                                  #  - or=true|false (BETA - default=true)
                                                  #  - cKubeletConfig=true|false (ALPHA - default=false)
                                                  #  - cVolumeProvisioning=true|false (ALPHA - default=true)
--file-check-frequency DUR                        #Duration between checking config files for new data (default 20s)
--global-housekeeping-interval DUR                #Interval between global housekeepings (default 1m0s)
--google-json-key STR                             #The Google Cloud Platform Service Account JSON Key to use for authentication.
--hairpin-mode STR                                #How should the kubelet setup hairpin NAT. This allows endpoints of a Service to loadbalance back to themselves if they should try to access their own Service. 
                                                  #Valid values are "promiscuous-bridge", "hairpin-veth" and "none". (default "promiscuous-bridge")
--healthz-bind-address IP                         #The IP address for the healthz server to serve on, defaulting to 127.0.0.1 (set to 0.0.0.0 for all interfaces) (default 127.0.0.1)
--healthz-port NUM                                #The port of the localhost healthz endpoint (default 10248)
--host-ipc-sources STR,...                        #Comma-separated list of sources from which the Kubelet allows pods to use the host ipc namespace. [default="*"] (default [*])
--host-network-sources STR,...                    #Comma-separated list of sources from which the Kubelet allows pods to use of host network. [default="*"] (default [*])
--host-pid-sources STR,...                        #Comma-separated list of sources from which the Kubelet allows pods to use the host pid namespace. [default="*"] (default [*])
--hostname-override NAME                          #If non-empty, will use this string as identification instead of the actual hostname.
--housekeeping-interval DUR                       #Interval between container housekeepings (default 10s)
--http-check-frequency DUR                        #Duration between checking http for new data (default 20s)
--image-gc-high-threshold NUM                     #The percent of disk usage after which image garbage collection is always run. Default: 90% (default 90)
--image-gc-low-threshold NUM                      #The percent of disk usage before which image garbage collection is never run. Lowest disk usage to garbage collect to. Default: 80% (default 80)
--image-service-endpoint FILE                     #The unix socket endpoint of remote image service. If not specified, it will be the same with container-runtime-endpoint by default. 
                                                  #This is an experimental feature. Intended for testing only.
--iptables-drop-bit 0-31                          #The bit of the fwmark space to mark packets for dropping. Must be within the range [0, 31]. (default 15)
--iptables-masquerade-bit 0-31                    #The bit of the fwmark space to mark packets for SNAT. Must be within the range [0, 31].
                                                  #Please match this parameter with corresponding parameter in kube-proxy. (default 14)
--kube-api-burst NUM                              #Burst to use while talking with kubernetes apiserver (default 10)
--kube-api-content-type STR                       #Content type of requests sent to apiserver. (default "application/vnd.kubernetes.protobuf")
--kube-api-qps NUM                                #QPS to use while talking with kubernetes apiserver (default 5)
--kube-reserved RESOURCE=QUANT,...                #A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. 
                                                  #Currently only cpu and memory are supported. See http://releases.k8s.io/HEAD/docs/user-guide/compute-resources.md for more detail. [default=none]
--kubelet-cgroups STR                             #Optional absolute name of cgroups to create and run the Kubelet in.
--lock-file FILE                                  #<Warning: Alpha feature> The path to file for kubelet to use as a lock file.
--log-cadvisor-usage BOOL                         #Whether to log the usage of the cAdvisor container
--low-diskspace-threshold-mb NUM                  #The absolute free disk space, in MB, to maintain. When disk space falls below this threshold, new pods would be rejected. Default: 256
--machine-id-file FILE,...                        #Comma-separated list of files to check for machine-id. Use the first one that exists. (default "/etc/machine-id,/var/lib/dbus/machine-id")
--make-iptables-util-chains                       #If true, kubelet will ensure iptables utility rules are present on host. (default true)
--manifest-url URL                                #URL for accessing the container manifest
--manifest-url-header STR                         #HTTP header to use when accessing the manifest URL, with the key separated from the value with a ':', as in 'key:value'
--master-service-namespace STR                    #The namespace from which the kubernetes master services should be injected into pods (default "default")
--max-open-files NUM                              #Number of files that can be opened by Kubelet process. [default=1000000] (default 1000000)
--max-pods NUM                                    #Number of Pods that can run on this Kubelet. (default 110)
--minimum-image-ttl-duration DUR                  #Minimum age for an unused image before it is garbage collected.  Examples: '300ms', '10s' or '2h45m'. Default: '2m'
--network-plugin STR                              #<Warning: alpha feature> The name of the network plugin to be invoked for various events in kubelet/pod lifecycle
--network-plugin-dir DIR                          #<Warning: alpha feature> The full path of the directory in which to search for network plugins or CNI config
--network-plugin-mtu NUM                          #<Warning: alpha feature> The MTU to be passed to the network plugin, to override the default. Set to 0 to use the default 1460 MTU.
--node-ip IP                                      #IP address of the node. If set, kubelet will use this IP address for the node
--node-labels VAR=VAL,...                         #<Warning: alpha feature> Labels to add when registering the node in the cluster.  Labels must be key=value pairs separated by ','.
--node-status-update-frequency DUR                #Specifies how often kubelet posts node status to master. 
                                                  #Note: be cautious when changing the constant, it must work with nodeMonitorGracePeriod in nodecontroller. Default: 10s (default 10s)
--non-masquerade-cidr CIRD                        #Traffic to IPs outside this range will use IP masquerade. (default "10.0.0.0/8")
--oom-score-adj -1000-1000                        #The oom-score-adj value for kubelet process. Values must be within the range [-1000, 1000] (default -999)
--outofdisk-transition-frequency DUR              #Duration for which the kubelet has to wait before transitioning out of out-of-disk node condition status. Default: 5m0s (default 5m0s)
--pod-cidr CIDR                                   #The CIDR to use for pod IP addresses, only used in standalone mode.  In cluster mode, this is obtained from the master.
--pod-infra-container-image IMAGE                 #The image whose network/ipc namespaces containers in each pod will use. (default "gcr.io/google_containers/pause-amd64:3.0")
--pod-manifest-path FILE                          #Path to to the directory containing pod manifest files to run, or the path to a single pod manifest file.
--pods-per-core NUM                               #Number of Pods per core that can run on this Kubelet. 
                                                  #The total number of Pods on this Kubelet cannot exceed max-pods, 
                                                  #so max-pods will be used if this calculation results in a larger number of Pods allowed on the Kubelet. 
                                                  #A value of 0 disables this limit.
--port NUM                                        #The port for the Kubelet to serve on. (default 10250)
--protect-kernel-defaults                         #Default kubelet behaviour for kernel tuning. If set, kubelet errors if any of kernel tunables is different than kubelet defaults.
--read-only-port NUM                              #The read-only port for the Kubelet to serve on with no authentication/authorization (set to 0 to disable) (default 10255)
--really-crash-for-testing                        #If true, when panics occur crash. Intended for testing.
--reconcile-cidr                                  #Reconcile node CIDR with the CIDR specified by the API server. No-op if register-node or configure-cbr0 is false. [default=true] (default true)
--register-node                                   #Register the node with the apiserver (defaults to true if --api-servers is set) (default true)
--register-schedulable                            #Register the node as schedulable. No-op if register-node is false. [default=true] (default true)
--registry-burst NUM                              #Maximum size of a bursty pulls, temporarily allows pulls to burst to this number, while still not exceeding registry-qps.
                                                  #Only used if --registry-qps > 0 (default 10)
--registry-qps NUM                                #If > 0, limit registry pull QPS to this value.  If 0, unlimited. [default=5.0] (default 5)
--require-kubeconfig                              #If true the Kubelet will exit if there are configuration errors, 
                                                  #and will ignore the value of --api-servers in favor of the server defined in the kubeconfig file.
--resolv-conf FILE                                #Resolver configuration file used as the basis for the container DNS resolution configuration. (default "/etc/resolv.conf")
--rkt-api-endpoint URI                            #The endpoint of the rkt API service to communicate with. Only used if --container-runtime 'rkt'. (default "localhost:15441")
--rkt-path FILE                                   #Path of rkt binary. Leave empty to use the first rkt in $PATH.  Only used if --container-runtime 'rkt'.
--root-dir DIR                                    #Directory path for managing kubelet files (volume mounts,etc). (default "/var/lib/kubelet")
--runonce                                         #If true, exit after spawning pods from local manifests or remote urls. Exclusive with --api-servers, and --enable-server
--runtime-cgroups STR                             #Optional absolute name of cgroups to create and run the runtime in.
--runtime-request-timeout DUR                     #Timeout of all runtime requests except long running request - pull, logs, exec and attach. 
                                                  #When timeout exceeded, kubelet will cancel the request, throw out an error and retry later. Default: 2m0s (default 2m0s)
--seccomp-profile-root DIR                        #Directory path for seccomp profiles.
--serialize-image-pulls                           #Pull images one at a time. We recommend *not* changing the default value on nodes that run docker daemon with version < 1.9 or an Aufs storage backend. 
                                                  #Issue #10959 has more details. [default=true] (default true)
--storage-driver-buffer-duration DUR              #Writes in the storage driver will be buffered for this duration, and committed to the non memory backends as a single transaction (default 1m0s)
--storage-driver-db DB                            #Database name (default "cadvisor")
--storage-driver-host HOST                        #Database host:port (default "localhost:8086")
--storage-driver-password STR                     #Database password (default "root")
--storage-driver-secure BOOL                      #Use secure connection with database
--storage-driver-table STR                        #Table name (default "stats")
--storage-driver-user USER                        #Database username (default "root")
--streaming-connection-idle-timeout DUR           #Maximum time a streaming connection can be idle before the connection is automatically closed. 
                                                  #0 indicates no timeout. Example: '5m' (default 4h0m0s)
--sync-frequency DUR                              #Max period between synchronizing running containers and config (default 1m0s)
--system-cgroups STR                              #Optional absolute name of cgroups in which to place all non-kernel processes that are not already inside a cgroup under /. 
                                                  #Empty for no container. Rolling back the flag requires a reboot. (Default: "").
--system-reserved STR                             #A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. 
                                                  #Currently only cpu and memory are supported. See http://releases.k8s.io/HEAD/docs/user-guide/compute-resources.md for more detail. [default=none]
--tls-cert-file FILE                              #File containing x509 Certificate for HTTPS.  
                                                  #(CA cert, if any, concatenated after server cert). 
                                                  #If --tls-cert-file and --tls-private-key-file are not provided, 
                                                  #a self-signed certificate and key are generated for the public address and saved to the directory passed to --cert-dir.
--tls-private-key-file FILE                       #File containing x509 private key matching --tls-cert-file.
--version                                         #Print version information and quit
--volume-plugin-dir DIR                           #<Warning: alpha feature>
                                                  #The full path of the directory in which to search for additional third party volume plugins (default "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/")
--volume-stats-agg-period DUR                     #Specifies interval for kubelet to calculate and cache the volume disk usage for all pods and volumes.
                                                  #To disable volume calculations, set to 0.  Default: '1m' (default 1m0s)

QOBJ(GET|DELETE /RESOURCE).timeoutSeconds         #Call timeout



RESOURCE ==>                                      #Only describes the ones in the resource list table
RESCS                                             #Can be:
                                                  #  - RESC_TYPE,... [RESC_NAME ...]:
                                                  #     - if RESC_NAME not specified or --all: all resource of that type
                                                  #     - RESC_NAME is optional if --selector used
                                                  #  - RESC_TYPE/RESC_NAME ...
                                                  #Optional if --filename used
RESC                                              #Like RESCS but for a single resource, i.e. RESC_TYPE[/]RESC_NAME
                                                  #It seems kubctl edit needs /, and kubectl patch needs no / (verify???)
CLUSTER|POD|..._RESC[S]                           #Like RESC[S] but restrict to few possible RESC_TYPE
RESC_TYPE                                         #Resource type (see below)
                                                  #Can use plural form (does not make any difference)
RESC_NAME                         
CLUSTER|POD|...                                   #Resource name
RESC.*
CLUSTER|POD|....*                                 #Resource definition, used in REST operations or in --filename files
RESC_LIST                                         #Represents a list of resources
RESC_LIST.items                                   #Array of RESC



RESOURCE LIST ==>                                 #  +-------------------------+-------------------------------------------------------------+-----------------------------------------------------------------+
                                                  #  | NAME                    | REST ROUTE                                                  | RESC_TYPE (CLI)                                                 |
                                                  #  +-------------------------+-------------------------------------------------------------+-----------------------------------------------------------------+
                                                  #  | Cluster                 | None (whole API)                                            | cluster                                                         |
                                                  #  | APIResource             | "" (top-level)                                              | None                                                            |
                                                  #  | Binding                 | /pods/NAME/binding                                          | None (Pod subresource)                                          |
                                                  #  | ComponentStatus         | /componentstatuses                                          | componentstatus|cs                                              |
                                                  #  | ConfigMap               | /configmaps                                                 | configmap|cm                                                    |
                                                  #  | DaemonSet               | /daemonsets                                                 | daemonset|ds                                                    |
                                                  #  | Deployment              | /deployments                                                | deployment|deploy                                               |
                                                  #  | DeploymentRollback      | /deployments/NAME/rollback                                  | None (Deployment subresource)                                   |
                                                  #  | Endpoint                | /endpoints                                                  | endpoint|ep                                                     |
                                                  #  | Event                   | /events                                                     | event|ev                                                        |
                                                  #  | Eviction                | /pods/NAME/eviction                                         | None (Pod subresource)                                          |
                                                  #  | HorizontalPodAutoscaler | /horizontalpodautoscalers                                   | horizontalpodautoscaler|hpa                                     |
                                                  #  | Ingress                 | /ingresses                                                  | ingress|ing                                                     |
                                                  #  | Job                     | /jobs                                                       | job                                                             |
                                                  #  | LimitRange              | /limitranges                                                | limitrange|limits                                               |
                                                  #  | Namespace               | /namespaces                                                 | namespace|ns                                                    |
                                                  #  | NetworkPolicy           | /networkpolicies                                            | networkpolicy                                                   |
                                                  #  | Node                    | /nodes                                                      | node|no                                                         |
                                                  #  | PersistentVolume        | /persistentvolumes                                          | persistentvolume|pv                                             |
                                                  #  | PersistentVolumeClaim   | /persistentvolumeclaims                                     | persistentvolumeclaim|pvc                                       |
                                                  #  | Pod                     | /pods                                                       | pod|po                                                          |
                                                  #  | PodTemplate             | /podtemplates                                               | podtemplate                                                     |
                                                  #  | ReplicaSet              | /replicasets                                                | replicaset|rs                                                   |
                                                  #  | ReplicationController   | /replicationcontrollers                                     | replicationcontroller|rc                                        |
                                                  #  | ResourceQuota           | /resourcequotas                                             | [resource]quota                                                 |
                                                  #  | Scale                   | /deployments|replicasets|replicationcontrollers/NAME/scale  | None (Deployment|ReplicaSet|ReplicationController subresource)  |
                                                  #  | Secret                  | /secrets                                                    | secret                                                          |
                                                  #  | Service                 | /services                                                   | service|svc                                                     |
                                                  #  | ServiceAccount          | /serviceaccounts                                            | serviceaccount|sa                                               |
                                                  #  | ThirdPartyResource      | /thirdpartyresources                                        | thirdpartyresource                                              |
                                                  #  +-------------------------+-------------------------------------------------------------+-----------------------------------------------------------------+


kubectl ...
kubectl config set-cluster CLUSTER_NAME ...       #
--certificate-authority FILE                      #Path to a cert. file for the certificate authority
--insecure-skip-tls-verify BOOL                   #If true (def: false), the server's certificate will not be checked for validity. This will make your HTTPS connections insecure
-s
--server HOST                                     #The address and port of the Kubernetes API server

kubectl ...
kubectl config set-credentials                    #Sets a user entry in kubeconfig
 NAME ...                                         #Specifying a name that already exists will merge new fields on top of existing values.
--client-certificate FILE                         #Path to a client certificate file for TLS
--client-key FILE                                 #Path to a client key file for TLS

kubectl ...
kubectl config set-context ...                    #
--cluster CLUSTER                                 #The name of the kubeconfig cluster to use
-n
--namespace NAMESPACE                             #If present, the namespace scope for this CLI request
--user USER                                       #The name of the kubeconfig user to use

kubectl ...
kubectl config set-credentials NAME ...           #
--username STR                                    #Username for basic authentication to the API server
--password STR                                    #Password for basic authentication to the API server
--token STR                                       #Bearer token for authentication to the API server

kubectl ...                                       #
--as STR                                          #Username to impersonate for the operation
--context CONTEXT                                 #The name of the kubeconfig context to use
--match-server-version BOOL                       #Require server version to match client version. Def: false

kubectl create|expose|set image|get|edit|delete|
 rollout ...|rolling-update|scale|autoscale|
 describe|apply|patch|replace|convert|label|
 annotate ...                                     #
-f
--filename FILE|DIR|URL                           #Filename, directory, or URL to file to use to create the resource.
-R
--recursive BOOL                                  #Process the directory used in -f, --filename recursively. 
                                                  #Useful when you want to manage related manifests organized within the same directory.
                                                  #Def: false

kubectl create|run|set image|explain|edit|delete|
 rolling-update|scale|autoscale|cluster-info|
 taint|describe|log|apply|patch|replace|convert|
 label|annotate ...                               #
--include-extended-apis BOOL                      #If true (def), include definitions of new APIs via calls to the API server.

kubectl create|delete|scale|apply|replace ...     #
-o
--output STR                                      #Output mode. (resource/name).
--no-headers BOOL                                 #When using the default or custom-column output format, don't print headers.
                                                  #Def: false

kubectl create|expose|run|convert|set image|get|
 edit|autoscale|rolling-update|taint|patch|label|
 annotate|config view|config get-contexts ...     #
-o
--output STR                                      #Output format. 
                                                  #One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... 
                                                  #See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], 
                                                  #golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]. 
                                                  #kubectl edit only supports yaml|json
--output-version STR                              #Output the formatted object with the given group version (for ex: 'extensions/v1beta1').
-a
--show-all BOOL                                   #When printing, show all resources (default hide terminated pods.) Def: false
--show-labels BOOL                                #When printing, show all labels as the last column (default hide labels column). Def: false
--sort-by STR                                     #If non-empty, sort list types using this field specification.
                                                  #The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). 
                                                  #The field in the API resource specified by this JSONPath expression must be an integer or a string (see http://kubernetes.io/docs/user-guide/jsonpath/).
--template STR                                    #Template string or path to template file to use when -o=go-template, -o=go-template-file. 
                                                  #The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].

kubectl set image|delete|taint|label|annotate     #
--all BOOL                                        #Select all resources in the namespace of the specified resource types. Def: false.
kubectl get|cluster-info|top pode|describe
--all-namespaces BOOL                             #If present, list the requested object(s) across all namespaces. 
                                                  #Namespace in current context is ignored even if specified with --namespace.
                                                  #Def: false

kubectl create|expose|run|set image|edit|scale|
 autoscale|apply|patch|replace|label|annotate ... #
--record BOOL                                     #Record current kubectl command in the resource annotation.
                                                  #If set to false (def), do not record the command.
                                                  #If set to true, record the command.
                                                  #If not set, default to updating the existing annotation value only if one already exists.

kubectl create ...|expose|run|edit|autoscale|
 replace ...                                      #
--save-config BOOL                                #If true, the configuration of current object will be saved in its annotation.
                                                  #This is useful when you want to perform kubectl apply on this object in the future.
                                                  #Def: false

kubectl create ...|edit|rolling-update|taint|
 apply|replace|convert ...                        #
--schema-cache-dir '~/.kube/schema'               #If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'
--validate BOOL                                   #If true (def), use a schema to validate the input before sending it

kubectl create ...|expose|label|rolling-update|
 autoscale|run ...                                #
--dry-run BOOL                                    #If true (def: false), only print the object that would be sent, without sending it.

kubectl set image|patch|convert                   #
--local BOOL                                      #If true (def), does not try to contact api-server but run locally.

kubectl create|expose|run|autoscale ...           #
--generator "GENERATOR"                           #The name of the API generator to use:
                                                  #  - create: configmap|deployment-basic|namespace|resourcequotas|secret-for-docker-registry|secret|secret-for-tls|service-cluster|service-loadbalancer|
                                                  #    service-nodeport|serviceaccount/v1
                                                  #  - expose: service/v1 (service port is "default") or service/v2 (service port is unnamed) (def)
                                                  #  - run: default is according to --restart:
                                                  #     - Always: 'deployment/v1beta1'
                                                  #     - OnFailure: 'job/v1'
                                                  #     - Never: 'run-pod/v1'
                                                  #  - autoscale: 'horizontalpodautoscaler/v1' (only choice)
kubectl run ...
--service-generator STR                           #The name of the generator to use for creating a service.
                                                  #Only used if --expose is true
                                                  #Def: 'service/v2'

kubectl ...                                       #Client

kubectl create ...                                #Create a resource by filename or stdin

kubectl create configmap|cm CONFIGMAP             #
kubectl create secret generic SECRET              #
--from-file FILE|DIR,...                          #Key files can be specified using their file path, in which case a default name will be given to them, or optionally with a name and file path, 
                                                  #in which case the given name will be used.
                                                  #Specifying a directory will iterate each named file in the directory that is a valid configmap key.
--from-literal VAR=VAL,...                        #Specify a key and literal value to insert in configmap (i.e. mykey=somevalue)

kubectl create configmap|cm CONFIGMAP             #Create a configmap from a local file, directory or literal value
                                                  #A single configmap may package one or more key/value pairs.
                                                  #When creating a configmap based on a file, the key will default to the basename of the file, and the value will default to the file content.  
                                                  #If the basename is an invalid key, you may specify an alternate key.
                                                  #When creating a configmap based on a directory, each file whose basename is a valid key in the directory will be packaged into the configmap.
                                                  #Any directory entries except regular files are ignored (e.g. subdirectories, symlinks, devices, pipes, etc)

kubectl create deployment|dep DEPLOYMENT          #Create a deployment with the specified name.
--image IMAGE,...                                 #Image name to run.

kubectl create namespace|ns NAMESPACE             #Create a namespace with the specified name

kubectl create [resource]quota QUOTA              #Create a quota with the specified name.
--hard TYPE=NUM,...                               #A comma-delimited set of resource=quantity pairs that define a hard limit.
--scopes STR,...                                  #A comma-delimited set of quota scopes that must all match each object tracked by the quota.

kubectl create secret docker-registry SECRET      #Create a secret for use with a Docker registry
                                                  #When using the Docker command line to push images, you can authenticate to a given registry by running
                                                  #  'docker login DOCKER_REGISTRY_SERVER --username DOCKER_USER --password DOCKER_PASSWORD --email DOCKER_EMAIL'.
                                                  #That produces a ~/.dockercfg file that is used by subsequent 'docker push' and 'docker pull' commands to authenticate to the registry.
                                                  #When creating applications, you may have a Docker registry that requires authentication.
                                                  #In order for the nodes to pull images on your behalf, they have to have the credentials.
                                                  #You can provide this information by creating a dockercfg secret and attaching it to your service account.
--docker-email STR                                #Email for Docker registry
--docker-password STR                             #Password for Docker registry authentication
--docker-server URI                               #Def: 'https://index.docker.io/v1/'
                                                  #Server location for Docker registry
--docker-username STR                             #Username for Docker registry authentication

kubectl create secret generic SECRET              #Create a secret from a local file, directory or literal value
                                                  #A single secret may package one or more key/value pairs.
                                                  #When creating a secret based on a file, the key will default to the basename of the file, and the value will default to the file content.
                                                  #If the basename is an invalid key, you may specify an alternate key.
                                                  #When creating a secret based on a directory, each file whose basename is a valid key in the directory will be packaged into the secret.
                                                  #Any directory entries except regular files are ignored (e.g. subdirectories, symlinks, devices, pipes, etc).
--type STR                                        #The type of secret to create

kubectl create secret tls SECRET                  #Create a TLS secret
                                                  #The public/private key pair must exist before hand. The public key certificate must be .PEM encoded and match the given private key.
--cert FILE                                       #Path to PEM encoded public key certificate.
--key FILE                                        #Path to private key associated with given certificate.

kubectl create service TYPE RESC_NAME             #
--tcp PORT:TARGET_PORT,...                        #Port pairs can be specified as '<port>:<targetPort>'.

kubectl create service clusterip SERVICE          #Create a clusterIP service.
--clusterip IP                                    #Assign your own ClusterIP or set to 'None' for a 'headless' service (no loadbalancing).

kubectl create service loadbalancer SERVICE       #Create a LoadBalancer service.

kubectl create service nodeport SERVICE           #Create a NodePort service.

kubectl create serviceaccount|sa SERVICEACCOUNT   #Create a service account with the specified name

kubectl expose|run ...                            #
-l
--labels STR                                      #Labels to apply

kubectl expose|run ...                            #
--overrides JSON                                  #An inline JSON override for the generated object. 
                                                  #If this is non-empty, it is used to override the generated object. Requires that the object supply a valid apiVersion field.
kubectl run ...
--service-overrides 'JSON'                        #An inline JSON override for the generated service object.
                                                  #If this is non-empty, it is used to override the generated object. 
                                                  #Requires that the object supply a valid apiVersion field.
                                                  #Only used if --expose is true.

kubectl expose DEPLOYMENT|POD|REPLICASET|         #Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
 REPLICACONTROLLER|SERVICE_RESCS                  #Expose a resource as a new Kubernetes service.
                                                  #Looks up a deployment, service, replica set, replication controller or pod by name and uses the selector 
                                                  #for that resource as the selector for a new service on the specified port. 
                                                  #A deployment or replica set will be exposed as a service only if its selector is convertible to a selector that service supports, 
                                                  #i.e. when the selector contains only the matchLabels component. 
                                                  #Note that if no port is specified via --port and the exposed resource has multiple ports, all will be re-used by the new service. 
                                                  #Also if no labels are specified, the new service will re-use the labels from the resource it exposes.
--cluster-ip IP                                   #ClusterIP to be assigned to the service. Leave empty to auto-allocate, or set to 'None' to create a headless service.
--create-external-load-balancer BOOL              #If true (def: false), create an external load balancer for this service (trumped by --type). 
                                                  #Implementation is cloud provider dependent.
--external-ip IP                                  #Additional external IP address (not managed by Kubernetes) to accept for the service. 
                                                  #If this IP is routed to a node, the service can be accessed by this IP in addition to its generated service IP.
--load-balancer-ip IP                             #IP to assign to the Load Balancer. If empty, an ephemeral IP will be created and used (cloud-provider specific).
--name STR                                        #The name for the newly created object.
--port NUM                                        #The port that the service should serve on. Copied from the resource being exposed, if unspecified
--protocol PROTO                                  #The network protocol for the service to be created. Default is 'TCP'.
--selector STR                                    #A label selector to use for this service. 
                                                  #Only equality-based selector requirements are supported. 
                                                  #If empty (the default) infer the selector from the replication controller or replica set.
--session-affinity STR                            #If non-empty, set the session affinity for the service to this; legal values: 'None', 'ClientIP'
--target|container-port NUM                       #Name or number for the port on the container that the service should direct traffic to. Optional.
--type STR                                        #Type for this service: ClusterIP, NodePort, or LoadBalancer. Default is 'ClusterIP'.

kubectl run|rolling-update ...                    #
--image-pull-policy STR                           #The image pull policy for the container.
                                                  #If left empty, this value will not be specified by the client and defaulted by the server.
                                                  #With rolling-update: required when --image is same as existing image, ignored otherwise.

kubectl run[-container] IMAGE                     #Run a particular image on the cluster
--attach BOOL                                     #If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.
                                                  #Default false, unless '-i/--stdin' is set, in which case the default is true. 
                                                  #With '--restart Never' the exit code of the container process is returned.
--command BOOL                                    #If true (def: false) and extra arguments are present, use them as the 'command' field in the container, rather than the 'args' field which is the default.
--env VAR=VAL,...                                 #Environment variables to set in the container
--expose BOOL                                     #If true (def: false), a public, external service is created for the container(s) which are run
--hostport NUM                                    #The host port mapping for the container port.
                                                  #To demonstrate a single-machine container.
                                                  #DeF: -1
--image IMAGE                                     #The image for the container to run.
--leave-stdin-open BOOL                           #If the pod is started in interactive mode or with stdin, leave stdin open after the first attach completes. 
                                                  #By default (false), stdin will be closed after the first attach completes.
--limits TYPE=VAL,...                             #The resource requirement limits for this container.
                                                  #For example, 'cpu=200m,memory=512Mi'.
                                                  #Note that server side components may assign limits depending on the server configuration, such as limit ranges.
--port NUM                                        #The port that this container exposes.
                                                  #If --expose is true, this is also the port used by the service that is created.
                                                  #Def: -1
--quiet BOOL                                      #If true (def: false), suppress prompt messages.
--requests TYPE=VAL,...                           #The resource requirement requests for this container.
                                                  #For example, 'cpu=100m,memory=256Mi'.
                                                  #Note that server side components may assign requests depending on the server configuration, such as limit ranges.
--restart STR                                     #The restart policy for this Pod.
                                                  #Legal values [Always, OnFailure, Never].
                                                  #If set to 'Always' (def) a deployment is created for this pod, 
                                                  #if set to 'OnFailure', a job is created for this pod, if set to 'Never', a regular pod is created.
                                                  #For the latter two --replicas must be 1.  Default 'Always'
--rm BOOL                                         #If true (def: false), delete resources created in this command for attached containers.
--schedule STR                                    #A schedule in the Cron format the job should be run with.

kubectl set image|get|delete|top|taint|describe|
 label|annotate                                   #
-l
--selector STR                                    #Selector (label query) to filter on

kubectl set image DAEMONSET|DEPLOYMENT|POD|
 REPLICASET|REPLICACONTROLLER_RESCS 
 CONTAINER=IMAGE ...                              #Update existing container image(s) of resources.

kubectl get RESCS                                 #Display one or many resources
                                                  #This command will hide resources that have completed. For instance, pods that are in the Succeeded or Failed phases.
                                                  #You can see the full results for any resource by providing the '--show-all' flag.
                                                  #By specifying the output as 'template' and providing a Go template as the value of the --template flag, you can filter the attributes of the fetched resource(s).
--export BOOL                                     #If true (def: false), use 'export' for the resources.
                                                  #Exported resources are stripped of cluster-specific information.
-L 
--label-columns VAR,...                           #Accepts a comma separated list of labels that are going to be presented as columns. 
                                                  #Names are case-sensitive. You can also use multiple flag options like -L label1 -L label2...
--raw URI                                         #Raw URI to request from the server.  Uses the transport specified by the kubeconfig file.
--show-kind BOOL                                  #If present, list the resource type for the requested object(s). Def: false
-w
--watch BOOL                                      #After listing/getting the requested object, watch for changes. Def: false
--watch-only BOOL                                 #Watch for changes to the requested object(s), without listing/getting first. Def: false

kubectl explain RESCS                             #Documentation of resources
--recursive BOOL                                  #Print the fields of fields (Currently only 1 level deep). Def: false

kubectl edit RESC                                 #Edit a resource on the server, from the default editor.
                                                  #The edit command allows you to directly edit any API resource you can retrieve via the command line tools. 
                                                  #It will open the editor defined by your KUBE_EDITOR, or EDITOR environment variables, or fall back to 'vi' for Linux or 'notepad' for Windows.
                                                  #You can edit multiple objects, although changes are applied one at a time. 
                                                  #The command accepts filenames as well as command line arguments, although the files you point to must be previously saved versions of resources.
                                                  #The files to edit will be output in the default API version, or a version specified by --output-version. 
                                                  #The default format is YAML - if you would like to edit in JSON pass -o json.
                                                  #The flag --windows-line-endings can be used to force Windows line endings, otherwise the default for your operating system will be used.
                                                  #In the event an error occurs while updating, a temporary file will be created on disk that contains your unapplied changes. 
                                                  #The most common error when updating a resource is another editor changing the resource on the server. 
                                                  #When this occurs, you will have to apply your changes to the newer version of the resource, 
                                                  #or update your temporary saved copy to include the latest resource version.
--windows-line-endings BOOL                       #Use Windows line-endings (default Unix line-endings). Def: false

kubectl delete|replace                            #
--cascade BOOL                                    #If true, cascade the deletion of the resources managed by this resource (e.g. Pods created by a ReplicationController). 
                                                  #replace: only relevant during a force replace. Def: true for delete, false for replace.

kubectl delete|replace|drain                      #
--grace-period NUM                                #Period of time in seconds given to the resource to terminate gracefully. Ignored if negative (def: -1)
                                                  #replace: only relevant during a force replace.

kubectl replace|delete|rolling-update|scale       #
--timeout DUR                                     #The length of time to wait before giving up, 0 means (rolling-update|scale) no wait or (replace|update) relative to object size. 
                                                  #Def: 5m (rolling-update), 0 (otherwise). replace: only relevant for a force replace

kubectl delete RESCS                              #Delete resources by filenames, stdin, resources and names, or by resources and label selector
                                                  #JSON and YAML formats are accepted.
                                                  #Only one type of the arguments may be specified: filenames, resources and names, or resources and label selector
                                                  #Note that the delete command does NOT do resource version checks, so if someone submits an update to a resource 
                                                  #right when you submit a delete, their update will be lost along with the rest of the resource.
--ignore-not-found BOOL                           #Treat "resource not found" as a successful delete. Defaults to "true" when --all is specified., false otherwise
--now BOOL                                        #If true (def: false), resources are force terminated without graceful deletion (same as --grace-period 0).

kubectl rollout history deployment/DEPLOYMENT     #View previous rollout revisions and configurations.
--revision NUM                                    #See the details, including podTemplate of the revision specified. Def: 0

kubectl rollout pause deployment/DEPLOYMENT       #Mark the provided resource as paused
                                                  #Paused resources will not be reconciled by a controller.
                                                  #Use \"kubectl rollout resume\" to resume a paused resource.
                                                  #Currently only deployments support being paused.

kubectl rollout resume deployment/DEPLOYMENT      #Resume a paused resource
                                                  #Paused resources will not be reconciled by a controller. 
                                                  #By resuming a resource, we allow it to be reconciled again.
                                                  #Currently only deployments support being resumed.

kubectl rollout status deployment/DEPLOYMENT      #Watch the status of current rollout, until it's done.

kubectl rollout undo deployment/DEPLOYMENT        #Rollback to a previous rollout.
--to-revision NUM                                 #The revision to rollback to. Default to 0 (last revision).

kubectl rolling[-]update OLD_REPLICATIONCONTROLER #Perform a rolling update of the given ReplicationController.
 NEW_REPLICATIONCONTROLLER                        #Replaces the specified replication controller with a new replication controller by updating one pod at a time to use the new PodTemplate. 
                                                  #The new-controller.json must specify the same namespace as the existing replication controller and overwrite at least one (common) label in its replicaSelector.
                                                  #![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate.svg)
                                                  #NEW_NAME optional if --image of --filename
--container CONTAINER_NAME                        #Container name which will have its image upgraded. 
                                                  #Only relevant when --image is specified, ignored otherwise.
                                                  #Required when using --image on a multi-container pod
--deployment-label-key STR                        #The key to use to differentiate between two different controllers, default 'deployment'.  Only relevant when --image is specified, ignored otherwise
--image IMAGE                                     #Image to use for upgrading the replication controller. 
                                                  #Must be distinct from the existing image (either new image or new image tag).
                                                  #Can not be used with --filename/-f
--poll-interval DUR                               #Time delay between polling for replication controller status after the update. Def: 3s
--rollback BOOL                                   #If true (def: false), this is a request to abort an existing rollout that is partially rolled out. 
                                                  #It effectively reverses current and next and runs a rollout
--update-period DUR                               #Time to wait between updating pods. Def: 1m

kubectl run ...                                   #
-r
--replicas NUM                                    #Number of replicas to create for this container. Default is 1.

kubectl scale|label|annotate ...                  #
--resource-version STR                            #If non-empty, will only succeed if this is the current resource-version for the object.
                                                  #Only valid when specifying a single resource.

kubectl scale|resize DEPLOYMENT|REPLICASET|       #Set a new size
 REPLICACONTROLLER|JOB_RESC                       #Scale also allows users to specify one or more preconditions for the scale action.
                                                  #If --current-replicas or --resource-version is specified, it is validated before the scale is attempted, 
                                                  #and it is guaranteed that the precondition holds true when the scale is sent to the server.
--current-replicas NUM                            #Precondition for current size. Requires that the current size of the resource match this value in order to scale.
                                                  #Def: -1
--replicas NUM                                    #The new desired number of replicas. Required.
                                                  #Def: -1

kubectl autoscale DEPLOYMENT|REPLICASET|          #Creates an autoscaler that automatically chooses and sets the number of pods that run in a kubernetes cluster.
 REPLICACONTROLLER_RESC                           #Looks up a Deployment, ReplicaSet, or ReplicationController by name and creates an autoscaler that uses the given resource as a reference.
                                                  #An autoscaler can automatically increase or decrease number of pods deployed within the system as needed.
--cpu-percent NUM                                 #The target average CPU utilization (represented as a percent of requested CPU) over all the pods. 
                                                  #If it's not specified or negative, a default autoscaling policy will be used.
                                                  #Def: -1
--max NUM                                         #The upper limit for the number of pods that can be set by the autoscaler. Required.
                                                  #Def: -1
--min NUM                                         #The lower limit for the number of pods that can be set by the autoscaler. If it's not specified or negative, the server will apply a default value.
                                                  #Def: -1
--name NAME                                       #The name for the newly created object. If not specified, the name of the input resource will be used.

kubectl cluster[-]info                            #Display addresses of the master and services with label kubernetes.io/cluster-service=true
                                                  #To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

kubectl cluster[-]info dump                       #Dumps cluster info out suitable for debugging and diagnosing cluster problems.
                                                  #By default, dumps everything to stdout.
                                                  #You can optionally specify a directory with --output-directory.
                                                  #If you specify a directory, kubernetes will build a set of files in that directory.
                                                  #By default only dumps things in the 'kube-system' namespace, but you can switch to a different namespace with the --namespaces flag, 
                                                  #or specify --all-namespaces to dump all namespaces.
                                                  #The command also dumps the logs of all of the pods in the cluster, these logs are dumped into different directories based on namespace and pod name.
--namespaces NAMESPACE,...                        #A comma separated list of namespaces to dump.
--output-directory DIR                            #Where to output the files.  If empty or '-' uses stdout, otherwise creates a directory hierarchy in that directory

kubectl top POD|NODE_RESCS                        #Display Resource (CPU/Memory/Storage) usage.
                                                  #The top command allows you to see the resource consumption for nodes or pods.
                                                  #Due to the metrics pipeline delay, they may be unavailable for a few minutes since creation (for pods)
--containers BOOL                                 #If present, print usage of containers within a pod. Only for pods.
                                                  #Def: false

kubectl [un]cordon NODE                           #Mark node as unschedulable|schedulable

kubectl drain NODE                                #Drain node in preparation for maintenance.
                                                  #The given node will be marked unschedulable to prevent new pods from arriving.
                                                  #Then drain deletes all pods except mirror pods (which cannot be deleted through the API server).
                                                  #If there are DaemonSet-managed pods, drain will not proceed without --ignore-daemonsets, and regardless it will not delete any DaemonSet-managed pods,
                                                  #because those pods would be immediately replaced by the DaemonSet controller, which ignores unschedulable markings.
                                                  #If there are any pods that are neither mirror pods nor managed--by ReplicationController, ReplicaSet, DaemonSet or Job--,
                                                  #then drain will not delete any pods unless you use --force.
                                                  #When you are ready to put the node back into service, use kubectl uncordon, which will make the node schedulable again.
                                                  #![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)
--delete-local-data BOOL                          #Continue even if there are pods using emptyDir (local data that will be deleted when the node is drained). Def: false
--force BOOL                                      #Continue even if there are pods not managed by a ReplicationController, ReplicaSet, Job, or DaemonSet. Def: false
--ignore-daemonsets BOOL                          #Ignore DaemonSet-managed pods. Def: false

kubectl taint NODE_RESCS VAL ...                  #Update the taints on one or more nodes.
                                                  #A taint consists of a key, value, and effect. As an argument here, it is expressed as key=value:effect.
                                                  #The key must begin with a letter or number, and may contain letters, numbers, hyphens, dots, and underscores, up to 253 characters.
                                                  #The value must begin with a letter or number, and may contain letters, numbers, hyphens, dots, and underscores, up to 253 characters.
                                                  #The effect must be NoSchedule or PreferNoSchedule.
                                                  #Currently taint can only apply to node.
                                                  #VAL can be:
                                                  #  - KEY=VAL:EFFECT: add|change one effect
                                                  #  - KEY:EFFECT-: remove one effect
                                                  #  - KEY-: remove all effects

kubectl describe RESC                             #Show details of a specific resource or group of resources
                                                  #This command joins many API calls together to form a detailed description of a given resource or group of resources.
                                                  #Will first check for an exact match on ERESOURCES. 
                                                  #If no such resource exists, it will output details for every resource that has a name prefixed with NAME
--show-events BOOL                                #If true (def), display events related to the described object.

kubectl log|attach|exec ...                       #
-c
--container CONTAINER_NAME                        #Container name. Def: first pod's container

kubectl log[s] POD                                #Print the logs for a container in a pod.
-f
--follow BOOL                                     #Specify if the logs should be streamed. Def: false
--interactive BOOL                                #If true (def: false), prompt the user for input when required.
--limit-bytes NUM                                 #Maximum bytes of logs to return. Defaults to no limit. Def: 0
-p
--previous BOOL                                   #If true (def: false), print the logs for the previous instance of the container in a pod if it exists.
--since DUR                                       #Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used. Def: 0
--since-time DATE                                 #Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used. Def: ''
--tail NUM                                        #Lines of recent log file to display. Defaults to -1, showing all log lines.
--timestamps BOOL                                 #Include timestamps on each line in the log output. Def: false

kubectl run|attach|exec ...                       #
-i
--stdin BOOL                                      #Keep stdin open on the container(s) in the pod, even if nothing is attached. Def: false
-t
--tty BOOL                                        #Allocated a TTY for each container in the pod. Def: false

kubectl attach POD                                #Attach to a process that is already running inside an existing container.

kubectl exec|port-forward ...                     #
-p
--pod POD                                         #Pod name

kubectl exec POD                                  #Execute a command in a container

kubectl port-forward POD 
 [LOCAL_PORT]:REMOTE_PORT ...                     #Forward one or more local ports to a pod 

kubectl proxy                                     #Run a proxy to the Kubernetes API server
                                                  #To proxy all of the kubernetes api and nothing else, use:
                                                  #  kubectl proxy --api-prefix /
                                                  #To proxy only part of the kubernetes api and also some static files:
                                                  #  kubectl proxy --www /my/files --www-prefix /static/ --api-prefix /api/
                                                  #The above lets you 'curl localhost:8001/api/v1/pods'.
                                                  #To proxy the entire kubernetes api at a different root, use:
                                                  #  kubectl proxy --api-prefix /custom/
                                                  #The above lets you 'curl localhost:8001/custom/api/v1/pods'
--accept-hosts REGEXP                             #Def: '^localhost$,^127\.0\.0\.1$,^\[::1\]$'   
                                                  #Regular expression for hosts that the proxy should accept.
--accept-paths REGEXP                             #Def: '^/.*'
                                                  #Regular expression for paths that the proxy should accept.
--address IP                                      #The IP address on which to serve on. Def: 127.0.0.1
--api-prefix STR                                  #Prefix to serve the proxied API under. Def: '/'
--disable-filter BOOL                             #If true (def: false), disable request filtering in the proxy. 
                                                  #This is dangerous, and can leave you vulnerable to XSRF attacks, when used with an accessible port.
-p
--port NUM                                        #The port on which to run the proxy. Set to 0 to pick a random port. Def: 8001
--reject-methods REGEXP,...                       #Regular expression for HTTP methods that the proxy should reject.
                                                  #Def: 'POST,PUT,PATCH'
--reject-paths REGEXP,...                         #Def: '^/api/.*/pods/.*/exec,^/api/.*/pods/.*/attach'              
                                                  #Regular expression for paths that the proxy should reject.
-u
--unix-socket FILE                                #Unix socket on which to run the proxy. Def: ''
-w
--www DIR                                         #Also serve static files from the given directory under the specified prefix. Def: ''
-P
--www-prefix PATH                                 #Prefix to serve static files under, if static file directory is specified. Def: '/static/'

kubectl taint|label|annotate                      #
--overwrite BOOL                                  #If true (def: false), allow to be overwritten, otherwise reject updates that overwrite existing ones.

kubectl apply                                     #Apply a configuration to a resource by filename or stdin
                                                  #This resource will be created if it doesn't exist yet.
                                                  #To use 'apply', always create the resource initially with either 'apply' or 'create --save-config'.
                                                  #JSON and YAML formats are accepted.
                                                  #--filename is required
--overwrite BOOL                                  #Automatically resolve conflicts between the modified and live configuration by using values from the modified configuration
                                                  #Def: true

kubectl patch RESC                                #Update field(s) of a resource using strategic merge patch
                                                  #JSON and YAML formats are accepted.
                                                  #Please refer to the models in https://htmlpreview.github.io/?https://github.com/kubernetes/kubernetes/blob/release-1.4/docs/api-reference/v1/definitions.html 
                                                  #to find if a field is mutable.
                                                  #--patch is required
-p
--patch STR                                       #The patch to be applied to the resource JSON file.
--type STR                                        #The type of patch being provided; one of: json, merge, strategic (def)

kubectl replace|update                            #Replace a resource by filename or stdin
                                                  #JSON and YAML formats are accepted. 
                                                  #If replacing an existing resource, the complete resource spec must be provided. 
                                                  #This can be obtained by:
                                                  #  kubectl get TYPE NAME -o yaml
                                                  #Please refer to the models in 
                                                  #https://htmlpreview.github.io/?https://github.com/kubernetes/kubernetes/blob/release-1.4/docs/api-reference/v1/definitions.html 
                                                  #to find if a field is mutable.
                                                  #--filename is required
--force BOOL                                      #Delete and re-create the specified resource. Def: false

kubectl convert                                   #Convert config files between different API versions
                                                  #Both YAML and JSON formats are accepted.
                                                  #The command takes filename, directory, or URL as input, and convert it into format of version specified by --output-version flag.
                                                  #If target version is not specified or not supported, convert to latest version.
                                                  #The default output will be printed to stdout in YAML format.
                                                  #One can use -o option to change to output destination.
                                                  #--filename is required

kubectl label RESCS VAR=VAL ...                   #Update the labels on a resource
                                                  #A label must begin with a letter or number, and may contain letters, numbers, hyphens, dots, and underscores, up to 63 characters.
                                                  #If --overwrite is true, then existing labels can be overwritten, otherwise attempting to overwrite a label will result in an error.
                                                  #If --resource-version is specified, then updates will use this resource version, otherwise the existing resource-version will be used.

kubectl annotate RESCS VAR=VAL...                 #Update the annotations on one or more resources.
                                                  #An annotation is a key/value pair that can hold larger (compared to a label), and possibly not human-readable, data.
                                                  #It is intended to store non-identifying auxiliary data, especially data manipulated by tools and system extensions.
                                                  #If --overwrite is true, then existing annotations can be overwritten, otherwise attempting to overwrite an annotation will result in an error.
                                                  #If --resource-version is specified, then updates will use this resource version, otherwise the existing resource-version will be used.

kubectl completion bash|zsh                       #Output shell completion code for the given shell
                                                  #This command prints shell code which must be evaluation to provide interactive completion of kubectl commands.

kubectl api[-]versions                            #Print the supported API versions on the server, in the form of "group/version"

kubectl version                                   #Print the client and server version information
-c
--client BOOL                                     #Client version only (no server required). Def: false

kubectl config                                    #Modify kubeconfig files
                                                  #The loading order follows these rules:
                                                  #  1. If the --kubeconfig flag is set, then only that file is loaded.  The flag may only be set once and no merging takes place.
                                                  #  2. If $KUBECONFIG environment variable is set, then it is used a list of paths (normal path delimitting rules for your system).
                                                  #     These paths are merged.
                                                  #     When a value is modified, it is modified in the file that defines the stanza.
                                                  #     When a value is created, it is created in the first file that exists.
                                                  #     If no files in the chain exist, then it creates the last file in the list.
                                                  #  3. Otherwise, ${HOME}/.kube/config is used and no merging takes place.

kubectl config current-context                    #Displays the current-context

kubectl config delete-cluster CLUSTER             #Delete the specified cluster from the kubeconfig

kubectl config delete-context CONTEXT             #Delete the specified context from the kubeconfig

kubectl config get-clusters                       #Display clusters defined in the kubeconfig

kubectl config get-contexts [CONTEXT]             #Describe one or many contexts form the kubeconfig file

kubectl config set VARR VAL                       #Sets an individual value in a kubeconfig file
                                                  #VARR is a dot delimited name where each token represents either an attribute name or a map key. Map keys may not contain dots.
                                                  #VAL is the new value you wish to set. 
                                                  #Binary fields such as 'certificate-authority-data' expect a base64 encoded string unless the --set-raw-bytes flag is used.
--set-raw-bytes BOOL                              #When writing a []byte PROPERTY_VALUE, write the given string directly without base64 decoding.
                                                  #Def: false

kubectl config set-cluster|set-credentials ...    #
--embed-certs BOOL                                #Embed client cert/key
                                                  #Def: false

kubectl config set-cluster CLUSTER_NAME           #Sets a cluster entry in kubeconfig
                                                  #Specifying a name that already exists will merge new fields on top of existing values for those fields.

kubectl config set-context                        #Sets a context entry in kubeconfig
                                                  #Specifying a name that already exists will merge new fields on top of existing values for those fields.

kubectl config set-credentials NAME               #Sets a user entry in kubeconfig
                                                  #Specifying a name that already exists will merge new fields on top of existing values.
--auth-provider STR                               #Auth provider for the user entry in kubeconfig
--auth-provider-arg VAR=VAL,...                   #'key=value' arugments for the auth provider

kubectl config unset VARR                         #Unsets an individual value in a kubeconfig file
                                                  #VARR is a dot delimited name where each token represents either an attribute name or a map key.  Map keys may not contain dots.

kubectl config use-context CONTEXT                #Sets the current-context in a kubeconfig file

kubectl config view                               #Display merged kubeconfig settings or a specified kubeconfig file
                                                  #You can use --output jsonpath={...} to extract specific values using a jsonpath expression.
--flatten BOOL                                    #Flatten the resulting kubeconfig file into self-contained output (useful for creating portable kubeconfig files)
                                                  #Def: false
--merge BOOL                                      #Merge the full hierarchy of kubeconfig files
                                                  #Def: true
--minify BOOL                                     #Remove all information not used by current-context from the output
                                                  #Def: false
--raw BOOL                                        #Display raw byte data
                                                  #Def: false



























RESC[_LIST].kind                                  #Resource type, e.g. 'PodLists' or 'Pod'
RESC[_LIST].apiVersion                            #

METADATA.uid                                      #RESOURCE_ID
METADATA.generation                               #"GENERATION"
METADATA.creation|deletionTimestamp               #DATE
METADATA.labels                                   #OBJ
METADATA.annotations                              #OBJ


SPEC VS STATUS ==>                                #"spec" is target state, "status" is current state





                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           METADATA            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


CHECK http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#concurrency-control-and-consistency???
CHECK http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md???

RESC[_LIST].metadata                              #[LIST_]METADATA

                                                  #Read-only
METADATA.name                                     #RESOURCE_NAME
METADATA.name                                     #Name must be unique within a namespace.
                                                  #Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. 
                                                  #Name is primarily intended for creation idempotence and configuration definition.
                                                  #Cannot be updated.
                                                  #More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
METADATA.generateName GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).  Applied only if Name is not specified. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#idempotency false string
[LIST_]METADATA.selfLink                          #REST URI. Read only
METADATA.uid UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.  Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#uids false string
[LIST_]METADATA.resourceVersion                   #STR. Version of this object, i.e. updated when object is updated
                                                  #Is opaque, should only be used to check "has it changed", e.g. for concurrency
                                                  #If changed, REST API returns 409
                                                  #Read-only
METADATA.generation A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.  false integer (int64)
METADATA.creationTimestamp CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.  Populated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#metadata false string (date-time)
METADATA.deletionTimestamp DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource will be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. Once the resource is deleted in the API, the Kubelet will send a hard termination signal to the container. If not set, graceful deletion of the object has not been requested.  Populated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#metadata false string (date-time)
METADATA.deletionGracePeriodSeconds Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.  false integer (int64)
METADATA.labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md false object
METADATA.annotations Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://releases.k8s.io/release-1.4/docs/user-guide/annotations.md false object
METADATA.ownerReferences List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.  false v1.OwnerReference array
METADATA.finalizers Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.  false string array
METADATA.clusterName The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.  false string

KOWNERREFERENCE.uid UID of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#uids true string
KOWNERREFERENCE.controller If true, this reference points to the managing controller.  false boolean false


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            BINDING            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KBINDING.target The target object that you want to bind to the standard object.  true v1.ObjectReference


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          LIMIT RANGE          :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KLIMITRANGE.spec Spec defines the limits enforced. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.LimitRangeSpec

KLIMITRANGESPEC.limits Limits is the list of LimitRangeItem objects that are enforced.  true v1.LimitRangeItem array

KLIMITRANGEITEM.type Type of resource that this limit applies to.  false string
KLIMITRANGEITEM.max Max usage constraints on this kind by resource name.  false object
KLIMITRANGEITEM.min Min usage constraints on this kind by resource name.  false object
KLIMITRANGEITEM.default Default resource requirement limit value by resource name if resource limit is omitted.  false object
KLIMITRANGEITEM.defaultRequest DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.  false object
KLIMITRANGEITEM.maxLimitRequestRatio MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.  false object


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         API RESOURCE          :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KAPIRES.name name is the name of the resource.  true string
KAPIRES.namespaced namespaced indicates if a resource is namespaced or not.  true boolean false
KAPIRES.kind kind is the kind for the resource (e.g. Foo is the kind for a resource foo) true string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       COMPONENT STATUS        :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KCOMPONENTSTATUS.conditions List of component conditions observed false v1.ComponentCondition array

KCOMPONENTCOND.type Type of condition for a component. Valid value: "Healthy" true string
KCOMPONENTCOND.status Status of the condition for a component. Valid values for "Healthy": "True", "False", or "Unknown".  true string
KCOMPONENTCOND.message Message about the condition for a component. For example, information about a health check.  false string
KCOMPONENTCOND.error Condition error code for a component. For example, a health check error code.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          CONFIG MAP           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KCONFMAP.data Data contains the configuration data. Each key must be a valid DNS_SUBDOMAIN with an optional leading dot.  false object


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           NAMESPACE           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


CHECK http://releases.k8s.io/release-1.4/docs/user-guide/namespaces.md???

NAMESPACE ==>                                     #Sub-cluster
                                                  #The following entities are always at the cluster-level, i.e. do not use namespaces:
                                                  #  - Namespace itself, Node, PersistentVolume, ThirdPartyResource, ComponentStatus
                                                  #Specified with each REST call, although optional for GET /RESOURCE (see above)

NAMESPACE                                         #Def: "default"
                                                  #Must be DNS label
METADATA.namespace                                #NAMESPACE
                                                  #Read-only

KNAMESPACE.spec Spec defines the behavior of the Namespace. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.NamespaceSpec
KNAMESPACE.status Status describes the current status of a Namespace. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.NamespaceStatus

KNAMESPACESPEC.finalizers Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: http://releases.k8s.io/release-1.4/docs/design/namespaces.md#finalizers false v1.FinalizerName array

KNAMESPACESTATUS.phase Phase is the current lifecycle phase of the namespace. More info: http://releases.k8s.io/release-1.4/docs/design/namespaces.md#phases false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:              POD              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KPOD.spec Specification of the desired behavior of the pod. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.PodSpec
KPOD.status Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.PodStatus

KPODSPEC.volumes List of volumes that can be mounted by containers belonging to the pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md false v1.Volume array
KPODSPEC.containers List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/containers.md true v1.Container array
KPODSPEC.restartPolicy Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#restartpolicy false string
KPODSPEC.terminationGracePeriodSeconds Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.  false integer (int64)
KPODSPEC.activeDeadlineSeconds Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.  false integer (int64)
KPODSPEC.dnsPolicy Set DNS policy for containers within the pod. One of ClusterFirst or Default. Defaults to "ClusterFirst".  false string
KPODSPEC.nodeSelector NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node’s labels for the pod to be scheduled on that node. More info: http://releases.k8s.io/release-1.4/docs/user-guide/node-selection/README.md false object
KPODSPEC.serviceAccountName ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/release-1.4/docs/design/service_accounts.md false string
KPODSPEC.nodeName NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.  false string
KPODSPEC.hostNetwork Host networking requested for this pod. Use the host’s network namespace. If this option is set, the ports that will be used must be specified. Default to false.  false boolean false
KPODSPEC.hostPID Use the host’s pid namespace. Optional: Default to false.  false boolean false
KPODSPEC.hostIPC Use the host’s ipc namespace. Optional: Default to false.  false boolean false
KPODSPEC.securityContext SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.  false v1.PodSecurityContext
KPODSPEC.imagePullSecrets ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://releases.k8s.io/release-1.4/docs/user-guide/images.md#specifying-imagepullsecrets-on-a-pod false v1.LocalObjectReference array
KPODSPEC.hostname Specifies the hostname of the Pod If not specified, the pod’s hostname will be set to a system-defined value.  false string
KPODSPEC.subdomain If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.  false string

KPODSTATUS.phase Current condition of the pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#pod-phase false string
KPODSTATUS.conditions Current service state of pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#pod-conditions false v1.PodCondition array
KPODSTATUS.message A human readable message indicating details about why the pod is in this condition.  false string
KPODSTATUS.reason A brief CamelCase message indicating details about why the pod is in this state. e.g. OutOfDisk false string
KPODSTATUS.hostIP IP address of the host to which the pod is assigned. Empty if not yet scheduled.  false string
KPODSTATUS.podIP IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.  false string
KPODSTATUS.startTime RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.  false string (date-time)
KPODSTATUS.containerStatuses The list has one entry per container in the manifest. Each entry is currently the output of docker inspect. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#container-statuses false v1.ContainerStatus array

KPODCOND.type Type is the type of the condition. Currently only Ready. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#pod-conditions true string
KPODCOND.status Status is the status of the condition. Can be True, False, Unknown. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#pod-conditions true string
KPODCOND.lastProbeTime Last time we probed the condition.  false string (date-time)
KPODCOND.lastTransitionTime Last time the condition transitioned from one status to another.  false string (date-time)
KPODCOND.reason Unique, one-word, CamelCase reason for the condition’s last transition.  false string
KPODCOND.message Human-readable message indicating details about last transition.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:         POD TEMPLATE          :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KPODTEMPLATE.template Template defines the pods that will be created from this pod template. http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.PodTemplateSpec

KPODTEMPLATESPEC.metadata Standard object’s metadata. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#metadata false v1.ObjectMeta
KPODTEMPLATESPEC.spec Specification of the desired behavior of the pod. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.PodSpec


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       SECURITY CONTEXT        :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSECURITYCONTEXT.capabilities The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.  false v1.Capabilities
KSECURITYCONTEXT.privileged Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.  false boolean false
KSECURITYCONTEXT.seLinuxOptions The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.  false v1.SELinuxOptions
KSECURITYCONTEXT.runAsUser The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.  false integer (int64)
KSECURITYCONTEXT.runAsNonRoot Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.  false boolean false
KSECURITYCONTEXT.readOnlyRootFilesystem Whether this container has a read-only root filesystem. Default is false.  false boolean false

KPODSECURITYCONTEXT.seLinuxOptions Like KSECURITYCONTEXT, but for all pod's containers
KPODSECURITYCONTEXT.runAsUser Like KSECURITYCONTEXT, but for all pod's containers
KPODSECURITYCONTEXT.runAsNonRoot Like KSECURITYCONTEXT, but for all pod's containers
KPODSECURITYCONTEXT.supplementalGroups A list of groups applied to the first process run in each container, in addition to the container’s primary GID. If unspecified, no groups will be added to any container.  false integer (int32) array
KPODSECURITYCONTEXT.fsGroup A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR’d with rw-rw false integer (int64)

KCAP.add Added capabilities false v1.Capability array
KCAP.drop Removed capabilities false v1.Capability array

KSELOPT.user User is a SELinux user label that applies to the container.  false string
KSELOPT.role Role is a SELinux role label that applies to the container.  false string
KSELOPT.type Type is a SELinux type label that applies to the container.  false string
KSELOPT.level Level is SELinux level label that applies to the container.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:    REPLICATION CONTROLLER     :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KREPLICATIONCONTROLLER.spec Spec defines the specification of the desired behavior of the replication controller. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ReplicationControllerSpec
KREPLICATIONCONTROLLER.status Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ReplicationControllerStatus

KREPLICATIONCONTROLLERSPEC.replicas Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#what-is-a-replication-controller false integer (int32)
KREPLICATIONCONTROLLERSPEC.selector Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false object
KREPLICATIONCONTROLLERSPEC.template Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#pod-template false v1.PodTemplateSpec

KREPLICATIONCONTROLLERSTATUS.replicas Replicas is the most recently oberved number of replicas. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#what-is-a-replication-controller true integer (int32)
KREPLICATIONCONTROLLERSTATUS.fullyLabeledReplicas The number of pods that have labels matching the labels of the pod template of the replication controller.  false integer (int32)
KREPLICATIONCONTROLLERSTATUS.readyReplicas The number of ready replicas for this replication controller.  false integer (int32)
KREPLICATIONCONTROLLERSTATUS.observedGeneration ObservedGeneration reflects the generation of the most recently observed replication controller.  false integer (int64)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           EVICTION            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KEVICTION.deleteOptions DeleteOptions may be provided false v1.DeleteOptions

KDELETEOPTS.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.  false integer (int64)
KDELETEOPTS.preconditions Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.  false v1.Preconditions
KDELETEOPTS.orphanDependents Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object’s finalizers list.  false boolean false

KPRECOND.uid Specifies the target UID.  false types.UID


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        RESOURCE QUOTA         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KRESOURCEQUOTA.spec Spec defines the desired quota. http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ResourceQuotaSpec
KRESOURCEQUOTA.status Status defines the actual enforced quota and its current usage. http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ResourceQuotaStatus

KRESQUOTASPEC.hard Hard is the set of desired hard limits for each named resource. More info: http://releases.k8s.io/release-1.4/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota false object
KRESQUOTASPEC.scopes A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.  false v1.ResourceQuotaScope array

KRESQUOTASTATUS.hard Hard is the set of enforced hard limits for each named resource. More info: http://releases.k8s.io/release-1.4/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota false object
KRESQUOTASTATUS.used Used is the current observed total usage of the resource in the namespace.  false object


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           ENDPOINT            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KENDPOINT.subsets The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.  true v1.EndpointSubset array

KENDPOINTSUBSET.addresses IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.  false v1.EndpointAddress array
KENDPOINTSUBSET.notReadyAddresses IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.  false v1.EndpointAddress array
KENDPOINTSUBSET.ports Port numbers available on the related IP addresses.  false v1.EndpointPort array

KENDPOINTADDR.p The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.  true string
KENDPOINTADDR.hostname The Hostname of this endpoint false string
KENDPOINTADDR.nodeName Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.  false string
KENDPOINTADDR.targetRef Reference to object providing the endpoint.  false v1.ObjectReference

KENDPOINTPORT.name The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined.  false string
KENDPOINTPORT.port The port number of the endpoint.  true integer (int32)
KENDPOINTPORT.protocol The IP protocol for this port. Must be UDP or TCP. Default is TCP.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             SCALE             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSCALE.spec defines the behavior of the scale. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status.  false v1.ScaleSpec
KSCALE.status current status of the scale. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status. Read-only.  false v1.ScaleStatus

KSCALESTATUS.replicas actual number of observed instances of the scaled object.  true integer (int32)
KSCALESTATUS.selector label query over pods that should match the replicas count. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false object
KSCALESTATUS.targetSelector label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false string

KSCALESPEC.replicas desired number of instances for the scaled object.  false integer (int32)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             EVENT             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


GET /watch/RESOURCE[/NAME]                        #Same as GET /RESOURCE[/NAME], except:
                                                  #  - response body is EVENT
                                                  #  - output type:
                                                  #     - cannot be application/yaml
                                                  #     - application/TYPE -> application/TYPE;stream=watch
                                                  #  - not for ComponentStatus
QOBJ(GET|DELETE /RESOURCE).watch                  #Alternative way to do it
                                                  #Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. 
QOBJ(GET|DELETE /RESOURCE).resourceVersion        #When specified with a watch call, shows changes that occur after that particular version of a resource.
                                                  #Defaults to changes from the beginning of history.

KEVENT.involvedObject The object that this event is about.  true v1.ObjectReference
KEVENT.reason This should be a short, machine understandable string that gives the reason for the transition into the object’s current status.  false string
KEVENT.message A human-readable description of the status of this operation.  false string
KEVENT.source The component reporting this event. Should be a short machine understandable string.  false v1.EventSource
KEVENT.firstTimestamp The time at which the event was first recorded. (Time of server receipt is in TypeMeta.) false string (date-time)
KEVENT.lastTimestamp The time at which the most recent occurrence of this event was recorded.  false string (date-time)
KEVENT.count The number of times this event has occurred.  false integer (int32)
KEVENT.type Type of this event (Normal, Warning), new types could be added in the future false string

KEVENTSOURCE.component Component from which the event is generated.  false string
KEVENTSOURCE.host Host name on which the event is generated.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SECRET             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSECRET.data Data contains the secret data. Each key must be a valid DNS_SUBDOMAIN or leading dot followed by valid DNS_SUBDOMAIN. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4 false object
KSECRET.stringData stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.  false object
KSECRET.type Used to facilitate programmatic handling of secret data.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       PERSISTENT VOLUME       :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KPERSISTENTVOLUME.spec Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistent-volumes false v1.PersistentVolumeSpec
KPERSISTENTVOLUME.status Status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistent-volumes false v1.PersistentVolumeStatus

KPERSISTENTVOLUMESTATUS.phase Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#phase false string
KPERSISTENTVOLUMESTATUS.message A human-readable message indicating details about why the volume is in this state.  false string
KPERSISTENTVOLUMESTATUS.reason Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.  false string

KPERSISTENTVOLUMESPEC.capacity A description of the persistent volume’s resources and capacity. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#capacity false object
KPERSISTENTVOLUMESPEC.accessModes AccessModes contains all ways the volume can be mounted. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#access-modes false v1.PersistentVolumeAccessMode array
KPERSISTENTVOLUMESPEC.claimRef ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#binding false v1.ObjectReference
KPERSISTENTVOLUMESPEC.persistentVolumeReclaimPolicy What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#recycling-policy false string
KPERSISTENTVOLUMESPEC.gcePersistentDisk|awsElasticBlockStore|hostPath|glusterfs|nfs|rbd|iscsi|cinder|cephfs|fc|flocker|flexVolume|azureFile|vsphereVolume|quobyte|azureDisk Like KVOLUME


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:    PERSISTENT VOLUME CLAIM    :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KPERSISTENTVOLUMECLAIM.spec Spec defines the desired characteristics of a volume requested by a pod author. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistentvolumeclaims false v1.PersistentVolumeClaimSpec
KPERSISTENTVOLUMECLAIM.status Status represents the current information/status of a persistent volume claim. Read-only. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistentvolumeclaims false v1.PersistentVolumeClaimStatus

KPERSISTENTVOLUMECLAIMSPEC.accessModes AccessModes contains the desired access modes the volume should have. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#access-modes-1 false v1.PersistentVolumeAccessMode array
KPERSISTENTVOLUMECLAIMSPEC.selector A label query over volumes to consider for binding.  false unversioned.LabelSelector
KPERSISTENTVOLUMECLAIMSPEC.resources Resources represents the minimum resources the volume should have. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#resources false v1.ResourceRequirements
KPERSISTENTVOLUMECLAIMSPEC.volumeName VolumeName is the binding reference to the PersistentVolume backing this claim.  false string

KPERSISTENTVOLUMECLAIMSTATUS.phase Phase represents the current phase of PersistentVolumeClaim.  false string
KPERSISTENTVOLUMECLAIMSTATUS.accessModes AccessModes contains the actual access modes the volume backing the PVC has. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#access-modes-1 false v1.PersistentVolumeAccessMode array
KPERSISTENTVOLUMECLAIMSTATUS.capacity Represents the actual resources of the underlying volume.  false object

KPERSISTENTVOLUMECLAIMVOLUMESOURCE.claimName ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistentvolumeclaims true string
KPERSISTENTVOLUMECLAIMVOLUMESOURCE.readOnly Will force the ReadOnly setting in VolumeMounts. Default false.  false boolean false


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            VOLUME             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KVOLUME.name Volume’s name. Must be a DNS_LABEL and unique within the pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names true string
KVOLUME.hostPath HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#hostpath false v1.HostPathVolumeSource
KVOLUME.emptyDir EmptyDir represents a temporary directory that shares a pod’s lifetime. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#emptydir false v1.EmptyDirVolumeSource
KVOLUME.gcePersistentDisk GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet’s host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#gcepersistentdisk false v1.GCEPersistentDiskVolumeSource
KVOLUME.awsElasticBlockStore AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet’s host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#awselasticblockstore false v1.AWSElasticBlockStoreVolumeSource
KVOLUME.gitRepo GitRepo represents a git repository at a particular revision.  false v1.GitRepoVolumeSource
KVOLUME.secret Secret represents a secret that should populate this volume. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#secrets false v1.SecretVolumeSource
KVOLUME.nfs NFS represents an NFS mount on the host that shares a pod’s lifetime More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#nfs false v1.NFSVolumeSource
KVOLUME.iscsi ISCSI represents an ISCSI Disk resource that is attached to a kubelet’s host machine and then exposed to the pod. More info: http://releases.k8s.io/release-1.4/examples/volumes/iscsi/README.md false v1.ISCSIVolumeSource
KVOLUME.glusterfs Glusterfs represents a Glusterfs mount on the host that shares a pod’s lifetime. More info: http://releases.k8s.io/release-1.4/examples/volumes/glusterfs/README.md false v1.GlusterfsVolumeSource
KVOLUME.persistentVolumeClaim PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#persistentvolumeclaims false v1.PersistentVolumeClaimVolumeSource
KVOLUME.rbd RBD represents a Rados Block Device mount on the host that shares a pod’s lifetime. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md false v1.RBDVolumeSource
KVOLUME.flexVolume FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.  false v1.FlexVolumeSource
KVOLUME.cinder Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/release-1.4/examples/mysql-cinder-pd/README.md false v1.CinderVolumeSource
KVOLUME.cephfs CephFS represents a Ceph FS mount on the host that shares a pod’s lifetime false v1.CephFSVolumeSource
KVOLUME.flocker Flocker represents a Flocker volume attached to a kubelet’s host machine. This depends on the Flocker control service being running false v1.FlockerVolumeSource
KVOLUME.downwardAPI DownwardAPI represents downward API about the pod that should populate this volume false v1.DownwardAPIVolumeSource
KVOLUME.fc FC represents a Fibre Channel resource that is attached to a kubelet’s host machine and then exposed to the pod.  false v1.FCVolumeSource
KVOLUME.azureFile AzureFile represents an Azure File Service mount on the host and bind mount to the pod.  false v1.AzureFileVolumeSource
KVOLUME.configMap ConfigMap represents a configMap that should populate this volume false v1.ConfigMapVolumeSource
KVOLUME.vsphereVolume VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false v1.VsphereVirtualDiskVolumeSource
KVOLUME.quobyte Quobyte represents a Quobyte mount on the host that shares a pod’s lifetime false v1.QuobyteVolumeSource
KVOLUME.azureDisk AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.  false v1.AzureDiskVolumeSource

KHOSTPATHVOLUMESOURCE.path Path of the directory on the host. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#hostpath true string

KEMPTYDIRVOLUMESOURCE.medium What type of storage medium should back this directory. The default is "" which means to use the node’s default medium. Must be an empty string (default) or Memory. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#emptydir false string

KGCEPERSISTENTDISKVOLUMESOURCE.pdName Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#gcepersistentdisk true string
KGCEPERSISTENTDISKVOLUMESOURCE.fsType Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#gcepersistentdisk false string
KGCEPERSISTENTDISKVOLUMESOURCE.partition The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#gcepersistentdisk false integer (int32)
KGCEPERSISTENTDISKVOLUMESOURCE.readOnly ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#gcepersistentdisk false boolean false

KAWSEBSVOLUMESOURCE.volumeID Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#awselasticblockstore true string
KAWSEBSVOLUMESOURCE.fsType Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#awselasticblockstore false string
KAWSEBSVOLUMESOURCE.partition The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).  false integer (int32)
KAWSEBSVOLUMESOURCE.readOnly Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#awselasticblockstore false boolean false

KGITREPOVOLUMESOURCE.repository Repository URL true string
KGITREPOVOLUMESOURCE.revision Commit hash for the specified revision.  false string
KGITREPOVOLUMESOURCE.directory Target directory name. Must not contain or start with ... If . is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.  false string

KSECRETVOLUMESOURCE.secretName Name of the secret in the pod’s namespace to use. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#secrets false string
KSECRETVOLUMESOURCE.items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error. Paths must be relative and may not contain the .. path or start with ...  false v1.KeyToPath array
KSECRETVOLUMESOURCE.defaultMode Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  false integer (int32)

KNFSVOLUMESOURCE.server Server is the hostname or IP address of the NFS server. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#nfs true string
KNFSVOLUMESOURCE.path Path that is exported by the NFS server. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#nfs true string
KNFSVOLUMESOURCE.readOnly ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#nfs false boolean false

KISCSIVOLUMESOURCE.targetPortal iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).  true string
KISCSIVOLUMESOURCE.iqn Target iSCSI Qualified Name.  true string
KISCSIVOLUMESOURCE.lun iSCSI target lun number.  true integer (int32)
KISCSIVOLUMESOURCE.iscsiInterface Optional: Defaults to default (tcp). iSCSI interface name that uses an iSCSI transport.  false string
KISCSIVOLUMESOURCE.fsType Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#iscsi false string
KISCSIVOLUMESOURCE.readOnly ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.  false boolean false

KGLUSTERFSVOLUMESOURCE.endpoints EndpointsName is the endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/release-1.4/examples/volumes/glusterfs/README.md#create-a-pod true string
KGLUSTERFSVOLUMESOURCE.path Path is the Glusterfs volume path. More info: http://releases.k8s.io/release-1.4/examples/volumes/glusterfs/README.md#create-a-pod true string
KGLUSTERFSVOLUMESOURCE.readOnly ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/release-1.4/examples/volumes/glusterfs/README.md#create-a-pod false boolean false

KRBDVOLUMESOURCE.monitors A collection of Ceph monitors. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it true string array
KRBDVOLUMESOURCE.image The rados image name. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it true string
KRBDVOLUMESOURCE.fsType Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd false string
KRBDVOLUMESOURCE.pool The rados pool name. Default is rbd. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.  false string
KRBDVOLUMESOURCE.user The rados user name. Default is admin. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it false string
KRBDVOLUMESOURCE.keyring Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it false string
KRBDVOLUMESOURCE.secretRef SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it false v1.LocalObjectReference
KRBDVOLUMESOURCE.readOnly ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it false boolean false

KFLEXVOLUMESOURCE.driver Driver is the name of the driver to use for this volume.  true string
KFLEXVOLUMESOURCE.fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.  false string
KFLEXVOLUMESOURCE.secretRef Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.  false v1.LocalObjectReference
KFLEXVOLUMESOURCE.readOnly Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  false boolean false
KFLEXVOLUMESOURCE.options Optional: Extra command options if any.  false object

KCINDERVOLUMESOURCE.volumeID volume id used to identify the volume in cinder More info: http://releases.k8s.io/release-1.4/examples/mysql-cinder-pd/README.md true string
KCINDERVOLUMESOURCE.fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: http://releases.k8s.io/release-1.4/examples/mysql-cinder-pd/README.md false string
KCINDERVOLUMESOURCE.readOnly Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/release-1.4/examples/mysql-cinder-pd/README.md false boolean false

KCEPHFSVOLUMESOURCE.monitors Required: Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it true string array
KCEPHFSVOLUMESOURCE.path Optional: Used as the mounted root, rather than the full Ceph tree, default is / false string
KCEPHFSVOLUMESOURCE.user Optional: User is the rados user name, default is admin More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it false string
KCEPHFSVOLUMESOURCE.secretFile Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it false string
KCEPHFSVOLUMESOURCE.secretRef Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it false v1.LocalObjectReference
KCEPHFSVOLUMESOURCE.readOnly Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it false boolean false

KFLOCKERVOLUMESOURCE.datasetName Required: the volume name. This is going to be store on metadata → name on the payload for Flocker true string

KDOWNWARDAPIVOLUMESRC.items Items is a list of downward API volume file false v1.DownwardAPIVolumeFile array
KDOWNWARDAPIVOLUMESRC.defaultMode Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  false integer (int32)

KDOWNWARDAPIVOLUMEFILE.path Required: Path is the relative path name of the file to be created. Must not be absolute or contain the .. path. Must be utf-8 encoded. The first item of the relative path must not start with ..  true string
KDOWNWARDAPIVOLUMEFILE.fieldRef Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.  false v1.ObjectFieldSelector
KDOWNWARDAPIVOLUMEFILE.resourceFieldRef Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.  false v1.ResourceFieldSelector
KDOWNWARDAPIVOLUMEFILE.mode Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  false integer (int32)

KFCVOLUMESOURCE.targetWWNs Required: FC target worldwide names (WWNs) true string array
KFCVOLUMESOURCE.lun Required: FC target lun number true integer (int32)
KFCVOLUMESOURCE.fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.  false string
KFCVOLUMESOURCE.readOnly Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  false boolean false

KAZUREFILEVOLUMESOURCE.secretName the name of secret that contains Azure Storage Account Name and Key true string
KAZUREFILEVOLUMESOURCE.shareName Share Name true string
KAZUREFILEVOLUMESOURCE.readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  false boolean false

KCONFMAPVOLUMESOURCE.name Name of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
KCONFMAPVOLUMESOURCE.items If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the .. path or start with ...  false v1.KeyToPath array
KCONFMAPVOLUMESOURCE.defaultMode Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  false

KKEYTOPATH.key The key to project.  true string
KKEYTOPATH.path The relative path of the file to map the key to. May not be an absolute path. May not contain the path element ... May not start with the string ...  true string
KKEYTOPATH.mode Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.  false integer (int32)

KVSPHEREVIRTUALDISKVOLUMESOURCE.volumePath Path that identifies vSphere volume vmdk true string
KVSPHEREVIRTUALDISKVOLUMESOURCE.fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.  false string

KQUOBYTEVOLUMESOURCE.registry Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true string
KQUOBYTEVOLUMESOURCE.volume Volume is a string that references an already created Quobyte volume by name.  true string
KQUOBYTEVOLUMESOURCE.readOnly ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.  false boolean false
KQUOBYTEVOLUMESOURCE.user User to map volume access to Defaults to serivceaccount user false string
KQUOBYTEVOLUMESOURCE.group Group to map volume access to Default is no group false string

KAZUREDISKVOLUMESOURCE.diskName The Name of the data disk in the blob storage true string
KAZUREDISKVOLUMESOURCE.diskURI The URI the data disk in the blob storage true string
KAZUREDISKVOLUMESOURCE.cachingMode Host Caching mode: None, Read Only, Read Write.  false v1.AzureDataDiskCachingMode
KAZUREDISKVOLUMESOURCE.fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.  false string
KAZUREDISKVOLUMESOURCE.readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  false boolean false


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:       OBJECT REFERENCE        :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KOBJREF.namespace Namespace of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/namespaces.md false string
KOBJREF.name Name of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
KOBJREF.uid UID of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#uids false string
KOBJREF.resourceVersion Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#concurrency-control-and-consistency false string
KOBJREF.fieldPath If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.  false string

KLOCALOBJREF.name Name of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            STATUS             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSTATUS.status Status of the operation. One of: "Success" or "Failure". More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false string
KSTATUS.message A human-readable description of the status of this operation.  false string
KSTATUS.reason A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.  false string
KSTATUS.details Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.  false unversioned.StatusDetails
KSTATUS.code Suggested HTTP return code for this status, 0 if not set.  false integer (int32)

KSTATUSDETAILS.name The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).  false string
KSTATUSDETAILS.group The group attribute of the resource associated with the status StatusReason.  false string
KSTATUSDETAILS.kind The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#types-kinds false string
KSTATUSDETAILS.causes The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.  false unversioned.StatusCause array
KSTATUSDETAILS.retryAfterSeconds If specified, the time in seconds before the operation should be retried.  false integer (int32)

KSTATUSCAUSE.reason A machine-readable description of the cause of the error. If this value is empty there is no information available.  false string
KSTATUSCAUSE.message A human-readable description of the cause of the error. This field may be presented as-is to a reader.  false string
KSTATUSCAUSE.field The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples: "name" - the field "name" on the current resource "items[0].name" - the field "name" on the first array entry in "items" false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           SELECTOR            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KLABELSELECTOR.matchLabels matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.  false object
KLABELSELECTOR.matchExpressions matchExpressions is a list of label selector requirements. The requirements are ANDed.  false unversioned.LabelSelectorRequirement array

KLABELSELECTORREQUIREMENT.key key is the label key that the selector applies to.  true string
KLABELSELECTORREQUIREMENT.operator operator represents a key’s relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.  true string
KLABELSELECTORREQUIREMENT.values values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.  false string array

KOBJFIELDSELECTOR.apiVersion Version of the schema the FieldPath is written in terms of, defaults to "v1".  false string
KOBJFIELDSELECTOR.fieldPath Path of the field to select in the specified API version.  true string

KRESFIELDSELECTOR.containerName Container name: required for volumes, optional for env vars false string
KRESFIELDSELECTOR.resource Required: resource to select true string
KRESFIELDSELECTOR.divisor Specifies the output format of the exposed resources, defaults to "1" false string

KCONFMAPKEYSELECTOR.name Name of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
KCONFMAPKEYSELECTOR.key The key to select.  true string

KSECRETKEYSELECTOR.name Name of the referent. More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
KSECRETKEYSELECTOR.key The key of the secret to select from. Must be a valid secret key.  true string

QOBJ.pretty                                       #BOOL. If true (def: false), then the output is pretty printed
QOBJ(GET /RESOURCE/NAME).export                   #BOOL (def: false). Should this value be exported. Export strips fields that a user can not specify.
QOBJ(GET /RESOURCE/NAME).exact                    #BOOL (def: false). Should the export be exact. Exact export maintains cluster-specific fields like Namespace
QOBJ(GET|DELETE /RESOURCE).labelSelector          #STR. A selector to restrict the list of returned objects by their labels.
QOBJ(GET|DELETE /RESOURCE).fieldSelector          #STR. A selector to restrict the list of returned objects by their labels.


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           CONTAINER           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KCONTAINER.name Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.  true string
KCONTAINER.image Docker image name. More info: http://releases.k8s.io/release-1.4/docs/user-guide/images.md false string
KCONTAINER.command Entrypoint array. Not executed within a shell. The docker image’s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container’s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/containers.md#containers-and-commands false string array
KCONTAINER.args Arguments to the entrypoint. The docker image’s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container’s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/containers.md#containers-and-commands false string array
KCONTAINER.workingDir Container’s working directory. If not specified, the container runtime’s default will be used, which might be configured in the container image. Cannot be updated.  false string
KCONTAINER.ports List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.  false v1.ContainerPort array
KCONTAINER.env List of environment variables to set in the container. Cannot be updated.  false v1.EnvVar array
KCONTAINER.resources Compute Resources required by this container. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#resources false v1.ResourceRequirements
KCONTAINER.volumeMounts Pod volumes to mount into the container’s filesystem. Cannot be updated.  false v1.VolumeMount array
KCONTAINER.livenessProbe Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#container-probes false v1.Probe
KCONTAINER.readinessProbe Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#container-probes false v1.Probe
KCONTAINER.lifecycle Actions that the management system should take in response to container lifecycle events. Cannot be updated.  false v1.Lifecycle
KCONTAINER.terminationMessagePath Optional: Path at which the file to which the container’s termination message will be written is mounted into the container’s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.  false string
KCONTAINER.imagePullPolicy Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/images.md#updating-images false string
KCONTAINER.securityContext Security options the pod should run with. More info: http://releases.k8s.io/release-1.4/docs/design/security_context.md false v1.SecurityContext
KCONTAINER.stdin Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.  false boolean false
KCONTAINER.stdinOnce Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false false boolean false
KCONTAINER.tty Whether this container should allocate a TTY for itself, also requires stdin to be true. Default is false.  false boolean false

KCONTAINERPORT.name If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.  false string
KCONTAINERPORT.hostPort Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.  false integer (int32)
KCONTAINERPORT.containerPort Number of port to expose on the pod’s IP address. This must be a valid port number, 0 < x < 65536.  true integer (int32)
KCONTAINERPORT.protocol Protocol for port. Must be UDP or TCP. Defaults to "TCP".  false string
KCONTAINERPORT.hostIP What host IP to bind the external port to.  false string

KENVVAR.name Name of the environment variable. Must be a C_IDENTIFIER.  true string
KENVVAR.value Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".  false string
KENVVAR.valueFrom Source for the environment variable’s value. Cannot be used if value is not empty.  false v1.EnvVarSource

KENVVARSOURCE.fieldRef Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP.  false v1.ObjectFieldSelector
KENVVARSOURCE.resourceFieldRef Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.  false v1.ResourceFieldSelector
KENVVARSOURCE.configMapKeyRef Selects a key of a ConfigMap.  false v1.ConfigMapKeySelector
KENVVARSOURCE.secretKeyRef Selects a key of a secret in the pod’s namespace false v1.SecretKeySelector

KRESREQUIREMENTS.limits Limits describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/ false object
KRESREQUIREMENTS.requests Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/ false object

KVOLUMEMOUNT.name This must match the Name of a Volume.  true string
KVOLUMEMOUNT.readOnly Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.  false boolean false
KVOLUMEMOUNT.mountPath Path within the container at which the volume should be mounted. Must not contain :.  true string
KVOLUMEMOUNT.subPath Path within the volume from which the container’s volume should be mounted. Defaults to "" (volume’s root).  false string

KPROBE.exec One and only one of the following should be specified. Exec specifies the action to take.  false v1.ExecAction
KPROBE.httpGet HTTPGet specifies the http request to perform.  false v1.HTTPGetAction
KPROBE.tcpSocket TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported false v1.TCPSocketAction
KPROBE.initialDelaySeconds Number of seconds after the container has started before liveness probes are initiated. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#container-probes false integer (int32)
KPROBE.timeoutSeconds Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: http://releases.k8s.io/release-1.4/docs/user-guide/pod-states.md#container-probes false integer (int32)
KPROBE.periodSeconds How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.  false integer (int32)
KPROBE.successThreshold Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.  false integer (int32)
KPROBE.failureThreshold Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.  false integer (int32)

KEXECACTION.command Command is the command line to execute inside the container, the working directory for the command is root (/) in the container’s filesystem. The command is simply exec’d, it is not run inside a shell, so traditional shell instructions (' ', etc) won’t work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.  false string array

KHTTPGETACTION.path Path to access on the HTTP server.  false string
KHTTPGETACTION.port Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.  true string
KHTTPGETACTION.host Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.  false string
KHTTPGETACTION.scheme Scheme to use for connecting to the host. Defaults to HTTP.  false string
KHTTPGETACTION.httpHeaders Custom headers to set in the request. HTTP allows repeated headers.  false v1.HTTPHeader array

KHTTPHEADER.name The header field name true string
KHTTPHEADER.value The header field value true string

KTCPSOCKETACTION.port Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.  true string

KLIFECYCLE.postStart PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://releases.k8s.io/release-1.4/docs/user-guide/container-environment.md#hook-details false v1.Handler
KLIFECYCLE.preStop PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://releases.k8s.io/release-1.4/docs/user-guide/container-environment.md#hook-details false v1.Handler

KHANDLER.exec One and only one of the following should be specified. Exec specifies the action to take.  false v1.ExecAction
KHANDLER.httpGet HTTPGet specifies the http request to perform.  false v1.HTTPGetAction
KHANDLER.tcpSocket TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported false v1.TCPSocketAction

KCONTAINERSTATUS.name This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.  true string
KCONTAINERSTATUS.state Details about the container’s current condition.  false v1.ContainerState
KCONTAINERSTATUS.lastState Details about the container’s last termination condition.  false v1.ContainerState
KCONTAINERSTATUS.ready Specifies whether the container has passed its readiness probe.  true boolean false
KCONTAINERSTATUS.restartCount The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.  true integer (int32)
KCONTAINERSTATUS.image The image the container is running. More info: http://releases.k8s.io/release-1.4/docs/user-guide/images.md true string
KCONTAINERSTATUS.imageID ImageID of the container’s image.  true string
KCONTAINERSTATUS.containerID Container’s ID in the format docker://<container_id>. More info: http://releases.k8s.io/release-1.4/docs/user-guide/container-environment.md#container-information false string

KCONTAINERSTATE.waiting Details about a waiting container false v1.ContainerStateWaiting
KCONTAINERSTATE.running Details about a running container false v1.ContainerStateRunning
KCONTAINERSTATE.terminated Details about a terminated container false v1.ContainerStateTerminated

KCONTAINERSTATEWAITING.reason (brief) reason the container is not yet running.  false string
KCONTAINERSTATEWAITING.message Message regarding why the container is not yet running.  false string

KCONTAINERSTATERUNNING.startedAt Time at which the container was last (re-)started false string (date-time)

KCONTAINERSTATETERMINATED.exitCode Exit status from the last termination of the container true integer (int32)
KCONTAINERSTATETERMINATED.signal Signal from the last termination of the container false integer (int32)
KCONTAINERSTATETERMINATED.reason (brief) reason from the last termination of the container false string
KCONTAINERSTATETERMINATED.message Message regarding the last termination of the container false string
KCONTAINERSTATETERMINATED.startedAt Time at which previous execution of the container started false string (date-time)
KCONTAINERSTATETERMINATED.finishedAt Time at which the container last terminated false string (date-time)
KCONTAINERSTATETERMINATED.containerID Container’s ID in the format docker://<container_id> false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             NODE              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KNODE.spec Spec defines the behavior of a node. http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.NodeSpec
KNODE.status Most recently observed status of the node. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.NodeStatus

KNODESTATUS.capacity Capacity represents the total resources of a node. More info: http://releases.k8s.io/release-1.4/docs/user-guide/persistent-volumes.md#capacity for more details.  false object
KNODESTATUS.allocatable Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.  false object
KNODESTATUS.phase NodePhase is the recently observed lifecycle phase of the node. More info: http://releases.k8s.io/release-1.4/docs/admin/node.md#node-phase The field is never populated, and now is deprecated.  false string
KNODESTATUS.conditions Conditions is an array of current observed node conditions. More info: http://releases.k8s.io/release-1.4/docs/admin/node.md#node-condition false v1.NodeCondition array
KNODESTATUS.addresses List of addresses reachable to the node. Queried from cloud provider, if available. More info: http://releases.k8s.io/release-1.4/docs/admin/node.md#node-addresses false v1.NodeAddress array
KNODESTATUS.daemonEndpoints Endpoints of daemons running on the Node.  false v1.NodeDaemonEndpoints
KNODESTATUS.nodeInfo Set of ids/uuids to uniquely identify the node. More info: http://releases.k8s.io/release-1.4/docs/admin/node.md#node-info false v1.NodeSystemInfo
KNODESTATUS.images List of container images on this node false v1.ContainerImage array
KNODESTATUS.volumesInUse List of attachable volumes in use (mounted) by the node.  false v1.UniqueVolumeName array
KNODESTATUS.volumesAttached List of volumes that are attached to the node.  false v1.AttachedVolume array

KNODECOND.type Type of node condition.  true string
KNODECOND.status Status of the condition, one of True, False, Unknown.  true string
KNODECOND.lastHeartbeatTime Last time we got an update on a given condition.  false string (date-time)
KNODECOND.lastTransitionTime Last time the condition transit from one status to another.  false string (date-time)
KNODECOND.reason (brief) reason for the condition’s last transition.  false string
KNODECOND.message Human readable message indicating details about last transition.  false string

KNODEADDR.type Node address type, one of Hostname, ExternalIP or InternalIP.  true string
KNODEADDR.address The node address.  true string

KNODEDAEMONENDPOINTS.kubeletEndpoint Endpoint on which Kubelet is listening.  false v1.DaemonEndpoint

KDAEMONENDPOINT.Port Port number of the given endpoint.  true integer (int32)

KNODESYSTEMINFO.machineID Machine ID reported by the node.  true string
KNODESYSTEMINFO.systemUUID System UUID reported by the node.  true string
KNODESYSTEMINFO.bootID Boot ID reported by the node.  true string
KNODESYSTEMINFO.kernelVersion Kernel Version reported by the node from uname -r (e.g. 3.16.0-0.bpo.4-amd64).  true string
KNODESYSTEMINFO.osImage OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).  true string
KNODESYSTEMINFO.containerRuntimeVersion ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).  true string
KNODESYSTEMINFO.kubeletVersion Kubelet Version reported by the node.  true string
KNODESYSTEMINFO.kubeProxyVersion KubeProxy Version reported by the node.  true string
KNODESYSTEMINFO.operatingSystem The Operating System reported by the node true string
KNODESYSTEMINFO.architecture The Architecture reported by the node true string

KCONTAINERIMAGE.names Names by which this image is known. e.g. ["gcr.io/google_containers/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"] true string array
KCONTAINERIMAGE.sizeBytes The size of the image in bytes.  false integer (int64)

KATTACHEDVOLUME.name Name of the attached volume true string
KATTACHEDVOLUME.devicePath DevicePath represents the device path where the volume should be avilable true string

KNODESPEC.podCIDR PodCIDR represents the pod IP range assigned to the node.  false string
KNODESPEC.providerID ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID> false string
KNODESPEC.unschedulable Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: <a href="http://releases.k8s.io/release-1.4/docs/admin/node.md#manual-node-administration"`">http://releases.k8s.io/release-1.4/docs/admin/node.md#manual-node-administration"`</a> false boolean false


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            SERVICE            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSERVICE.spec Spec defines the behavior of a service. http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ServiceSpec
KSERVICE.status Most recently observed status of the service. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.ServiceStatus

KSERVICESPEC.machineID Machine ID reported by the node.  true string
KSERVICESPEC.systemUUID System UUID reported by the node.  true string
KSERVICESPEC.bootID Boot ID reported by the node.  true string
KSERVICESPEC.kernelVersion Kernel Version reported by the node from uname -r (e.g. 3.16.0-0.bpo.4-amd64).  true string
KSERVICESPEC.osImage OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).  true string
KSERVICESPEC.containerRuntimeVersion ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).  true string
KSERVICESPEC.kubeletVersion Kubelet Version reported by the node.  true string
KSERVICESPEC.kubeProxyVersion KubeProxy Version reported by the node.  true string
KSERVICESPEC.operatingSystem The Operating System reported by the node true string
KSERVICESPEC.architecture The Architecture reported by the node true string

KSERVICEPORT.name The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the Name field in EndpointPort objects. Optional if only one ServicePort is defined on this service.  false string
KSERVICEPORT.protocol The IP protocol for this port. Supports "TCP" and "UDP". Default is TCP.  false string
KSERVICEPORT.port The port that will be exposed by this service.  true integer (int32)
KSERVICEPORT.targetPort Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod’s container ports. If this is not specified, the value of the port field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the port field. More info: http://releases.k8s.io/release-1.4/docs/user-guide/services.md#defining-a-service false string
KSERVICEPORT.nodePort The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: http://releases.k8s.io/release-1.4/docs/user-guide/services.md#type—nodeport false integer (int32)

KSERVICESTATUS.loadBalancer LoadBalancer contains the current status of the load-balancer, if one is present.  false v1.LoadBalancerStatus

KLOADBALANCERSTATUS.ingress Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.  false v1.LoadBalancerIngress array

KLOADBALANCERINGRESS.ip IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers) false string
KLOADBALANCERINGRESS.hostname Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers) false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        SERVICE ACCOUNT        :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KSERVICEACCOUNT.secrets Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: http://releases.k8s.io/release-1.4/docs/user-guide/secrets.md false v1.ObjectReference array
KSERVICEACCOUNT.imagePullSecrets ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: http://releases.k8s.io/release-1.4/docs/user-guide/secrets.md#manually-specifying-an-imagepullsecret false v1.LocalObjectReference array


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          AUTOSCALER           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KHORPODAUTOSCALER.spec behaviour of autoscaler. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status.  false v1.HorizontalPodAutoscalerSpec
KHORPODAUTOSCALER.status current information about the autoscaler.  false v1.HorizontalPodAutoscalerStatus

KHORPODAUTOSCALERSTATUS.observedGeneration most recent generation observed by this autoscaler.  false integer (int64)
KHORPODAUTOSCALERSTATUS.lastScaleTime last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.  false string (date-time)
KHORPODAUTOSCALERSTATUS.currentReplicas current number of replicas of pods managed by this autoscaler.  true integer (int32)
KHORPODAUTOSCALERSTATUS.desiredReplicas desired number of replicas of pods managed by this autoscaler.  true integer (int32)
KHORPODAUTOSCALERSTATUS.cpuUtilization target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified it defaults to the target CPU utilization at 80% of the requested resources.  false v1beta1.CPUTargetUtilization

KCPUTARGETUTILIZATION.targetPercentage fraction of the requested CPU that should be utilized/used, e.g. 70 means that 70% of the requested CPU should be in use.  true integer (int32)

KHORPODAUTOSCALERSPEC.scaleRef reference to Scale subresource; horizontal pod autoscaler will learn the current resource consumption from its status, and will set the desired number of pods by modifying its spec.  true v1beta1.SubresourceReference
KHORPODAUTOSCALERSPEC.minReplicas lower limit for the number of pods that can be set by the autoscaler, default 1.  false integer (int32)
KHORPODAUTOSCALERSPEC.maxReplicas upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.  true integer (int32)
KHORPODAUTOSCALERSPEC.targetCPUUtilizationPercentage target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.  false integer (int32)

KSUBRESREF.name Name of the referent; More info: http://releases.k8s.io/release-1.4/docs/user-guide/identifiers.md#names false string
KSUBRESREF.subresource Subresource name of the referent false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:              JOB              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KJOB.spec Spec is a structure defining the expected behavior of a job. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.JobSpec
KJOB.status Status is a structure describing current status of a job. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1.JobStatus

KJOBSTATUS.conditions Conditions represent the latest available observations of an object’s current state. More info: http://releases.k8s.io/release-1.4/docs/user-guide/jobs.md false v1.JobCondition array
KJOBSTATUS.startTime StartTime represents time when the job was acknowledged by the Job Manager. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.  false string (date-time)
KJOBSTATUS.completionTime CompletionTime represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.  false string (date-time)
KJOBSTATUS.active Active is the number of actively running pods.  false integer (int32)
KJOBSTATUS.succeeded Succeeded is the number of pods which reached Phase Succeeded.  false integer (int32)
KJOBSTATUS.failed Failed is the number of pods which reached Phase Failed.  false integer (int32)

KJOBCOND.type Type of job condition, Complete or Failed.  true string
KJOBCOND.status Status of the condition, one of True, False, Unknown.  true string
KJOBCOND.lastProbeTime Last time the condition was checked.  false string (date-time)
KJOBCOND.lastTransitionTime Last time the condition transit from one status to another.  false string (date-time)
KJOBCOND.reason (brief) reason for the condition’s last transition.  false string
KJOBCOND.message Human readable message indicating details about last transition.  false string

KJOBSPEC.parallelism Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://releases.k8s.io/release-1.4/docs/user-guide/jobs.md false integer (int32)
KJOBSPEC.completions Completions specifies the desired number of successfully finished pods the job should be run with. Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value. Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: http://releases.k8s.io/release-1.4/docs/user-guide/jobs.md false integer (int32)
KJOBSPEC.activeDeadlineSeconds Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer false integer (int64)
KJOBSPEC.selector Selector is a label query over pods that should match the pod count. Normally, the system sets this field for you. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false v1.LabelSelector
KJOBSPEC.manualSelector ManualSelector controls generation of pod labels and pod selectors. Leave manualSelector unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template. When true, the user is responsible for picking unique labels and specifying the selector. Failure to pick a unique label may cause this and other jobs to not function correctly. However, You may see manualSelector=true in jobs that were created with the old extensions/v1beta1 API. More info: http://releases.k8s.io/release-1.4/docs/design/selector-generation.md false boolean false
KJOBSPEC.template Template is the object that describes the pod that will be created when executing a job. More info: http://releases.k8s.io/release-1.4/docs/user-guide/jobs.md true v1.PodTemplateSpec


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          DEPLOYMENT           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KDEPLOYMENT.spec Specification of the desired behavior of the Deployment.  false v1beta1.DeploymentSpec
KDEPLOYMENT.status Most recently observed status of the Deployment.  false v1beta1.DeploymentStatus

KDEPLOYMENTSTATUS.observedGeneration The generation observed by the deployment controller.  false integer (int64)
KDEPLOYMENTSTATUS.replicas Total number of non-terminated pods targeted by this deployment (their labels match the selector).  false integer (int32)
KDEPLOYMENTSTATUS.updatedReplicas Total number of non-terminated pods targeted by this deployment that have the desired template spec.  false integer (int32)
KDEPLOYMENTSTATUS.availableReplicas Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.  false integer (int32)
KDEPLOYMENTSTATUS.unavailableReplicas Total number of unavailable pods targeted by this deployment.  false integer (int32)

KDEPLOYMENTSPEC.replicas Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.  false integer (int32)
KDEPLOYMENTSPEC.selector Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.  false v1beta1.LabelSelector
KDEPLOYMENTSPEC.template Template describes the pods that will be created.  true v1.PodTemplateSpec
KDEPLOYMENTSPEC.strategy The deployment strategy to use to replace existing pods with new ones.  false v1beta1.DeploymentStrategy
KDEPLOYMENTSPEC.minReadySeconds Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) false integer (int32)
KDEPLOYMENTSPEC.revisionHistoryLimit The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.  false integer (int32)
KDEPLOYMENTSPEC.paused Indicates that the deployment is paused and will not be processed by the deployment controller.  false boolean false
KDEPLOYMENTSPEC.rollbackTo The config this deployment is rolling back to. Will be cleared after rollback is done.  false v1beta1.RollbackConfig

KDEPLOYMENTSTRATEGY.type Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.  false string
KDEPLOYMENTSTRATEGY.rollingUpdate Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.  false v1beta1.RollingUpdateDeployment

KROLLINGUPDATEDEPLOYMENT.maxUnavailable The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.  false string
KROLLINGUPDATEDEPLOYMENT.maxSurge The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.  false string


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:      DEPLOYMENTROLLBACK       :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KDEPLOYMENTROLLBACK.name Required: This must match the Name of a deployment.  true string
KDEPLOYMENTROLLBACK.updatedAnnotations The annotations to be updated to a deployment false object
KDEPLOYMENTROLLBACK.rollbackTo The config of this deployment rollback.  true v1beta1.RollbackConfig

KROLLBACKCONF.revision The revision to rollback to. If set to 0, rollbck to the last revision.  false integer (int64)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          DAEMON SET           :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KDAEMONSET.spec Spec defines the desired behavior of this daemon set. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.DaemonSetSpec
KDAEMONSET.status Status is the current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.DaemonSetStatus

KDAEMONSETSTATUS.currentNumberScheduled CurrentNumberScheduled is the number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: http://releases.k8s.io/release-1.4/docs/admin/daemons.md true integer (int32)
KDAEMONSETSTATUS.numberMisscheduled NumberMisscheduled is the number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: http://releases.k8s.io/release-1.4/docs/admin/daemons.md true integer (int32)
KDAEMONSETSTATUS.desiredNumberScheduled DesiredNumberScheduled is the total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: http://releases.k8s.io/release-1.4/docs/admin/daemons.md true integer (int32)

KDAEMONSETSPEC.selector Selector is a label query over pods that are managed by the daemon set. Must match in order to be controlled. If empty, defaulted to labels on Pod template. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false v1beta1.LabelSelector
KDAEMONSETSPEC.template Template is the object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template’s node selector (or on every node if no node selector is specified). More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#pod-template true v1.PodTemplateSpec


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:            INGRESS            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KINGRESS.spec Spec is the desired state of the Ingress. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.IngressSpec
KINGRESS.status Status is the current state of the Ingress. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.IngressStatus

KINGRESSSPEC.backend A default backend capable of servicing requests that don’t match any rule. At least one of backend or rules must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.  false v1beta1.IngressBackend
KINGRESSSPEC.tls TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.  false v1beta1.IngressTLS array
KINGRESSSPEC.rules A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.  false v1beta1.IngressRule array

KINGRESSTLS.hosts Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.  false string array
KINGRESSTLS.secretName SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.  false string

KINGRESSRULE.host Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the IP in the Spec of the parent Ingress.  2. The : delimiter is not respected because ports are not allowed.  Currently the port of an Ingress is implicitly :80 for http and :443 for https.  Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.  false string
KINGRESSRULE.http false v1beta1.HTTPIngressRuleValue

KHTTPINGRESSRULEVALUE.paths A collection of paths that map requests to backends.  true v1beta1.HTTPIngressPath array

KHTTPINGRESSPATH.path Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a /. If unspecified, the path defaults to a catch all sending traffic to the backend.  false string
KHTTPINGRESSPATH.backend Backend defines the referenced service endpoint to which the traffic will be forwarded to.  true v1beta1.IngressBackend

KINGRESSBACKEND.serviceName Specifies the name of the referenced service.  true string
KINGRESSBACKEND.servicePort Specifies the port of the referenced service.  true string

KINGRESSSTATUS.loadBalancer LoadBalancer contains the current status of the load-balancer.  false v1.LoadBalancerStatus


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:          REPLICA SET          :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


KREPLICASET.spec Spec defines the specification of the desired behavior of the ReplicaSet. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.ReplicaSetSpec
KREPLICASET.status Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/release-1.4/docs/devel/api-conventions.md#spec-and-status false v1beta1.ReplicaSetStatus

KREPLICASETSTATUS.replicas Replicas is the most recently oberved number of replicas. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#what-is-a-replication-controller true integer (int32)
KREPLICASETSTATUS.fullyLabeledReplicas The number of pods that have labels matching the labels of the pod template of the replicaset.  false integer (int32)
KREPLICASETSTATUS.readyReplicas The number of ready replicas for this replica set.  false integer (int32)
KREPLICASETSTATUS.observedGeneration ObservedGeneration reflects the generation of the most recently observed ReplicaSet.  false integer (int64)

KREPLICASETSPEC.replicas Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#what-is-a-replication-controller false integer (int32)
KREPLICASETSPEC.selector Selector is a label query over pods that should match the replica count. If the selector is empty, it is defaulted to the labels present on the pod template. Label keys and values that must match in order to be controlled by this replica set. More info: http://releases.k8s.io/release-1.4/docs/user-guide/labels.md#label-selectors false v1beta1.LabelSelector
KREPLICASETSPEC.template Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: http://releases.k8s.io/release-1.4/docs/user-guide/replication-controller.md#pod-template false v1.PodTemplateSpec


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:        NETWORK POLICY         :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


NETWORKPOLICY.spec Specification of the desired behavior for this NetworkPolicy.  false v1beta1.NetworkPolicySpec

NETWORKPOLICYSPEC.podSelector Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.  true v1beta1.LabelSelector
KNETWORKPOLICYSPEC.ingress List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if namespace.networkPolicy.ingress.isolation is undefined and cluster policy allows it, OR if the traffic source is the pod’s local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not affect ingress isolation. If this field is present and contains at least one rule, this policy allows any traffic which matches at least one of the ingress rules in this list.  false v1beta1.NetworkPolicyIngressRule array

KNETWORKPOLICYINGRESSRULE.ports List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is not provided, this rule matches all ports (traffic not restricted by port). If this field is empty, this rule matches no ports (no traffic matches). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.  false v1beta1.NetworkPolicyPort array
KNETWORKPOLICYINGRESSRULE.from List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is not provided, this rule matches all sources (traffic not restricted by source). If this field is empty, this rule matches no sources (no traffic matches). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.  false v1beta1.NetworkPolicyPeer array

KNETWORKPOLICYPORT.protocol Optional. The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.  false v1.Protocol
KNETWORKPOLICYPORT.port If specified, the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.  false string

KNETWORKPOLICYPEER.podSelector This is a label selector which selects Pods in this namespace. This field follows standard label selector semantics. If not provided, this selector selects no pods. If present but empty, this selector selects all pods in this namespace.  false v1beta1.LabelSelector
KNETWORKPOLICYPEER.namespaceSelector Selects Namespaces using cluster scoped-labels. This matches all pods in all namespaces selected by this label selector. This field follows standard label selector semantics. If omitted, this selector selects no namespaces. If present but empty, this selector selects all namespaces.  false v1beta1.LabelSelector


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:     THIRD PARTY RESOURCE      :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


THIRDPARTYRESOURCE.description                    #STR (def: false). Description is the description of this object.
THIRDPARTYRESOURCE.versions                       #APIVERSION_ARR. Versions are versions for this third party object
APIVERSION.name                                   #STR. Name of this version (e.g. v1)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:           REST API            :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


ROOT_URL                                          #HOST/api/VERSION[/namespaces/NAMESPACE]/
                                                  #Implied for all endpoints below
VERSION                                           #Different versions offer different possible entities:
                                                  #  - batch/v1: only Job
                                                  #  - autoscaling/v1: only HorizontalPodAutoscaler
                                                  #  - v1beta1: Job, HorizontalPodAutoscaler, Deployment, ReplicaSet, DaemonSet, Ingress, NetworkPolicy, ThirdPartyResource, Scale
                                                  #  - v1: everything else
                                                  #Can query:
                                                  #  - GET HOST/api[s]: available versions
                                                  #  - GET HOST/version: current Git version
NAMESPACE                                         #Required. Exceptions:
                                                  #  - optional with GET /ROOT/RESOURCE (not subresources)
                                                  #  - some entities do not use namespaces (see namespace section)
RESOURCES                                         #Plural lowercase resource name, e.g. "jobs"
                                                  #See resource list
RESOURCE                                          #Either:
                                                  #  - nothing (i.e. top-level): for APIResource
                                                  #  - RESOURCES: for most resources
                                                  #  - /PARENT/NAME/RESOURCES: for subresources, i.e.:
                                                  #     - DeploymentRollback: under Deployment
                                                  #     - Binding: optionally under Pod
                                                  #     - Eviction: under Pod
                                                  #     - Scale: under Deployment|ReplicaSet|ReplicationController

REST OPERATIONS ==>                               #Request|response body possible type:
                                                  #  - application/json (def)
                                                  #  - application/yaml
                                                  #  - application/vnd.kubernetes.protobuf
                                                  #Possible operations follow.
                                                  #Some resources cannot do all operations:
                                                  #  - read-only:
                                                  #     - APIResource: only GET /RESOURCE
                                                  #     - ComponentStatus: only GET
                                                  #  - update-only:
                                                  #     - Binding|Eviction: only POST|PUT
                                                  #     - DeploymentRollback: only POST
                                                  #  - no creation|deletion:
                                                  #     - Scale: no POST|DELETE
                                                  #  - no mass delete:
                                                  #     - Service: no DELETE /RESOURCE
GET /RESOURCE                                     #Response body: RESOURCE_LIST
GET /RESOURCE/NAME                                #Response body: RESOURCE
POST /RESOURCE                                    #Request body: RESOURCE. Response body: RESOURCE
PUT /RESOURCE/NAME                                #Request body: RESOURCE. Response body: RESOURCE
PATCH /RESOURCE/NAME                              #Request body:
                                                  #  - PATCH
                                                  #  - possible types:
                                                  #     - application/json-patch+json
                                                  #     - application/merge-patch+json
                                                  #     - application/strategic-merge-patch+json
                                                  #Response body: RESOURCE
DELETE /RESOURCE                                  #Response body: STATUS
DELETE /RESOURCE/NAME                             #Request body: DELETE_OPTIONS. Response body: STATUS

GET|PUT|PATCH /RESOURCE/NAME/status               #Like GET|PUT|PATCH /RESOURCE/NAME except:
                                                  #  - targets RESOURCE.status, i.e. it must exist and be an OBJ
                                                  #  - can only use QOBJ.pretty

QOBJ                                              #Query variable with REST routes, for any call
QOBJ(...)                                         #Query variable with REST routes, for specific calls


NON-REST ROUTES ==>                               #Do not use REST entities|operations
                                                  #Use different QOBJ
                                                  #List: /pods/NAME/attach, /pods/NAME/exec, /pods/NAME/portforward, /pods/NAME/log, */proxy*

NON-TOP-LEVEL REST RESOURCES ==>                  #The following do not have top-level REST routes, but are subresources of Pod: Container, Volume, SecurityContext
                                                  
NON-TOP-LEVEL UTILITIES ==>                       #The following do not have top-level REST routes, but are utilities: selectors, object references, metadata


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             PROXY             :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


METHOD /RESOURCE/NAME/proxy                       #METHOD: GET|PUT|POST|DELETE
METHOD /RESOURCE/NAME/proxy/PATH                  #RESOURCE: pods|services|nodes
METHOD /proxy/[namespaces/NS/]/RESOURCE/NAM[/PATH]#Only field in QOBJ is path PATH (first syntax only)


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:             EXEC              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


GET|POST /pods/NAME/attach                        #Uses QOBJ:
                                                  #  - stdin|stdout|stderr BOOL (def: false|true|true). Redirects the standard stream of the pod for this call.
                                                  #  - tty BOOL (def: false). TTY if true indicates that a tty will be allocated for the attach call. 
                                                  #    This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. 
                                                  #  - container CONTAINER: The container in which to execute the command. Defaults to only container if there is only one container in the pod.
GET|POST /pods/NAME/exec                          #Uses same QOBJ as /pods/NAME/attach, plus:
                                                  #  - command STR: remote command to execute. argv array. Not executed within a shell.

GET|POST /pods/NAME/portforward                   #Uses no QOBJ


                                             /=+===============================+=\ 
                                            /  :                               :  \  
                                            )==:              LOG              :==(   
                                            \  :_______________________________:  /    
                                             \=+===============================+=/


GET /pods/NAME/log                                #Uses QOBJ:
                                                  #  - pretty BOOL (def: false): see above
                                                  #  - container CONTAINER: The container for which to stream logs. Defaults to only container if there is one container in the pod.
                                                  #  - follow BOOL (def: false): Follow the log stream of the pod.
                                                  #  - previous BOOL (def: false): Return previous terminated container logs.
                                                  #  - sinceSeconds DATE_NUM: A relative time in seconds before the current time from which to show logs. 
                                                  #    If this value precedes the time a pod was started, only logs since the pod start will be returned. 
                                                  #    If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.
                                                  #  - sinceTime DATE: An RFC3339 timestamp from which to show logs. 
                                                  #    If this value precedes the time a pod was started, only logs since the pod start will be returned. 
                                                  #    If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.
                                                  #  - timestamps BOOL: If true (def: false), add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output.
                                                  #  - tailLines NUM: If set, the number of lines from the end of the logs to show. 
                                                  #    If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime
                                                  #  - limitBytes NUM: If set, the number of bytes to read from the server before terminating the log output. 
                                                  #    This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.
                                                  #Extra possible output type: text/plain (def)
