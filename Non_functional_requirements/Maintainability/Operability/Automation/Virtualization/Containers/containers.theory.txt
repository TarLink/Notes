
                
   CONTAINERS   
                



VIRTUALIZATION ==>                #Can be:
                                  #  - hardware/hypervisor (HVM):
                                  #     - emulate whole OS
                                  #     - e.g. VirtualBox, VMware Workstation, Xen HVM, KVM HVM
                                  #     - use AMD-V and Intel VT-x extensions to virtualize CPU
                                  #     - can be:
                                  #        - full: emulates everything
                                  #        - partial: older technologies before full virtualization was possible
                                  #  - paravirtualization (PV):
                                  #     - emulates whole OS
                                  #     - as opposed to HVM, guest OS is modified for improved performance
                                  #        - but recent progress closed the gap with HVM performance-wise
                                  #     - e.g. Xen PV, KVM PV
                                  #  - OS-level:
                                  #     - several separate environment that share same OS, i.e. lightweight and fast
                                  #        - separation: filesystem, processes, IPC, resources (CPU, memory, I/O), network, users|groups|permissions
                                  #     - example of underlying technologies:
                                  #        - chroot (Linux)
                                  #        - LXC (Linux)
                                  #     - containers: when those environment are single-application-centric

GOAL ==>                          #Isolation: ensure security of host
                                  #Modularity: increase operability and scalability
                                  #Predictability: ensure portability, including between environment types (dev, production, etc.) or PaaS providers
                                  #Interoperability: e.g. running Windows on Linux
                                  #Speed: can provision (i.e. boot and install software) build-time once instead of runtime at each run
