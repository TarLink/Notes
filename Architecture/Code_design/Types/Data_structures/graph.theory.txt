
         
   GRAPH  
         



ADJACENCY LIST ==>                #Representing a graph as an unordered array of [vertex, neighbors] pairs.
                                  #Can be implemented as:
                                  #  - a multimap with node as key and neighbors as values
                                  #  - a simple array of neighbors, where nodes are represented as indices

ADJACENCY MATRIX ==>              #Representing a graph as a square matrix:
                                  #  - columns represent child vertex, rows parent vertex
                                  #     - i.e. for undirected graphs, matrix is symmetric
                                  #  - cells are incremented if vertices are connected
                                  #     - for simple graphs: it is either 0 (no edge) or 1 (an edge)
                                  #     - for non-simple graphs:
                                  #        - it can be anything
                                  #        - loops increment by 2
                                  #"(a,b,c) adjacency matrix":
                                  #  - instead of incrementing cells, use b if there is no edge, a if there is an edge,
                                  #    c if there is a loop
                                  #  - i.e. normal adjacency matrix is a (1,0,2) adjacency matrix (for graphs with single edges)
                                  #  - "seidel [adjacency] matrix" is (-1,1,0) adjacency matrix

INCIDENCE MATRIX ==>              #

ARRAY ==>                         #Graph can be implemented as an array of nodes, when structure is known (e.g. binary tree)
