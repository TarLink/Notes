
                       
   RANDOM_ACCESS_ARRAY  
                       



RANDOM ACCESS ARRAY ==>           #Array where all items have same width.
                                  #Optimized for random access.

INDEX MAP ==>                     #Using a random access array to implement an associate array whose keys are integers.
                                  #  - as opposed to a regular array, index is conceptually not used as such,
                                  #    but as a key
                                  #  - e.g. retrieving name of months by using KEY 1-12
                                  #Also called "direct addressing" or "trivial hash function"
                                  #Is the most efficient way of accessing an associative array

CIRCULAR BUFFER ==>               #Implementation for a queue using a bounded-size array with:
                                  #  - a head|write|end pointer:
                                  #     - where push() adds value
                                  #     - incremented on push()
                                  #  - a tail|read|start pointer:
                                  #     - where shift() removes value
                                  #     - incremented on shift()
                                  #     - when end pointer passes start pointer:
                                  #        - i.e. when data is longer than bounded-size array
                                  #        - can either overwrite data or raise exception
                                  #  - both pointers rotates to start of array when at the end
                                  #Is conceptually like an array forming a circle.
                                  #push(), shift(), head(): O(1)
