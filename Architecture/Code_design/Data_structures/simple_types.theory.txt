
                
   SIMPLE_TYPES  
                



Simple types often used:
  - numbers:
     - integers:
        - can be unsigned or signed
        - representations:
           - binary, as is
           - BCD encoded (see its doc)
           - string of ASCII digits
     - floating point (see its doc)
     - fixed point (see its doc)

BCD ==>                 #BCD (Binary-coded decimal).
                        #Specific binary representation for integers.
                        #Make each byte === 1 digit, by padding 0s
                        #Pros: more human readable.
                        #Cons: takes more space. Not efficient. Not often used.
                        #"Packed" version removes any nibble 0000
                        #Some x86 instructions are reserved to BCD: AAA, AAX, etc.
                        #Example for "1934"
                        #  - Unpacked BCD  : 00000001 00010001 00000011 00000100
                        #  - Packed BCD    :              0001 00010001 00110100
                        #  - binair normal :                        100 11010010

INTEGER SIGNEDNESS ==>  #  - unsignedness: sign is not represented
                        #  - sign bit:
                        #     - most significant bit is 0 for +, 1 for -
                        #     - problem: discontinuity between 00000000 and 10000000
                        #  - 1's complement:
                        #     - like sign bit, but also bits are inverted if negative number
                        #     - problems:
                        #        - +0 and -0 have separate representations (00000000 et 11111111)
                        #        - adding two opposite numbers result in -0 (11111111) not +0 (00000000)
                        #  - 2's complement:
                        #     - like 1's complement, but 1 is added to negative numbers
                        #     - most commonly used
                        #
												#  +--------------+---------------+---------------+---------------+---------------+
												#  |    NUMBER    | UNSIGNEDNESS  | SIGN BIT      | 1's COMPLEMENT| 2's COMPLEMENT#
												#  +--------------+---------------+---------------+---------------+---------------+
												#  |     255      |   11111111 ff |   same        |   same        |   same        |
												#  |     ...      |      ...      |               |               |               |
												#  |     129      |   10000001    |               |               |               |
												#  |     128      |   10000000 80 |               |               |               |
												#  |     127      |   01111111 7f |               |               |               |
												#  |     ...      |      ...      |      ...      |      ...      |      ...      |
												#  |      +0      |   00000000  0 |   00000000  0 |   00000000  0 |   00000000  0 |
												#  |      -0      |               |   10000000 80 |   11111111 ff |               |
												#  |      -1      |               |   10000001    |   11111110    |   11111111 ff |
												#  |      -2      |               |   10000010    |   11111101    |   11111110    |
												#  |     ...      |               |      ...      |      ...      |      ...      |
												#  |    -127      |               |   11111111 ff |   10000000 80 |   10000001    |
												#  |    -128      |               |               |               |   10000000 80 |
												#  +--------------+---------------+---------------+---------------+---------------+
