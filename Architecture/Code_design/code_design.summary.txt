
               
   CODE_DESIGN  
               


Algorithms:
  - sorting:
     - comparison-based
     - types:
        - distribution: bucket sort (pigeonhole sort), counting sort, radix sort (LSD, MSD, american flag sort), bead sort
        - insertion: insertion sort, shell sort
        - selection: selection sort
        - exchange: bubble sort, bogosort
        - merge: merge sort
  - shuffling: sort shuffle, knuth shuffle
  - complexity: time vs space, constant, log-logarithmic, logarithmic, polylogarithmic, fractional power, linear, linearithmic,
    quadratic, cubic, polynomial, exponential, double-exponential, factorial
  - data structures:
     - serial: list, stack, queue, linked list
     - tree: binary tree (binary search tree)
     - graph
     - hash table
  - turing machines: instruction(state,input)->(write,move,state), universal (von neumann vs harvard)

Design patterns:
  - creational vs structural vs behavioral
  - software rot: dead code, boat anchor, old dependencies, legacy

Information theory:
  - message, signal, channel, noise, bit
  - channel coding, source coding, crypto, stego
  - entropy, hamming distance, hamming weight, levenshtein distance
